2025-03-12 19:34:34,270:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-12 19:34:34,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-12 19:34:34,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-12 19:34:34,271:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-12 19:34:59,670:INFO:PyCaret ClassificationExperiment
2025-03-12 19:34:59,670:INFO:Logging name: clf-default-name
2025-03-12 19:34:59,671:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-12 19:34:59,671:INFO:version 3.3.2
2025-03-12 19:34:59,671:INFO:Initializing setup()
2025-03-12 19:34:59,671:INFO:self.USI: 8a74
2025-03-12 19:34:59,671:INFO:self._variable_keys: {'gpu_n_jobs_param', 'y_train', 'pipeline', 'data', 'logging_param', 'y', 'n_jobs_param', 'seed', 'X', 'fold_shuffle_param', 'memory', 'exp_name_log', 'is_multiclass', 'y_test', 'log_plots_param', 'idx', 'fold_groups_param', 'html_param', 'USI', '_ml_usecase', 'fold_generator', 'fix_imbalance', 'X_test', 'X_train', 'exp_id', 'target_param', '_available_plots', 'gpu_param'}
2025-03-12 19:34:59,671:INFO:Checking environment
2025-03-12 19:34:59,671:INFO:python_version: 3.11.7
2025-03-12 19:34:59,671:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2025-03-12 19:34:59,671:INFO:machine: AMD64
2025-03-12 19:34:59,671:INFO:platform: Windows-10-10.0.22631-SP0
2025-03-12 19:34:59,680:INFO:Memory: svmem(total=7897944064, available=796016640, percent=89.9, used=7101927424, free=796016640)
2025-03-12 19:34:59,680:INFO:Physical Core: 4
2025-03-12 19:34:59,680:INFO:Logical Core: 8
2025-03-12 19:34:59,680:INFO:Checking libraries
2025-03-12 19:34:59,680:INFO:System:
2025-03-12 19:34:59,680:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2025-03-12 19:34:59,681:INFO:executable: c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\python.exe
2025-03-12 19:34:59,681:INFO:   machine: Windows-10-10.0.22631-SP0
2025-03-12 19:34:59,681:INFO:PyCaret required dependencies:
2025-03-12 19:35:03,058:INFO:                 pip: 24.0
2025-03-12 19:35:03,058:INFO:          setuptools: 75.8.0
2025-03-12 19:35:03,058:INFO:             pycaret: 3.3.2
2025-03-12 19:35:03,058:INFO:             IPython: 8.23.0
2025-03-12 19:35:03,058:INFO:          ipywidgets: 8.1.2
2025-03-12 19:35:03,058:INFO:                tqdm: 4.67.1
2025-03-12 19:35:03,058:INFO:               numpy: 1.26.4
2025-03-12 19:35:03,058:INFO:              pandas: 2.1.4
2025-03-12 19:35:03,058:INFO:              jinja2: 3.1.3
2025-03-12 19:35:03,058:INFO:               scipy: 1.11.4
2025-03-12 19:35:03,058:INFO:              joblib: 1.3.2
2025-03-12 19:35:03,058:INFO:             sklearn: 1.4.2
2025-03-12 19:35:03,058:INFO:                pyod: 1.1.3
2025-03-12 19:35:03,058:INFO:            imblearn: 0.12.2
2025-03-12 19:35:03,058:INFO:   category_encoders: 2.6.3
2025-03-12 19:35:03,058:INFO:            lightgbm: 4.3.0
2025-03-12 19:35:03,058:INFO:               numba: 0.59.1
2025-03-12 19:35:03,058:INFO:            requests: 2.32.3
2025-03-12 19:35:03,058:INFO:          matplotlib: 3.7.5
2025-03-12 19:35:03,058:INFO:          scikitplot: 0.3.7
2025-03-12 19:35:03,058:INFO:         yellowbrick: 1.5
2025-03-12 19:35:03,059:INFO:              plotly: 5.20.0
2025-03-12 19:35:03,059:INFO:    plotly-resampler: Not installed
2025-03-12 19:35:03,059:INFO:             kaleido: 0.2.1
2025-03-12 19:35:03,059:INFO:           schemdraw: 0.15
2025-03-12 19:35:03,059:INFO:         statsmodels: 0.14.1
2025-03-12 19:35:03,059:INFO:              sktime: 0.26.0
2025-03-12 19:35:03,059:INFO:               tbats: 1.1.3
2025-03-12 19:35:03,059:INFO:            pmdarima: 2.0.4
2025-03-12 19:35:03,059:INFO:              psutil: 5.9.8
2025-03-12 19:35:03,060:INFO:          markupsafe: 2.1.5
2025-03-12 19:35:03,060:INFO:             pickle5: Not installed
2025-03-12 19:35:03,060:INFO:         cloudpickle: 3.0.0
2025-03-12 19:35:03,060:INFO:         deprecation: 2.1.0
2025-03-12 19:35:03,060:INFO:              xxhash: 3.4.1
2025-03-12 19:35:03,060:INFO:           wurlitzer: Not installed
2025-03-12 19:35:03,060:INFO:PyCaret optional dependencies:
2025-03-12 19:35:08,979:INFO:                shap: 0.44.1
2025-03-12 19:35:08,979:INFO:           interpret: 0.6.7
2025-03-12 19:35:08,979:INFO:                umap: 0.5.7
2025-03-12 19:35:08,979:INFO:     ydata_profiling: 4.7.0
2025-03-12 19:35:08,979:INFO:  explainerdashboard: 0.4.7
2025-03-12 19:35:08,979:INFO:             autoviz: Not installed
2025-03-12 19:35:08,979:INFO:           fairlearn: 0.7.0
2025-03-12 19:35:08,980:INFO:          deepchecks: Not installed
2025-03-12 19:35:08,980:INFO:             xgboost: 2.0.3
2025-03-12 19:35:08,980:INFO:            catboost: 1.2.7
2025-03-12 19:35:08,980:INFO:              kmodes: 0.12.2
2025-03-12 19:35:08,980:INFO:             mlxtend: 0.23.1
2025-03-12 19:35:08,980:INFO:       statsforecast: 1.5.0
2025-03-12 19:35:08,980:INFO:        tune_sklearn: Not installed
2025-03-12 19:35:08,980:INFO:                 ray: Not installed
2025-03-12 19:35:08,980:INFO:            hyperopt: 0.2.7
2025-03-12 19:35:08,980:INFO:              optuna: 3.6.1
2025-03-12 19:35:08,980:INFO:               skopt: 0.10.2
2025-03-12 19:35:08,980:INFO:              mlflow: 2.11.3
2025-03-12 19:35:08,980:INFO:              gradio: 5.7.0
2025-03-12 19:35:08,980:INFO:             fastapi: 0.115.5
2025-03-12 19:35:08,980:INFO:             uvicorn: 0.29.0
2025-03-12 19:35:08,980:INFO:              m2cgen: 0.10.0
2025-03-12 19:35:08,980:INFO:           evidently: 0.4.40
2025-03-12 19:35:08,980:INFO:               fugue: 0.8.7
2025-03-12 19:35:08,980:INFO:           streamlit: 1.33.0
2025-03-12 19:35:08,980:INFO:             prophet: Not installed
2025-03-12 19:35:08,980:INFO:None
2025-03-12 19:35:08,980:INFO:Set up data.
2025-03-12 19:35:08,997:INFO:Set up folding strategy.
2025-03-12 19:35:08,998:INFO:Set up train/test split.
2025-03-12 19:35:09,008:INFO:Set up index.
2025-03-12 19:35:09,009:INFO:Assigning column types.
2025-03-12 19:35:09,012:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-12 19:35:09,049:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-12 19:35:09,053:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-12 19:35:09,088:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-12 19:35:09,090:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-12 19:35:17,275:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-12 19:35:17,276:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-12 19:35:17,298:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-12 19:35:17,301:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-12 19:35:17,301:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-12 19:35:17,339:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-12 19:35:17,362:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-12 19:35:17,365:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-12 19:35:17,407:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-12 19:35:17,430:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-12 19:35:17,433:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-12 19:35:17,433:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-12 19:35:17,493:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-12 19:35:17,496:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-12 19:35:17,559:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-12 19:35:17,562:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-12 19:35:17,564:INFO:Preparing preprocessing pipeline...
2025-03-12 19:35:17,571:INFO:Set up label encoding.
2025-03-12 19:35:17,571:INFO:Set up simple imputation.
2025-03-12 19:35:17,576:INFO:Set up encoding of ordinal features.
2025-03-12 19:35:17,578:INFO:Set up encoding of categorical features.
2025-03-12 19:35:17,579:INFO:Set up column name cleaning.
2025-03-12 19:35:17,749:INFO:Finished creating preprocessing pipeline.
2025-03-12 19:35:17,769:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ARDIAN~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                 TransformerWrapper(exclude=None, include=['Minat dan Bakat'],
                                    transformer=TargetEncoder(cols=['Minat dan '
                                                                    'Bakat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-03-12 19:35:17,769:INFO:Creating final display dataframe.
2025-03-12 19:35:18,038:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                  42  
1                                       Program Studi  
2                                          Multiclass  
3   Sains Data Terapan: 0, Sistem Pembangkitan Ene...  
4                                            (100, 6)  
5                                           (100, 16)  
6                                            (70, 16)  
7                                            (30, 16)  
8                                                   1  
9                                                   4  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                 25  
15                                               None  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               8a74  
2025-03-12 19:35:18,114:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-12 19:35:18,117:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-12 19:35:18,182:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-12 19:35:18,184:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-12 19:35:18,186:INFO:setup() successfully completed in 18.57s...............
2025-03-12 19:35:18,186:INFO:Initializing compare_models()
2025-03-12 19:35:18,186:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-03-12 19:35:18,186:INFO:Checking exceptions
2025-03-12 19:35:18,190:INFO:Preparing display monitor
2025-03-12 19:35:18,214:INFO:Initializing Logistic Regression
2025-03-12 19:35:18,214:INFO:Total runtime is 0.0 minutes
2025-03-12 19:35:18,219:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:18,220:INFO:Initializing create_model()
2025-03-12 19:35:18,220:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:18,220:INFO:Checking exceptions
2025-03-12 19:35:18,220:INFO:Importing libraries
2025-03-12 19:35:18,220:INFO:Copying training dataset
2025-03-12 19:35:18,225:INFO:Defining folds
2025-03-12 19:35:18,225:INFO:Declaring metric variables
2025-03-12 19:35:18,229:INFO:Importing untrained model
2025-03-12 19:35:18,233:INFO:Logistic Regression Imported successfully
2025-03-12 19:35:18,242:INFO:Starting cross validation
2025-03-12 19:35:18,245:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:18,269:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:29,732:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-12 19:35:29,788:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-12 19:35:29,794:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-12 19:35:29,871:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-12 19:35:29,906:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:29,910:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:29,912:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:29,915:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:29,917:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:29,918:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:29,915:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:29,921:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:29,924:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:29,926:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:29,930:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:29,940:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:29,947:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:29,949:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:29,951:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:29,951:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:29,954:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:29,954:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:29,955:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:29,957:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:29,959:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:29,959:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:29,967:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:29,970:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:29,972:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:29,974:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:29,977:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:29,979:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,048:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-12 19:35:30,078:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-12 19:35:30,124:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:30,128:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,130:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,132:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,133:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,152:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-12 19:35:30,166:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,167:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,180:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:30,186:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,188:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,191:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-12 19:35:30,193:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,195:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,198:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,200:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,222:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:30,226:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,228:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,231:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,233:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,235:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,236:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,241:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:30,252:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,261:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,263:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,265:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,267:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,270:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,519:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-12 19:35:30,530:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-12 19:35:30,543:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:30,546:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,546:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,547:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,548:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,550:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,551:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,558:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:30,560:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,560:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,562:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,563:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,563:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:30,564:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:30,578:INFO:Calculating mean and std
2025-03-12 19:35:30,582:INFO:Creating metrics dataframe
2025-03-12 19:35:30,585:INFO:Uploading results into container
2025-03-12 19:35:30,586:INFO:Uploading model into container now
2025-03-12 19:35:30,586:INFO:_master_model_container: 1
2025-03-12 19:35:30,587:INFO:_display_container: 2
2025-03-12 19:35:30,587:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-12 19:35:30,587:INFO:create_model() successfully completed......................................
2025-03-12 19:35:30,778:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:30,779:INFO:Creating metrics dataframe
2025-03-12 19:35:30,784:INFO:Initializing K Neighbors Classifier
2025-03-12 19:35:30,784:INFO:Total runtime is 0.20950640439987184 minutes
2025-03-12 19:35:30,788:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:30,788:INFO:Initializing create_model()
2025-03-12 19:35:30,788:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:30,788:INFO:Checking exceptions
2025-03-12 19:35:30,789:INFO:Importing libraries
2025-03-12 19:35:30,789:INFO:Copying training dataset
2025-03-12 19:35:30,792:INFO:Defining folds
2025-03-12 19:35:30,793:INFO:Declaring metric variables
2025-03-12 19:35:30,795:INFO:Importing untrained model
2025-03-12 19:35:30,799:INFO:K Neighbors Classifier Imported successfully
2025-03-12 19:35:30,810:INFO:Starting cross validation
2025-03-12 19:35:30,813:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:30,817:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:31,332:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:31,335:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:31,337:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:31,338:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,340:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,340:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,341:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,343:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,344:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,346:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,346:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,347:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,348:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,351:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,351:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,353:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,354:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,358:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,360:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:31,361:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,367:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,367:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,371:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,380:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:31,381:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,382:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:31,382:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,385:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,387:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,387:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,388:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,390:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,390:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

len(result))

2025-03-12 19:35:31,393:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,394:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,395:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,399:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,402:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,404:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,407:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,453:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:31,455:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,457:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,460:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,463:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,463:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:31,465:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,465:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,468:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,468:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,471:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,473:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,475:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,477:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,570:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:31,572:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,573:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,575:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,576:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,577:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,578:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,585:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:31,587:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,588:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,590:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,593:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,596:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:31,597:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:31,628:INFO:Calculating mean and std
2025-03-12 19:35:31,631:INFO:Creating metrics dataframe
2025-03-12 19:35:31,634:INFO:Uploading results into container
2025-03-12 19:35:31,636:INFO:Uploading model into container now
2025-03-12 19:35:31,636:INFO:_master_model_container: 2
2025-03-12 19:35:31,636:INFO:_display_container: 2
2025-03-12 19:35:31,637:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-12 19:35:31,637:INFO:create_model() successfully completed......................................
2025-03-12 19:35:31,852:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:31,852:INFO:Creating metrics dataframe
2025-03-12 19:35:31,861:INFO:Initializing Naive Bayes
2025-03-12 19:35:31,861:INFO:Total runtime is 0.2274504582087199 minutes
2025-03-12 19:35:31,865:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:31,865:INFO:Initializing create_model()
2025-03-12 19:35:31,865:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:31,865:INFO:Checking exceptions
2025-03-12 19:35:31,865:INFO:Importing libraries
2025-03-12 19:35:31,865:INFO:Copying training dataset
2025-03-12 19:35:31,869:INFO:Defining folds
2025-03-12 19:35:31,869:INFO:Declaring metric variables
2025-03-12 19:35:31,873:INFO:Importing untrained model
2025-03-12 19:35:31,876:INFO:Naive Bayes Imported successfully
2025-03-12 19:35:31,885:INFO:Starting cross validation
2025-03-12 19:35:31,888:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:31,892:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:32,054:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,055:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,058:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,060:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,062:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,062:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,062:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,062:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,064:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,064:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,065:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,065:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,066:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,066:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,066:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,066:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,067:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,069:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,069:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,070:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,070:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,071:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,072:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,073:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,074:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,074:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,075:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,075:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,075:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,075:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,076:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,076:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,076:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,078:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,078:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,079:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,079:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,081:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,082:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,083:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,083:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,084:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,085:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,085:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,086:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,087:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,087:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,087:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,092:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,094:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,095:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,096:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,097:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,097:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,099:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,156:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,157:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,158:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,159:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,160:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,160:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,161:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,162:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,163:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,163:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,164:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,165:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,166:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,167:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,172:INFO:Calculating mean and std
2025-03-12 19:35:32,173:INFO:Creating metrics dataframe
2025-03-12 19:35:32,175:INFO:Uploading results into container
2025-03-12 19:35:32,175:INFO:Uploading model into container now
2025-03-12 19:35:32,175:INFO:_master_model_container: 3
2025-03-12 19:35:32,175:INFO:_display_container: 2
2025-03-12 19:35:32,176:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-12 19:35:32,176:INFO:create_model() successfully completed......................................
2025-03-12 19:35:32,351:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:32,351:INFO:Creating metrics dataframe
2025-03-12 19:35:32,357:INFO:Initializing Decision Tree Classifier
2025-03-12 19:35:32,357:INFO:Total runtime is 0.23571860392888389 minutes
2025-03-12 19:35:32,362:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:32,362:INFO:Initializing create_model()
2025-03-12 19:35:32,362:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:32,362:INFO:Checking exceptions
2025-03-12 19:35:32,362:INFO:Importing libraries
2025-03-12 19:35:32,362:INFO:Copying training dataset
2025-03-12 19:35:32,367:INFO:Defining folds
2025-03-12 19:35:32,368:INFO:Declaring metric variables
2025-03-12 19:35:32,370:INFO:Importing untrained model
2025-03-12 19:35:32,373:INFO:Decision Tree Classifier Imported successfully
2025-03-12 19:35:32,381:INFO:Starting cross validation
2025-03-12 19:35:32,384:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:32,389:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:32,553:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,555:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,555:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,556:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,557:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,557:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,559:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,559:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,560:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,560:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,561:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,561:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,561:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,562:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,562:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,563:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,563:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,563:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,563:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,564:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,565:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

5:32,565:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

)} is", len(result))

2025-03-12 19:35:32,567:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,567:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,568:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,568:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,568:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,568:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,569:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,569:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,569:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,569:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,570:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,571:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,573:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,573:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,573:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,574:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,575:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,576:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,578:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,582:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,583:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,585:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,586:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,587:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,588:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,589:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,591:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,593:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,594:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,595:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,656:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,658:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

c, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:32,660:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,660:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,661:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,661:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,662:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,663:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,664:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,665:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,666:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,667:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:32,668:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:32,674:INFO:Calculating mean and std
2025-03-12 19:35:32,675:INFO:Creating metrics dataframe
2025-03-12 19:35:32,677:INFO:Uploading results into container
2025-03-12 19:35:32,677:INFO:Uploading model into container now
2025-03-12 19:35:32,678:INFO:_master_model_container: 4
2025-03-12 19:35:32,678:INFO:_display_container: 2
2025-03-12 19:35:32,678:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-12 19:35:32,678:INFO:create_model() successfully completed......................................
2025-03-12 19:35:32,865:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:32,865:INFO:Creating metrics dataframe
2025-03-12 19:35:32,873:INFO:Initializing SVM - Linear Kernel
2025-03-12 19:35:32,873:INFO:Total runtime is 0.2443165421485901 minutes
2025-03-12 19:35:32,877:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:32,877:INFO:Initializing create_model()
2025-03-12 19:35:32,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:32,877:INFO:Checking exceptions
2025-03-12 19:35:32,878:INFO:Importing libraries
2025-03-12 19:35:32,878:INFO:Copying training dataset
2025-03-12 19:35:32,881:INFO:Defining folds
2025-03-12 19:35:32,882:INFO:Declaring metric variables
2025-03-12 19:35:32,886:INFO:Importing untrained model
2025-03-12 19:35:32,889:INFO:SVM - Linear Kernel Imported successfully
2025-03-12 19:35:32,897:INFO:Starting cross validation
2025-03-12 19:35:32,900:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:32,905:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:33,106:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:33,109:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,109:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,110:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:33,111:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,111:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,112:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:33,113:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,113:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,113:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:33,114:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,115:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,115:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,115:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,116:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,116:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,117:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,117:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,117:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,117:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,118:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,119:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,119:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,119:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:33,120:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,121:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,121:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,122:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", l2025-03-12 19:35:33,122:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,122:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,123:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,124:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,124:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,128:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,129:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,129:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,130:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,130:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,131:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,133:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,136:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:33,139:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,143:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,146:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,148:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,151:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,152:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,173:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:33,175:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,178:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,181:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,184:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,187:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,191:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,309:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:33,310:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,311:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,314:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,315:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

at the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:33,316:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,316:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,317:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,317:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,318:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,320:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,322:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:33,323:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:33,333:INFO:Calculating mean and std
2025-03-12 19:35:33,336:INFO:Creating metrics dataframe
2025-03-12 19:35:33,345:INFO:Uploading results into container
2025-03-12 19:35:33,347:INFO:Uploading model into container now
2025-03-12 19:35:33,348:INFO:_master_model_container: 5
2025-03-12 19:35:33,348:INFO:_display_container: 2
2025-03-12 19:35:33,349:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-12 19:35:33,349:INFO:create_model() successfully completed......................................
2025-03-12 19:35:33,688:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:33,689:INFO:Creating metrics dataframe
2025-03-12 19:35:33,697:INFO:Initializing Ridge Classifier
2025-03-12 19:35:33,698:INFO:Total runtime is 0.25806870460510256 minutes
2025-03-12 19:35:33,701:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:33,702:INFO:Initializing create_model()
2025-03-12 19:35:33,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:33,702:INFO:Checking exceptions
2025-03-12 19:35:33,702:INFO:Importing libraries
2025-03-12 19:35:33,702:INFO:Copying training dataset
2025-03-12 19:35:33,708:INFO:Defining folds
2025-03-12 19:35:33,709:INFO:Declaring metric variables
2025-03-12 19:35:33,726:INFO:Importing untrained model
2025-03-12 19:35:33,762:INFO:Ridge Classifier Imported successfully
2025-03-12 19:35:33,794:INFO:Starting cross validation
2025-03-12 19:35:33,797:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:33,801:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:34,077:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:34,080:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,082:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,084:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,088:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,093:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,095:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,100:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:34,102:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,105:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,109:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,111:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,116:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,117:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:34,118:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,125:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:34,125:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,129:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,129:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,133:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,135:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,137:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,138:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,140:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,141:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,143:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,151:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,153:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,157:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:34,162:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,164:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,170:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,173:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,178:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:34,178:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,180:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,187:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,194:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,195:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:34,194:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:34,199:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,200:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,203:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,203:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,205:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,205:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,207:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,207:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,209:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,209:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,209:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,211:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,212:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,213:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,216:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,218:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,315:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:34,317:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,319:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,320:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:34,321:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,321:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,322:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,322:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,324:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,324:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,324:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,324:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,326:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:34,327:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:34,340:INFO:Calculating mean and std
2025-03-12 19:35:34,341:INFO:Creating metrics dataframe
2025-03-12 19:35:34,343:INFO:Uploading results into container
2025-03-12 19:35:34,344:INFO:Uploading model into container now
2025-03-12 19:35:34,345:INFO:_master_model_container: 6
2025-03-12 19:35:34,345:INFO:_display_container: 2
2025-03-12 19:35:34,345:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-03-12 19:35:34,345:INFO:create_model() successfully completed......................................
2025-03-12 19:35:34,535:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:34,535:INFO:Creating metrics dataframe
2025-03-12 19:35:34,542:INFO:Initializing Random Forest Classifier
2025-03-12 19:35:34,542:INFO:Total runtime is 0.2721311012903849 minutes
2025-03-12 19:35:34,545:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:34,546:INFO:Initializing create_model()
2025-03-12 19:35:34,546:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:34,546:INFO:Checking exceptions
2025-03-12 19:35:34,546:INFO:Importing libraries
2025-03-12 19:35:34,546:INFO:Copying training dataset
2025-03-12 19:35:34,550:INFO:Defining folds
2025-03-12 19:35:34,550:INFO:Declaring metric variables
2025-03-12 19:35:34,552:INFO:Importing untrained model
2025-03-12 19:35:34,556:INFO:Random Forest Classifier Imported successfully
2025-03-12 19:35:34,565:INFO:Starting cross validation
2025-03-12 19:35:34,568:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:34,572:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:35,101:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:35,103:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:35,103:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,105:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,105:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:35,105:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,107:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,107:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,107:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,108:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,109:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,110:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:35,110:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,111:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,111:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,111:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,113:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

at the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:35,113:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,112:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,114:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,115:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,115:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,116:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,117:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,117:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,117:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,118:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,119:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,119:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:35,119:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,121:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,121:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,123:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,124:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,125:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,125:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,126:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,126:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,127:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,130:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,132:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,138:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:35,140:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,141:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,143:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,144:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,146:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,146:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,172:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:35,173:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,174:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,176:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,177:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,179:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,179:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,364:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:35,366:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,366:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:35,367:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,367:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,369:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,370:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,370:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,372:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,372:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,373:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,373:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,375:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,386:INFO:Calculating mean and std
2025-03-12 19:35:35,387:INFO:Creating metrics dataframe
2025-03-12 19:35:35,388:INFO:Uploading results into container
2025-03-12 19:35:35,388:INFO:Uploading model into container now
2025-03-12 19:35:35,388:INFO:_master_model_container: 7
2025-03-12 19:35:35,388:INFO:_display_container: 2
2025-03-12 19:35:35,389:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-03-12 19:35:35,389:INFO:create_model() successfully completed......................................
2025-03-12 19:35:35,563:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:35,565:INFO:Creating metrics dataframe
2025-03-12 19:35:35,571:INFO:Initializing Quadratic Discriminant Analysis
2025-03-12 19:35:35,571:INFO:Total runtime is 0.2892889777819316 minutes
2025-03-12 19:35:35,574:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:35,575:INFO:Initializing create_model()
2025-03-12 19:35:35,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:35,575:INFO:Checking exceptions
2025-03-12 19:35:35,575:INFO:Importing libraries
2025-03-12 19:35:35,575:INFO:Copying training dataset
2025-03-12 19:35:35,578:INFO:Defining folds
2025-03-12 19:35:35,579:INFO:Declaring metric variables
2025-03-12 19:35:35,582:INFO:Importing untrained model
2025-03-12 19:35:35,584:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-12 19:35:35,593:INFO:Starting cross validation
2025-03-12 19:35:35,595:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:35,597:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:35,737:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-12 19:35:35,737:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-12 19:35:35,738:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-12 19:35:35,738:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-12 19:35:35,738:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-12 19:35:35,740:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-12 19:35:35,748:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-12 19:35:35,784:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:35,785:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:35,786:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,787:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,788:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:35,788:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:35,790:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,790:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:35,790:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,791:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,791:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,791:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,792:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,792:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,792:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,792:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:35,793:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,793:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,794:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,795:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,795:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,795:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,795:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,796:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,796:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,796:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,797:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,798:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,798:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,798:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,798:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,798:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,799:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,799:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,799:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,800:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,801:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,802:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,803:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,804:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,804:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,804:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,806:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,807:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,807:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:35,808:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,809:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,809:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,810:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,812:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,813:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,816:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,817:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,874:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-12 19:35:35,881:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-12 19:35:35,906:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:35,907:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,908:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,909:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,910:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,911:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:35,911:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,912:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

talize()} is", len(result))

2025-03-12 19:35:35,913:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,914:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,915:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,916:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:35,917:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:35,931:INFO:Calculating mean and std
2025-03-12 19:35:35,932:INFO:Creating metrics dataframe
2025-03-12 19:35:35,934:INFO:Uploading results into container
2025-03-12 19:35:35,935:INFO:Uploading model into container now
2025-03-12 19:35:35,935:INFO:_master_model_container: 8
2025-03-12 19:35:35,935:INFO:_display_container: 2
2025-03-12 19:35:35,935:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-12 19:35:35,935:INFO:create_model() successfully completed......................................
2025-03-12 19:35:36,114:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:36,114:INFO:Creating metrics dataframe
2025-03-12 19:35:36,120:INFO:Initializing Ada Boost Classifier
2025-03-12 19:35:36,120:INFO:Total runtime is 0.2984440326690674 minutes
2025-03-12 19:35:36,123:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:36,123:INFO:Initializing create_model()
2025-03-12 19:35:36,123:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:36,123:INFO:Checking exceptions
2025-03-12 19:35:36,123:INFO:Importing libraries
2025-03-12 19:35:36,123:INFO:Copying training dataset
2025-03-12 19:35:36,127:INFO:Defining folds
2025-03-12 19:35:36,127:INFO:Declaring metric variables
2025-03-12 19:35:36,130:INFO:Importing untrained model
2025-03-12 19:35:36,134:INFO:Ada Boost Classifier Imported successfully
2025-03-12 19:35:36,144:INFO:Starting cross validation
2025-03-12 19:35:36,147:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:36,152:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:36,300:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-12 19:35:36,300:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-12 19:35:36,300:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-12 19:35:36,302:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-12 19:35:36,303:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-12 19:35:36,303:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-12 19:35:36,304:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-12 19:35:36,467:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:36,468:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:36,469:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,470:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:36,471:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,472:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,472:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,473:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,475:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,475:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,475:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,477:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,477:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,478:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,478:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,478:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,478:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,482:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,482:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,484:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,499:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:36,499:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:36,502:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,504:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,504:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,505:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,506:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,506:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:36,507:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,507:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,508:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,508:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,510:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,510:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,513:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,514:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,514:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,516:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:36,518:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,518:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,519:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,519:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,519:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,522:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,523:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,526:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,527:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,533:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:36,534:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,534:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,536:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,537:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,538:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,540:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,557:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-12 19:35:36,559:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-12 19:35:36,644:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:36,646:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,646:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,647:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:36,647:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,648:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,648:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,649:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,649:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,651:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,651:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,651:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,652:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:36,653:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:36,666:INFO:Calculating mean and std
2025-03-12 19:35:36,667:INFO:Creating metrics dataframe
2025-03-12 19:35:36,669:INFO:Uploading results into container
2025-03-12 19:35:36,669:INFO:Uploading model into container now
2025-03-12 19:35:36,669:INFO:_master_model_container: 9
2025-03-12 19:35:36,669:INFO:_display_container: 2
2025-03-12 19:35:36,669:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-03-12 19:35:36,669:INFO:create_model() successfully completed......................................
2025-03-12 19:35:36,850:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:36,850:INFO:Creating metrics dataframe
2025-03-12 19:35:36,859:INFO:Initializing Gradient Boosting Classifier
2025-03-12 19:35:36,859:INFO:Total runtime is 0.3107454697291056 minutes
2025-03-12 19:35:36,861:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:36,861:INFO:Initializing create_model()
2025-03-12 19:35:36,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:36,863:INFO:Checking exceptions
2025-03-12 19:35:36,863:INFO:Importing libraries
2025-03-12 19:35:36,863:INFO:Copying training dataset
2025-03-12 19:35:36,868:INFO:Defining folds
2025-03-12 19:35:36,868:INFO:Declaring metric variables
2025-03-12 19:35:36,872:INFO:Importing untrained model
2025-03-12 19:35:36,876:INFO:Gradient Boosting Classifier Imported successfully
2025-03-12 19:35:36,888:INFO:Starting cross validation
2025-03-12 19:35:36,891:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:36,896:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:38,607:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:38,609:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,610:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,614:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,615:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,617:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,619:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,639:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:38,643:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,645:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,649:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,650:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,652:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,655:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,682:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:38,684:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,687:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,687:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:38,690:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,692:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,693:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,694:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,695:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,696:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,696:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:38,697:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,698:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,698:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,699:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,699:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,699:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,701:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,703:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,705:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,708:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,708:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:38,711:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,713:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,715:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,718:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,721:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,722:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,725:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:38,728:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,732:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,734:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,738:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,740:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,742:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,827:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:38,828:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,829:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,830:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,832:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:38,833:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:38,834:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:39,569:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:39,570:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:39,571:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:39,572:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:39,574:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:39,574:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:39,575:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:39,611:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:39,612:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:39,614:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:39,615:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:39,616:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:39,616:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:39,618:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:39,627:INFO:Calculating mean and std
2025-03-12 19:35:39,628:INFO:Creating metrics dataframe
2025-03-12 19:35:39,630:INFO:Uploading results into container
2025-03-12 19:35:39,630:INFO:Uploading model into container now
2025-03-12 19:35:39,630:INFO:_master_model_container: 10
2025-03-12 19:35:39,630:INFO:_display_container: 2
2025-03-12 19:35:39,631:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-12 19:35:39,631:INFO:create_model() successfully completed......................................
2025-03-12 19:35:39,811:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:39,811:INFO:Creating metrics dataframe
2025-03-12 19:35:39,820:INFO:Initializing Linear Discriminant Analysis
2025-03-12 19:35:39,820:INFO:Total runtime is 0.3600961049397786 minutes
2025-03-12 19:35:39,824:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:39,825:INFO:Initializing create_model()
2025-03-12 19:35:39,825:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:39,825:INFO:Checking exceptions
2025-03-12 19:35:39,825:INFO:Importing libraries
2025-03-12 19:35:39,825:INFO:Copying training dataset
2025-03-12 19:35:39,827:INFO:Defining folds
2025-03-12 19:35:39,828:INFO:Declaring metric variables
2025-03-12 19:35:39,832:INFO:Importing untrained model
2025-03-12 19:35:39,838:INFO:Linear Discriminant Analysis Imported successfully
2025-03-12 19:35:39,846:INFO:Starting cross validation
2025-03-12 19:35:39,849:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:39,853:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:40,023:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:40,026:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,027:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,028:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:40,028:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:40,029:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:40,030:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,031:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,031:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,032:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

len(result))

2025-03-12 19:35:40,032:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,032:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,033:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,034:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,034:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,035:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:40,035:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,035:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

)} is", len(result))

2025-03-12 19:35:40,036:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,037:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,037:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,038:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,038:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:40,038:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:40,039:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,039:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

len(result))

2025-03-12 19:35:40,040:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,040:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,041:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,041:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,041:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,042:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,043:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,045:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,047:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,047:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,047:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,048:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,049:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:40,051:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,051:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,052:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,053:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,053:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,053:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,054:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,054:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,056:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,057:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,059:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,061:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,141:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:40,143:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,144:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,144:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,146:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,147:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-12 19:35:40,148:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,148:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,149:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,149:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,150:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,151:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,152:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,153:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,167:INFO:Calculating mean and std
2025-03-12 19:35:40,169:INFO:Creating metrics dataframe
2025-03-12 19:35:40,170:INFO:Uploading results into container
2025-03-12 19:35:40,171:INFO:Uploading model into container now
2025-03-12 19:35:40,171:INFO:_master_model_container: 11
2025-03-12 19:35:40,171:INFO:_display_container: 2
2025-03-12 19:35:40,171:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-12 19:35:40,171:INFO:create_model() successfully completed......................................
2025-03-12 19:35:40,346:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:40,348:INFO:Creating metrics dataframe
2025-03-12 19:35:40,357:INFO:Initializing Extra Trees Classifier
2025-03-12 19:35:40,357:INFO:Total runtime is 0.36905746459960936 minutes
2025-03-12 19:35:40,360:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:40,361:INFO:Initializing create_model()
2025-03-12 19:35:40,361:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:40,361:INFO:Checking exceptions
2025-03-12 19:35:40,361:INFO:Importing libraries
2025-03-12 19:35:40,362:INFO:Copying training dataset
2025-03-12 19:35:40,366:INFO:Defining folds
2025-03-12 19:35:40,366:INFO:Declaring metric variables
2025-03-12 19:35:40,368:INFO:Importing untrained model
2025-03-12 19:35:40,373:INFO:Extra Trees Classifier Imported successfully
2025-03-12 19:35:40,381:INFO:Starting cross validation
2025-03-12 19:35:40,384:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:40,387:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:40,794:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:40,796:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,797:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,800:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,800:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:40,802:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,802:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,804:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,804:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,805:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:40,805:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,805:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,806:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:40,807:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,807:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,808:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,809:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,809:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,809:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,811:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,812:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,812:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,814:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,814:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,817:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,817:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,819:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,819:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,844:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:40,846:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,847:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,851:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,853:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,853:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:40,855:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,856:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,857:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,857:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,861:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,862:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,865:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,866:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,872:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:40,873:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,874:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,877:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,878:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,879:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,880:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,912:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:40,913:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,915:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,917:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,918:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:40,920:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:40,921:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,050:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:41,052:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,052:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,054:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,055:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,056:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,056:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,059:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:41,061:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,062:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,064:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,065:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,066:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,066:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,071:INFO:Calculating mean and std
2025-03-12 19:35:41,071:INFO:Creating metrics dataframe
2025-03-12 19:35:41,074:INFO:Uploading results into container
2025-03-12 19:35:41,075:INFO:Uploading model into container now
2025-03-12 19:35:41,075:INFO:_master_model_container: 12
2025-03-12 19:35:41,075:INFO:_display_container: 2
2025-03-12 19:35:41,075:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-12 19:35:41,075:INFO:create_model() successfully completed......................................
2025-03-12 19:35:41,254:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:41,254:INFO:Creating metrics dataframe
2025-03-12 19:35:41,261:INFO:Initializing Extreme Gradient Boosting
2025-03-12 19:35:41,261:INFO:Total runtime is 0.3841254711151123 minutes
2025-03-12 19:35:41,264:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:41,265:INFO:Initializing create_model()
2025-03-12 19:35:41,265:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:41,265:INFO:Checking exceptions
2025-03-12 19:35:41,265:INFO:Importing libraries
2025-03-12 19:35:41,265:INFO:Copying training dataset
2025-03-12 19:35:41,268:INFO:Defining folds
2025-03-12 19:35:41,268:INFO:Declaring metric variables
2025-03-12 19:35:41,271:INFO:Importing untrained model
2025-03-12 19:35:41,274:INFO:Extreme Gradient Boosting Imported successfully
2025-03-12 19:35:41,279:INFO:Starting cross validation
2025-03-12 19:35:41,282:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:41,285:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:41,804:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:41,806:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,808:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,809:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:41,811:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,811:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,812:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,813:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,815:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,816:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,817:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,818:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,820:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,825:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,828:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:41,829:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:41,830:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

c, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:41,832:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,832:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,833:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,835:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,835:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,835:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,836:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:41,836:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,836:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,838:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,838:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,839:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,839:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,839:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,839:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,841:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,841:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,843:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,843:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,844:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,845:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,846:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,848:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,850:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,865:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:41,865:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:41,866:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,867:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,867:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,867:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,868:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,868:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,869:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,870:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,871:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,872:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:41,872:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:41,873:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:42,032:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:42,033:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:42,034:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:42,035:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:42,035:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:42,037:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:42,038:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:42,038:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:42,039:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:42,039:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:42,040:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:42,040:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:42,040:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:42,041:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:42,045:INFO:Calculating mean and std
2025-03-12 19:35:42,046:INFO:Creating metrics dataframe
2025-03-12 19:35:42,047:INFO:Uploading results into container
2025-03-12 19:35:42,048:INFO:Uploading model into container now
2025-03-12 19:35:42,048:INFO:_master_model_container: 13
2025-03-12 19:35:42,048:INFO:_display_container: 2
2025-03-12 19:35:42,049:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-03-12 19:35:42,049:INFO:create_model() successfully completed......................................
2025-03-12 19:35:42,229:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:42,230:INFO:Creating metrics dataframe
2025-03-12 19:35:42,238:INFO:Initializing Light Gradient Boosting Machine
2025-03-12 19:35:42,238:INFO:Total runtime is 0.4003971815109253 minutes
2025-03-12 19:35:42,241:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:42,241:INFO:Initializing create_model()
2025-03-12 19:35:42,241:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:42,241:INFO:Checking exceptions
2025-03-12 19:35:42,241:INFO:Importing libraries
2025-03-12 19:35:42,241:INFO:Copying training dataset
2025-03-12 19:35:42,244:INFO:Defining folds
2025-03-12 19:35:42,245:INFO:Declaring metric variables
2025-03-12 19:35:42,247:INFO:Importing untrained model
2025-03-12 19:35:42,249:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-12 19:35:42,255:INFO:Starting cross validation
2025-03-12 19:35:42,258:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:42,261:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:43,057:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:43,059:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,060:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,061:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,063:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,065:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,066:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:43,067:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,067:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,068:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,070:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,073:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,075:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,077:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,094:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:43,096:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,099:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,101:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,103:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,104:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,106:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,126:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:43,128:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,130:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,132:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,133:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,135:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,136:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,272:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:43,274:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,275:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,277:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,279:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,280:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,283:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,309:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:43,311:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,312:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,315:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,316:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,317:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:43,318:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,319:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,320:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,320:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,322:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,324:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,325:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,327:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,357:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:43,359:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,361:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,363:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,364:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,366:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,367:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,550:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:43,552:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,553:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,555:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,556:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:43,557:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,558:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,558:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,560:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,560:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,561:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,562:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,564:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:43,564:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:43,576:INFO:Calculating mean and std
2025-03-12 19:35:43,578:INFO:Creating metrics dataframe
2025-03-12 19:35:43,581:INFO:Uploading results into container
2025-03-12 19:35:43,582:INFO:Uploading model into container now
2025-03-12 19:35:43,582:INFO:_master_model_container: 14
2025-03-12 19:35:43,582:INFO:_display_container: 2
2025-03-12 19:35:43,583:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-12 19:35:43,584:INFO:create_model() successfully completed......................................
2025-03-12 19:35:43,788:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:43,789:INFO:Creating metrics dataframe
2025-03-12 19:35:43,795:INFO:Initializing CatBoost Classifier
2025-03-12 19:35:43,795:INFO:Total runtime is 0.426353653271993 minutes
2025-03-12 19:35:43,798:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:43,798:INFO:Initializing create_model()
2025-03-12 19:35:43,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:43,799:INFO:Checking exceptions
2025-03-12 19:35:43,799:INFO:Importing libraries
2025-03-12 19:35:43,799:INFO:Copying training dataset
2025-03-12 19:35:43,804:INFO:Defining folds
2025-03-12 19:35:43,805:INFO:Declaring metric variables
2025-03-12 19:35:43,808:INFO:Importing untrained model
2025-03-12 19:35:43,814:INFO:CatBoost Classifier Imported successfully
2025-03-12 19:35:43,823:INFO:Starting cross validation
2025-03-12 19:35:43,824:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:43,829:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:51,350:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:51,356:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:51,358:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,358:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,361:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,364:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,365:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:51,367:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,367:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,369:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,369:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,371:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,371:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,372:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,373:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,373:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,373:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,378:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,378:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,380:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,380:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,537:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:51,540:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,544:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,550:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,553:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,562:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,565:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,753:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:51,756:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,758:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,761:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,762:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,765:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,766:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,847:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:51,850:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,851:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,857:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,861:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,865:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,867:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,984:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:51,987:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,988:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,992:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,994:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:51,996:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:51,998:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:52,038:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:52,040:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:52,042:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:52,045:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:52,047:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:52,049:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:52,051:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:53,753:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:53,755:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:53,772:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:53,773:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:53,774:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:53,775:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:53,776:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:53,783:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:53,784:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:53,785:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:53,786:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:53,787:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:53,788:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:53,789:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:53,799:INFO:Calculating mean and std
2025-03-12 19:35:53,800:INFO:Creating metrics dataframe
2025-03-12 19:35:53,801:INFO:Uploading results into container
2025-03-12 19:35:53,802:INFO:Uploading model into container now
2025-03-12 19:35:53,803:INFO:_master_model_container: 15
2025-03-12 19:35:53,803:INFO:_display_container: 2
2025-03-12 19:35:53,803:INFO:<catboost.core.CatBoostClassifier object at 0x000001E47B1C63D0>
2025-03-12 19:35:53,803:INFO:create_model() successfully completed......................................
2025-03-12 19:35:53,986:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:53,986:INFO:Creating metrics dataframe
2025-03-12 19:35:53,996:INFO:Initializing Dummy Classifier
2025-03-12 19:35:53,996:INFO:Total runtime is 0.5963696122169495 minutes
2025-03-12 19:35:53,999:INFO:SubProcess create_model() called ==================================
2025-03-12 19:35:53,999:INFO:Initializing create_model()
2025-03-12 19:35:53,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001E47BA67050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:54,000:INFO:Checking exceptions
2025-03-12 19:35:54,000:INFO:Importing libraries
2025-03-12 19:35:54,000:INFO:Copying training dataset
2025-03-12 19:35:54,003:INFO:Defining folds
2025-03-12 19:35:54,003:INFO:Declaring metric variables
2025-03-12 19:35:54,007:INFO:Importing untrained model
2025-03-12 19:35:54,011:INFO:Dummy Classifier Imported successfully
2025-03-12 19:35:54,019:INFO:Starting cross validation
2025-03-12 19:35:54,022:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-12 19:35:54,025:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 3 members, which is less than n_splits=10.
  warnings.warn(

2025-03-12 19:35:54,192:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:54,193:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:54,194:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,195:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:54,196:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,196:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,197:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:54,197:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,197:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,197:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,198:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,199:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,199:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,199:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:54,199:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,200:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,201:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,201:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,202:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,202:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,202:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,202:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

len(result))

2025-03-12 19:35:54,203:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:54,204:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,204:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,204:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,205:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,205:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,205:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,206:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

t))

2025-03-12 19:35:54,206:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,206:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,206:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,206:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,208:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,208:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,209:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,209:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,210:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,210:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,213:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,214:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,215:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,216:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,221:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:54,223:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,225:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,225:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,226:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,229:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,230:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,289:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:54,290:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,292:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,292:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 751, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Number of classes in y_true not equal to the number of columns in 'y_score'

  warnings.warn(

2025-03-12 19:35:54,293:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,293:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,294:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,294:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,295:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,295:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,296:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,296:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,296:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-12 19:35:54,297:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true nor predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-12 19:35:54,308:INFO:Calculating mean and std
2025-03-12 19:35:54,309:INFO:Creating metrics dataframe
2025-03-12 19:35:54,310:INFO:Uploading results into container
2025-03-12 19:35:54,310:INFO:Uploading model into container now
2025-03-12 19:35:54,311:INFO:_master_model_container: 16
2025-03-12 19:35:54,311:INFO:_display_container: 2
2025-03-12 19:35:54,311:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-03-12 19:35:54,311:INFO:create_model() successfully completed......................................
2025-03-12 19:35:54,526:INFO:SubProcess create_model() end ==================================
2025-03-12 19:35:54,527:INFO:Creating metrics dataframe
2025-03-12 19:35:54,552:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-03-12 19:35:54,563:INFO:Initializing create_model()
2025-03-12 19:35:54,564:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001E474128250>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-12 19:35:54,564:INFO:Checking exceptions
2025-03-12 19:35:54,567:INFO:Importing libraries
2025-03-12 19:35:54,567:INFO:Copying training dataset
2025-03-12 19:35:54,571:INFO:Defining folds
2025-03-12 19:35:54,571:INFO:Declaring metric variables
2025-03-12 19:35:54,571:INFO:Importing untrained model
2025-03-12 19:35:54,571:INFO:Declaring custom model
2025-03-12 19:35:54,572:INFO:Ada Boost Classifier Imported successfully
2025-03-12 19:35:54,573:INFO:Cross validation set to False
2025-03-12 19:35:54,573:INFO:Fitting Model
2025-03-12 19:35:54,676:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-12 19:35:54,733:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-03-12 19:35:54,733:INFO:create_model() successfully completed......................................
2025-03-12 19:35:54,943:INFO:_master_model_container: 16
2025-03-12 19:35:54,943:INFO:_display_container: 2
2025-03-12 19:35:54,944:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-03-12 19:35:54,944:INFO:compare_models() successfully completed......................................
2025-03-12 19:35:54,966:INFO:Initializing save_model()
2025-03-12 19:35:54,967:INFO:save_model(model=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ARDIAN~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                 TransformerWrapper(exclude=None, include=['Minat dan Bakat'],
                                    transformer=TargetEncoder(cols=['Minat dan '
                                                                    'Bakat'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-12 19:35:54,967:INFO:Adding model into prep_pipe
2025-03-12 19:35:54,990:INFO:best_model.pkl saved in current working directory
2025-03-12 19:35:55,004:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=42))],
         verbose=False)
2025-03-12 19:35:55,004:INFO:save_model() successfully completed......................................
2025-03-14 11:38:17,313:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-14 11:38:17,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-14 11:38:17,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-14 11:38:17,314:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-14 11:38:26,700:INFO:PyCaret ClassificationExperiment
2025-03-14 11:38:26,700:INFO:Logging name: clf-default-name
2025-03-14 11:38:26,700:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-14 11:38:26,700:INFO:version 3.3.2
2025-03-14 11:38:26,700:INFO:Initializing setup()
2025-03-14 11:38:26,700:INFO:self.USI: 5ab1
2025-03-14 11:38:26,700:INFO:self._variable_keys: {'y_test', 'X_train', 'memory', 'seed', 'fix_imbalance', 'pipeline', 'idx', 'html_param', '_available_plots', 'y_train', 'X_test', 'log_plots_param', '_ml_usecase', 'USI', 'fold_generator', 'fold_shuffle_param', 'y', 'X', 'gpu_n_jobs_param', 'target_param', 'exp_id', 'is_multiclass', 'fold_groups_param', 'logging_param', 'n_jobs_param', 'gpu_param', 'data', 'exp_name_log'}
2025-03-14 11:38:26,701:INFO:Checking environment
2025-03-14 11:38:26,701:INFO:python_version: 3.11.7
2025-03-14 11:38:26,701:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2025-03-14 11:38:26,701:INFO:machine: AMD64
2025-03-14 11:38:26,701:INFO:platform: Windows-10-10.0.22631-SP0
2025-03-14 11:38:26,711:INFO:Memory: svmem(total=7897944064, available=477351936, percent=94.0, used=7420592128, free=477351936)
2025-03-14 11:38:26,711:INFO:Physical Core: 4
2025-03-14 11:38:26,711:INFO:Logical Core: 8
2025-03-14 11:38:26,713:INFO:Checking libraries
2025-03-14 11:38:26,713:INFO:System:
2025-03-14 11:38:26,713:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2025-03-14 11:38:26,713:INFO:executable: c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\python.exe
2025-03-14 11:38:26,713:INFO:   machine: Windows-10-10.0.22631-SP0
2025-03-14 11:38:26,713:INFO:PyCaret required dependencies:
2025-03-14 11:38:31,615:INFO:                 pip: 24.0
2025-03-14 11:38:31,616:INFO:          setuptools: 75.8.0
2025-03-14 11:38:31,616:INFO:             pycaret: 3.3.2
2025-03-14 11:38:31,616:INFO:             IPython: 8.23.0
2025-03-14 11:38:31,616:INFO:          ipywidgets: 8.1.2
2025-03-14 11:38:31,617:INFO:                tqdm: 4.67.1
2025-03-14 11:38:31,618:INFO:               numpy: 1.26.4
2025-03-14 11:38:31,618:INFO:              pandas: 2.1.4
2025-03-14 11:38:31,618:INFO:              jinja2: 3.1.3
2025-03-14 11:38:31,618:INFO:               scipy: 1.11.4
2025-03-14 11:38:31,618:INFO:              joblib: 1.3.2
2025-03-14 11:38:31,618:INFO:             sklearn: 1.4.2
2025-03-14 11:38:31,618:INFO:                pyod: 1.1.3
2025-03-14 11:38:31,618:INFO:            imblearn: 0.12.2
2025-03-14 11:38:31,618:INFO:   category_encoders: 2.6.3
2025-03-14 11:38:31,618:INFO:            lightgbm: 4.3.0
2025-03-14 11:38:31,618:INFO:               numba: 0.59.1
2025-03-14 11:38:31,618:INFO:            requests: 2.32.3
2025-03-14 11:38:31,618:INFO:          matplotlib: 3.7.5
2025-03-14 11:38:31,618:INFO:          scikitplot: 0.3.7
2025-03-14 11:38:31,618:INFO:         yellowbrick: 1.5
2025-03-14 11:38:31,619:INFO:              plotly: 5.20.0
2025-03-14 11:38:31,619:INFO:    plotly-resampler: Not installed
2025-03-14 11:38:31,619:INFO:             kaleido: 0.2.1
2025-03-14 11:38:31,619:INFO:           schemdraw: 0.15
2025-03-14 11:38:31,619:INFO:         statsmodels: 0.14.1
2025-03-14 11:38:31,619:INFO:              sktime: 0.26.0
2025-03-14 11:38:31,619:INFO:               tbats: 1.1.3
2025-03-14 11:38:31,619:INFO:            pmdarima: 2.0.4
2025-03-14 11:38:31,619:INFO:              psutil: 5.9.8
2025-03-14 11:38:31,619:INFO:          markupsafe: 2.1.5
2025-03-14 11:38:31,619:INFO:             pickle5: Not installed
2025-03-14 11:38:31,619:INFO:         cloudpickle: 3.0.0
2025-03-14 11:38:31,619:INFO:         deprecation: 2.1.0
2025-03-14 11:38:31,619:INFO:              xxhash: 3.4.1
2025-03-14 11:38:31,619:INFO:           wurlitzer: Not installed
2025-03-14 11:38:31,619:INFO:PyCaret optional dependencies:
2025-03-14 11:38:40,120:INFO:                shap: 0.44.1
2025-03-14 11:38:40,121:INFO:           interpret: 0.6.7
2025-03-14 11:38:40,121:INFO:                umap: 0.5.7
2025-03-14 11:38:40,121:INFO:     ydata_profiling: 4.7.0
2025-03-14 11:38:40,121:INFO:  explainerdashboard: 0.4.7
2025-03-14 11:38:40,121:INFO:             autoviz: Not installed
2025-03-14 11:38:40,121:INFO:           fairlearn: 0.7.0
2025-03-14 11:38:40,121:INFO:          deepchecks: Not installed
2025-03-14 11:38:40,121:INFO:             xgboost: 2.0.3
2025-03-14 11:38:40,121:INFO:            catboost: 1.2.7
2025-03-14 11:38:40,121:INFO:              kmodes: 0.12.2
2025-03-14 11:38:40,121:INFO:             mlxtend: 0.23.1
2025-03-14 11:38:40,121:INFO:       statsforecast: 1.5.0
2025-03-14 11:38:40,121:INFO:        tune_sklearn: Not installed
2025-03-14 11:38:40,122:INFO:                 ray: Not installed
2025-03-14 11:38:40,122:INFO:            hyperopt: 0.2.7
2025-03-14 11:38:40,122:INFO:              optuna: 3.6.1
2025-03-14 11:38:40,122:INFO:               skopt: 0.10.2
2025-03-14 11:38:40,122:INFO:              mlflow: 2.11.3
2025-03-14 11:38:40,122:INFO:              gradio: 5.7.0
2025-03-14 11:38:40,122:INFO:             fastapi: 0.115.5
2025-03-14 11:38:40,122:INFO:             uvicorn: 0.29.0
2025-03-14 11:38:40,122:INFO:              m2cgen: 0.10.0
2025-03-14 11:38:40,122:INFO:           evidently: 0.4.40
2025-03-14 11:38:40,122:INFO:               fugue: 0.8.7
2025-03-14 11:38:40,122:INFO:           streamlit: 1.33.0
2025-03-14 11:38:40,122:INFO:             prophet: Not installed
2025-03-14 11:38:40,122:INFO:None
2025-03-14 11:38:40,122:INFO:Set up data.
2025-03-14 11:38:40,146:INFO:Set up folding strategy.
2025-03-14 11:38:40,146:INFO:Set up train/test split.
2025-03-14 11:38:40,159:INFO:Set up index.
2025-03-14 11:38:40,161:INFO:Assigning column types.
2025-03-14 11:38:40,166:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-14 11:38:40,216:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-14 11:38:40,222:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 11:38:40,272:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 11:38:40,276:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 11:38:40,585:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-14 11:38:40,585:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 11:38:40,631:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 11:38:40,637:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 11:38:40,639:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-14 11:38:40,723:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 11:38:40,766:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 11:38:40,771:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 11:38:40,832:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 11:38:40,862:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 11:38:40,864:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 11:38:40,865:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-14 11:38:40,946:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 11:38:40,949:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 11:38:41,047:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 11:38:41,051:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 11:38:41,059:INFO:Preparing preprocessing pipeline...
2025-03-14 11:38:41,062:INFO:Set up label encoding.
2025-03-14 11:38:41,062:INFO:Set up simple imputation.
2025-03-14 11:38:41,065:INFO:Set up encoding of ordinal features.
2025-03-14 11:38:41,066:INFO:Set up encoding of categorical features.
2025-03-14 11:38:41,068:INFO:Set up column name cleaning.
2025-03-14 11:38:41,262:INFO:Finished creating preprocessing pipeline.
2025-03-14 11:38:41,286:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ARDIAN~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                                    transformer=TargetEncoder(cols=['Minat dan '
                                                                    'Bakat',
                                                                    'Rencana '
                                                                    'Karir'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-03-14 11:38:41,286:INFO:Creating final display dataframe.
2025-03-14 11:38:41,634:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                  42  
1                                       Program Studi  
2                                          Multiclass  
3   Sains Data Terapan: 0, Sistem Pembangkitan Ene...  
4                                           (1000, 6)  
5                                          (1000, 10)  
6                                           (700, 10)  
7                                           (300, 10)  
8                                                   1  
9                                                   4  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                 25  
15                                               None  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               5ab1  
2025-03-14 11:38:41,724:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 11:38:41,727:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 11:38:41,805:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 11:38:41,808:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 11:38:41,809:INFO:setup() successfully completed in 15.14s...............
2025-03-14 11:38:41,811:INFO:Initializing compare_models()
2025-03-14 11:38:41,811:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-03-14 11:38:41,811:INFO:Checking exceptions
2025-03-14 11:38:41,815:INFO:Preparing display monitor
2025-03-14 11:38:41,843:INFO:Initializing Logistic Regression
2025-03-14 11:38:41,843:INFO:Total runtime is 1.929601033528646e-05 minutes
2025-03-14 11:38:41,849:INFO:SubProcess create_model() called ==================================
2025-03-14 11:38:41,849:INFO:Initializing create_model()
2025-03-14 11:38:41,849:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:38:41,850:INFO:Checking exceptions
2025-03-14 11:38:41,850:INFO:Importing libraries
2025-03-14 11:38:41,850:INFO:Copying training dataset
2025-03-14 11:38:41,859:INFO:Defining folds
2025-03-14 11:38:41,859:INFO:Declaring metric variables
2025-03-14 11:38:41,863:INFO:Importing untrained model
2025-03-14 11:38:41,869:INFO:Logistic Regression Imported successfully
2025-03-14 11:38:41,878:INFO:Starting cross validation
2025-03-14 11:38:41,883:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:38:59,327:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 11:38:59,653:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:38:59,731:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:38:59,740:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:38:59,746:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:00,498:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 11:39:00,599:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:00,603:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:00,608:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:00,610:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:00,613:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:00,627:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 11:39:00,692:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:00,695:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:00,698:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:00,713:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:00,738:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 11:39:00,866:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

trics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:00,873:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:00,880:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:00,885:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:00,940:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:00,953:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:00,959:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:00,961:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:00,966:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:01,229:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 11:39:01,243:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 11:39:01,312:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:01,318:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:01,330:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:01,332:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:01,334:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 11:39:01,336:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:01,340:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:01,347:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:01,356:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:01,358:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:01,361:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:01,394:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 11:39:01,414:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:01,418:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:01,423:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:01,427:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:01,430:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:01,464:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:01,473:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:01,482:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:01,487:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:02,340:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 11:39:02,386:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:02,391:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:02,395:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:02,396:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:02,398:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:02,422:INFO:Calculating mean and std
2025-03-14 11:39:02,452:INFO:Creating metrics dataframe
2025-03-14 11:39:02,496:INFO:Uploading results into container
2025-03-14 11:39:02,499:INFO:Uploading model into container now
2025-03-14 11:39:02,506:INFO:_master_model_container: 1
2025-03-14 11:39:02,506:INFO:_display_container: 2
2025-03-14 11:39:02,508:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-14 11:39:02,509:INFO:create_model() successfully completed......................................
2025-03-14 11:39:03,068:INFO:SubProcess create_model() end ==================================
2025-03-14 11:39:03,068:INFO:Creating metrics dataframe
2025-03-14 11:39:03,079:INFO:Initializing K Neighbors Classifier
2025-03-14 11:39:03,080:INFO:Total runtime is 0.3539671262105306 minutes
2025-03-14 11:39:03,083:INFO:SubProcess create_model() called ==================================
2025-03-14 11:39:03,084:INFO:Initializing create_model()
2025-03-14 11:39:03,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:39:03,084:INFO:Checking exceptions
2025-03-14 11:39:03,085:INFO:Importing libraries
2025-03-14 11:39:03,085:INFO:Copying training dataset
2025-03-14 11:39:03,090:INFO:Defining folds
2025-03-14 11:39:03,090:INFO:Declaring metric variables
2025-03-14 11:39:03,095:INFO:Importing untrained model
2025-03-14 11:39:03,101:INFO:K Neighbors Classifier Imported successfully
2025-03-14 11:39:03,115:INFO:Starting cross validation
2025-03-14 11:39:03,121:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:39:03,481:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,482:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,485:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,486:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,486:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,491:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,491:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,491:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,492:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,493:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,495:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,498:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,502:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,502:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,504:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,508:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,512:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,545:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,548:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,552:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:03,554:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,575:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,579:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,583:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,685:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,687:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,690:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:03,691:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,699:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,700:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,702:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:03,711:INFO:Calculating mean and std
2025-03-14 11:39:03,712:INFO:Creating metrics dataframe
2025-03-14 11:39:03,714:INFO:Uploading results into container
2025-03-14 11:39:03,714:INFO:Uploading model into container now
2025-03-14 11:39:03,714:INFO:_master_model_container: 2
2025-03-14 11:39:03,716:INFO:_display_container: 2
2025-03-14 11:39:03,716:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-14 11:39:03,716:INFO:create_model() successfully completed......................................
2025-03-14 11:39:03,923:INFO:SubProcess create_model() end ==================================
2025-03-14 11:39:03,923:INFO:Creating metrics dataframe
2025-03-14 11:39:03,929:INFO:Initializing Naive Bayes
2025-03-14 11:39:03,929:INFO:Total runtime is 0.36812307039896647 minutes
2025-03-14 11:39:03,933:INFO:SubProcess create_model() called ==================================
2025-03-14 11:39:03,933:INFO:Initializing create_model()
2025-03-14 11:39:03,933:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:39:03,934:INFO:Checking exceptions
2025-03-14 11:39:03,934:INFO:Importing libraries
2025-03-14 11:39:03,934:INFO:Copying training dataset
2025-03-14 11:39:03,939:INFO:Defining folds
2025-03-14 11:39:03,940:INFO:Declaring metric variables
2025-03-14 11:39:03,943:INFO:Importing untrained model
2025-03-14 11:39:03,950:INFO:Naive Bayes Imported successfully
2025-03-14 11:39:03,963:INFO:Starting cross validation
2025-03-14 11:39:03,966:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:39:04,184:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,188:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,188:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,191:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,193:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,194:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:04,197:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,199:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,201:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,211:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:04,212:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,214:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,218:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,218:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,222:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,222:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,225:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:04,228:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,229:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,235:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,242:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,256:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,260:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,264:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,267:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,271:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,276:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,337:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,339:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,341:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:04,344:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,352:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,354:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,358:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,363:INFO:Calculating mean and std
2025-03-14 11:39:04,364:INFO:Creating metrics dataframe
2025-03-14 11:39:04,366:INFO:Uploading results into container
2025-03-14 11:39:04,366:INFO:Uploading model into container now
2025-03-14 11:39:04,366:INFO:_master_model_container: 3
2025-03-14 11:39:04,366:INFO:_display_container: 2
2025-03-14 11:39:04,367:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-14 11:39:04,367:INFO:create_model() successfully completed......................................
2025-03-14 11:39:04,566:INFO:SubProcess create_model() end ==================================
2025-03-14 11:39:04,566:INFO:Creating metrics dataframe
2025-03-14 11:39:04,574:INFO:Initializing Decision Tree Classifier
2025-03-14 11:39:04,574:INFO:Total runtime is 0.37887300650278727 minutes
2025-03-14 11:39:04,580:INFO:SubProcess create_model() called ==================================
2025-03-14 11:39:04,580:INFO:Initializing create_model()
2025-03-14 11:39:04,580:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:39:04,580:INFO:Checking exceptions
2025-03-14 11:39:04,580:INFO:Importing libraries
2025-03-14 11:39:04,580:INFO:Copying training dataset
2025-03-14 11:39:04,586:INFO:Defining folds
2025-03-14 11:39:04,586:INFO:Declaring metric variables
2025-03-14 11:39:04,592:INFO:Importing untrained model
2025-03-14 11:39:04,597:INFO:Decision Tree Classifier Imported successfully
2025-03-14 11:39:04,610:INFO:Starting cross validation
2025-03-14 11:39:04,612:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:39:04,844:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,846:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,848:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,849:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,851:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,852:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,853:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,855:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,857:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,857:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,858:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,859:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,861:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,862:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,865:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,865:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,867:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,868:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,870:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,873:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,873:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,879:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,880:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,886:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,990:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,993:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,995:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,997:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:04,998:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,001:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,010:INFO:Calculating mean and std
2025-03-14 11:39:05,011:INFO:Creating metrics dataframe
2025-03-14 11:39:05,012:INFO:Uploading results into container
2025-03-14 11:39:05,013:INFO:Uploading model into container now
2025-03-14 11:39:05,013:INFO:_master_model_container: 4
2025-03-14 11:39:05,013:INFO:_display_container: 2
2025-03-14 11:39:05,013:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-03-14 11:39:05,013:INFO:create_model() successfully completed......................................
2025-03-14 11:39:05,224:INFO:SubProcess create_model() end ==================================
2025-03-14 11:39:05,224:INFO:Creating metrics dataframe
2025-03-14 11:39:05,231:INFO:Initializing SVM - Linear Kernel
2025-03-14 11:39:05,231:INFO:Total runtime is 0.3898176352183024 minutes
2025-03-14 11:39:05,234:INFO:SubProcess create_model() called ==================================
2025-03-14 11:39:05,235:INFO:Initializing create_model()
2025-03-14 11:39:05,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:39:05,235:INFO:Checking exceptions
2025-03-14 11:39:05,235:INFO:Importing libraries
2025-03-14 11:39:05,235:INFO:Copying training dataset
2025-03-14 11:39:05,239:INFO:Defining folds
2025-03-14 11:39:05,240:INFO:Declaring metric variables
2025-03-14 11:39:05,243:INFO:Importing untrained model
2025-03-14 11:39:05,249:INFO:SVM - Linear Kernel Imported successfully
2025-03-14 11:39:05,260:INFO:Starting cross validation
2025-03-14 11:39:05,262:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:39:05,513:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:05,516:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,520:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,522:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:05,525:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,531:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:05,533:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,538:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,539:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:05,540:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:05,542:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,542:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,558:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,560:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:05,562:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:05,564:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,565:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,569:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,573:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:05,576:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,578:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:05,581:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,585:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,588:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:05,590:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,604:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:05,605:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:05,607:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,612:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,612:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,614:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:05,614:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:05,616:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,617:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,627:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:05,631:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,637:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,640:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:05,644:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,753:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:05,755:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,760:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,762:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:05,764:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,769:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:05,771:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,776:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,778:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:05,780:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:05,794:INFO:Calculating mean and std
2025-03-14 11:39:05,796:INFO:Creating metrics dataframe
2025-03-14 11:39:05,797:INFO:Uploading results into container
2025-03-14 11:39:05,798:INFO:Uploading model into container now
2025-03-14 11:39:05,799:INFO:_master_model_container: 5
2025-03-14 11:39:05,799:INFO:_display_container: 2
2025-03-14 11:39:05,799:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-14 11:39:05,800:INFO:create_model() successfully completed......................................
2025-03-14 11:39:06,013:INFO:SubProcess create_model() end ==================================
2025-03-14 11:39:06,015:INFO:Creating metrics dataframe
2025-03-14 11:39:06,026:INFO:Initializing Ridge Classifier
2025-03-14 11:39:06,026:INFO:Total runtime is 0.40307374795277917 minutes
2025-03-14 11:39:06,029:INFO:SubProcess create_model() called ==================================
2025-03-14 11:39:06,031:INFO:Initializing create_model()
2025-03-14 11:39:06,031:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:39:06,031:INFO:Checking exceptions
2025-03-14 11:39:06,031:INFO:Importing libraries
2025-03-14 11:39:06,031:INFO:Copying training dataset
2025-03-14 11:39:06,037:INFO:Defining folds
2025-03-14 11:39:06,037:INFO:Declaring metric variables
2025-03-14 11:39:06,039:INFO:Importing untrained model
2025-03-14 11:39:06,047:INFO:Ridge Classifier Imported successfully
2025-03-14 11:39:06,059:INFO:Starting cross validation
2025-03-14 11:39:06,061:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:39:06,267:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:06,269:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,270:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:06,272:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,272:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:06,274:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,275:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,276:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:06,276:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,278:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,278:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:06,280:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:06,282:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,283:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,289:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:06,292:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,294:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:06,297:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,299:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:06,302:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,302:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,304:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:06,307:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,311:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:06,312:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:06,315:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,317:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,320:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,321:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,321:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:06,321:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:06,323:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:06,324:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,324:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,325:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,329:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,331:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:06,332:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,400:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:06,401:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,401:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:06,402:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,403:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,405:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:06,406:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,406:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,407:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:06,409:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:06,416:INFO:Calculating mean and std
2025-03-14 11:39:06,417:INFO:Creating metrics dataframe
2025-03-14 11:39:06,420:INFO:Uploading results into container
2025-03-14 11:39:06,420:INFO:Uploading model into container now
2025-03-14 11:39:06,420:INFO:_master_model_container: 6
2025-03-14 11:39:06,420:INFO:_display_container: 2
2025-03-14 11:39:06,421:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-03-14 11:39:06,421:INFO:create_model() successfully completed......................................
2025-03-14 11:39:06,652:INFO:SubProcess create_model() end ==================================
2025-03-14 11:39:06,652:INFO:Creating metrics dataframe
2025-03-14 11:39:06,660:INFO:Initializing Random Forest Classifier
2025-03-14 11:39:06,660:INFO:Total runtime is 0.4136366407076518 minutes
2025-03-14 11:39:06,665:INFO:SubProcess create_model() called ==================================
2025-03-14 11:39:06,665:INFO:Initializing create_model()
2025-03-14 11:39:06,665:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:39:06,666:INFO:Checking exceptions
2025-03-14 11:39:06,666:INFO:Importing libraries
2025-03-14 11:39:06,666:INFO:Copying training dataset
2025-03-14 11:39:06,669:INFO:Defining folds
2025-03-14 11:39:06,669:INFO:Declaring metric variables
2025-03-14 11:39:06,675:INFO:Importing untrained model
2025-03-14 11:39:06,683:INFO:Random Forest Classifier Imported successfully
2025-03-14 11:39:06,693:INFO:Starting cross validation
2025-03-14 11:39:06,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:39:07,381:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,385:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,386:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,392:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,390:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,402:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,504:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,519:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,521:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,525:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,530:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,533:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,542:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,546:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,554:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,560:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,564:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,569:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,583:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,583:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,587:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,588:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,590:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,592:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,918:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,922:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,927:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,933:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,934:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,939:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:07,958:INFO:Calculating mean and std
2025-03-14 11:39:07,961:INFO:Creating metrics dataframe
2025-03-14 11:39:07,965:INFO:Uploading results into container
2025-03-14 11:39:07,967:INFO:Uploading model into container now
2025-03-14 11:39:07,968:INFO:_master_model_container: 7
2025-03-14 11:39:07,968:INFO:_display_container: 2
2025-03-14 11:39:07,968:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-03-14 11:39:07,968:INFO:create_model() successfully completed......................................
2025-03-14 11:39:08,178:INFO:SubProcess create_model() end ==================================
2025-03-14 11:39:08,178:INFO:Creating metrics dataframe
2025-03-14 11:39:08,186:INFO:Initializing Quadratic Discriminant Analysis
2025-03-14 11:39:08,186:INFO:Total runtime is 0.4390696247418722 minutes
2025-03-14 11:39:08,191:INFO:SubProcess create_model() called ==================================
2025-03-14 11:39:08,191:INFO:Initializing create_model()
2025-03-14 11:39:08,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:39:08,191:INFO:Checking exceptions
2025-03-14 11:39:08,191:INFO:Importing libraries
2025-03-14 11:39:08,191:INFO:Copying training dataset
2025-03-14 11:39:08,195:INFO:Defining folds
2025-03-14 11:39:08,195:INFO:Declaring metric variables
2025-03-14 11:39:08,199:INFO:Importing untrained model
2025-03-14 11:39:08,202:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-14 11:39:08,212:INFO:Starting cross validation
2025-03-14 11:39:08,213:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:39:08,395:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 11:39:08,396:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 11:39:08,406:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 11:39:08,409:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 11:39:08,416:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 11:39:08,429:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 11:39:08,465:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:08,467:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,471:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:08,471:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,472:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:08,473:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:08,473:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 11:39:08,474:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:08,475:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,475:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,477:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,477:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:08,477:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:08,480:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,481:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,481:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,482:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,483:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:08,484:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,485:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,485:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,486:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,486:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,487:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,488:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:08,489:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:08,491:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,491:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,493:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:08,500:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,505:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,511:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:08,513:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,539:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:08,542:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,546:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,547:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:08,550:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,579:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 11:39:08,582:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 11:39:08,623:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:08,623:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:08,624:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,624:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,628:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,629:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,629:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:08,631:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,632:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:08,646:INFO:Calculating mean and std
2025-03-14 11:39:08,647:INFO:Creating metrics dataframe
2025-03-14 11:39:08,649:INFO:Uploading results into container
2025-03-14 11:39:08,650:INFO:Uploading model into container now
2025-03-14 11:39:08,650:INFO:_master_model_container: 8
2025-03-14 11:39:08,650:INFO:_display_container: 2
2025-03-14 11:39:08,650:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-14 11:39:08,650:INFO:create_model() successfully completed......................................
2025-03-14 11:39:08,901:INFO:SubProcess create_model() end ==================================
2025-03-14 11:39:08,901:INFO:Creating metrics dataframe
2025-03-14 11:39:08,909:INFO:Initializing Ada Boost Classifier
2025-03-14 11:39:08,910:INFO:Total runtime is 0.4511388421058655 minutes
2025-03-14 11:39:08,913:INFO:SubProcess create_model() called ==================================
2025-03-14 11:39:08,913:INFO:Initializing create_model()
2025-03-14 11:39:08,913:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:39:08,913:INFO:Checking exceptions
2025-03-14 11:39:08,914:INFO:Importing libraries
2025-03-14 11:39:08,914:INFO:Copying training dataset
2025-03-14 11:39:08,921:INFO:Defining folds
2025-03-14 11:39:08,921:INFO:Declaring metric variables
2025-03-14 11:39:08,925:INFO:Importing untrained model
2025-03-14 11:39:08,932:INFO:Ada Boost Classifier Imported successfully
2025-03-14 11:39:08,944:INFO:Starting cross validation
2025-03-14 11:39:08,948:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:39:09,103:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 11:39:09,105:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 11:39:09,107:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 11:39:09,107:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 11:39:09,109:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 11:39:09,120:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 11:39:09,134:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 11:39:09,151:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 11:39:09,381:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:09,389:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,395:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,397:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:09,400:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,400:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:09,402:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,407:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,409:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:09,413:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,428:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:09,433:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,438:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,441:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:09,443:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,492:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:09,498:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,504:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,506:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:09,510:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,546:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 11:39:09,554:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:09,557:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:09,559:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,559:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 11:39:09,560:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,565:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,565:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,567:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:09,567:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:09,567:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:09,568:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:09,570:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,571:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,572:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,574:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,575:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,577:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:09,580:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,582:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,583:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:09,587:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,823:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:09,823:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:09,824:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,825:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,828:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,829:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,829:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:09,830:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:09,831:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,832:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:09,843:INFO:Calculating mean and std
2025-03-14 11:39:09,844:INFO:Creating metrics dataframe
2025-03-14 11:39:09,846:INFO:Uploading results into container
2025-03-14 11:39:09,847:INFO:Uploading model into container now
2025-03-14 11:39:09,849:INFO:_master_model_container: 9
2025-03-14 11:39:09,850:INFO:_display_container: 2
2025-03-14 11:39:09,850:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-03-14 11:39:09,850:INFO:create_model() successfully completed......................................
2025-03-14 11:39:10,205:INFO:SubProcess create_model() end ==================================
2025-03-14 11:39:10,206:INFO:Creating metrics dataframe
2025-03-14 11:39:10,231:INFO:Initializing Gradient Boosting Classifier
2025-03-14 11:39:10,232:INFO:Total runtime is 0.47316246430079145 minutes
2025-03-14 11:39:10,245:INFO:SubProcess create_model() called ==================================
2025-03-14 11:39:10,246:INFO:Initializing create_model()
2025-03-14 11:39:10,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:39:10,246:INFO:Checking exceptions
2025-03-14 11:39:10,246:INFO:Importing libraries
2025-03-14 11:39:10,247:INFO:Copying training dataset
2025-03-14 11:39:10,255:INFO:Defining folds
2025-03-14 11:39:10,255:INFO:Declaring metric variables
2025-03-14 11:39:10,268:INFO:Importing untrained model
2025-03-14 11:39:10,288:INFO:Gradient Boosting Classifier Imported successfully
2025-03-14 11:39:10,309:INFO:Starting cross validation
2025-03-14 11:39:10,315:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:39:14,644:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:14,647:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:14,651:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:14,677:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:14,797:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:14,803:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:14,809:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:14,815:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:14,862:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:14,866:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:14,873:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:14,879:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:17,442:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:17,448:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:17,468:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:17,487:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:17,494:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:17,497:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:17,501:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:17,503:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:17,505:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:17,507:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:17,509:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:17,511:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:17,547:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:17,550:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:17,556:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:17,562:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:17,568:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:17,570:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:17,573:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:17,580:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:19,773:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:19,776:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:19,781:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:19,789:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:19,887:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:19,890:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:19,901:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:19,911:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:19,929:INFO:Calculating mean and std
2025-03-14 11:39:19,935:INFO:Creating metrics dataframe
2025-03-14 11:39:19,945:INFO:Uploading results into container
2025-03-14 11:39:19,947:INFO:Uploading model into container now
2025-03-14 11:39:19,950:INFO:_master_model_container: 10
2025-03-14 11:39:19,950:INFO:_display_container: 2
2025-03-14 11:39:19,953:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 11:39:19,954:INFO:create_model() successfully completed......................................
2025-03-14 11:39:20,557:INFO:SubProcess create_model() end ==================================
2025-03-14 11:39:20,558:INFO:Creating metrics dataframe
2025-03-14 11:39:20,669:INFO:Initializing Linear Discriminant Analysis
2025-03-14 11:39:20,670:INFO:Total runtime is 0.6471367835998536 minutes
2025-03-14 11:39:20,690:INFO:SubProcess create_model() called ==================================
2025-03-14 11:39:20,691:INFO:Initializing create_model()
2025-03-14 11:39:20,691:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:39:20,691:INFO:Checking exceptions
2025-03-14 11:39:20,691:INFO:Importing libraries
2025-03-14 11:39:20,691:INFO:Copying training dataset
2025-03-14 11:39:20,700:INFO:Defining folds
2025-03-14 11:39:20,702:INFO:Declaring metric variables
2025-03-14 11:39:20,715:INFO:Importing untrained model
2025-03-14 11:39:20,814:INFO:Linear Discriminant Analysis Imported successfully
2025-03-14 11:39:20,846:INFO:Starting cross validation
2025-03-14 11:39:20,850:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:39:21,408:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:21,427:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,436:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,439:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:21,441:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,499:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:21,504:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,512:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,517:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:21,521:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,528:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:21,530:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,536:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,538:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:21,542:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,642:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:21,643:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:21,644:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,649:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:21,652:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,655:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,658:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:21,661:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,692:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,697:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,699:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:21,702:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,706:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:21,713:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,721:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:21,723:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,732:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,737:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:21,739:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,781:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:21,788:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,802:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,807:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,862:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:21,868:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,879:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:21,891:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:39:21,900:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:22,055:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 11:39:22,058:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:22,062:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:22,070:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:22,092:INFO:Calculating mean and std
2025-03-14 11:39:22,094:INFO:Creating metrics dataframe
2025-03-14 11:39:22,099:INFO:Uploading results into container
2025-03-14 11:39:22,100:INFO:Uploading model into container now
2025-03-14 11:39:22,100:INFO:_master_model_container: 11
2025-03-14 11:39:22,101:INFO:_display_container: 2
2025-03-14 11:39:22,101:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-14 11:39:22,101:INFO:create_model() successfully completed......................................
2025-03-14 11:39:22,595:INFO:SubProcess create_model() end ==================================
2025-03-14 11:39:22,597:INFO:Creating metrics dataframe
2025-03-14 11:39:22,618:INFO:Initializing Extra Trees Classifier
2025-03-14 11:39:22,619:INFO:Total runtime is 0.679621458053589 minutes
2025-03-14 11:39:22,626:INFO:SubProcess create_model() called ==================================
2025-03-14 11:39:22,627:INFO:Initializing create_model()
2025-03-14 11:39:22,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:39:22,627:INFO:Checking exceptions
2025-03-14 11:39:22,628:INFO:Importing libraries
2025-03-14 11:39:22,628:INFO:Copying training dataset
2025-03-14 11:39:22,635:INFO:Defining folds
2025-03-14 11:39:22,636:INFO:Declaring metric variables
2025-03-14 11:39:22,642:INFO:Importing untrained model
2025-03-14 11:39:22,664:INFO:Extra Trees Classifier Imported successfully
2025-03-14 11:39:22,690:INFO:Starting cross validation
2025-03-14 11:39:22,696:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:39:23,969:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:23,973:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:23,973:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:23,979:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:23,983:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:23,989:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:23,994:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:23,995:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:23,995:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:23,997:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,000:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,008:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,023:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,027:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,032:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,075:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,079:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,084:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,094:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,100:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,105:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,151:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,154:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,161:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,443:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,448:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,452:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,452:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,456:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,461:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:24,473:INFO:Calculating mean and std
2025-03-14 11:39:24,474:INFO:Creating metrics dataframe
2025-03-14 11:39:24,476:INFO:Uploading results into container
2025-03-14 11:39:24,477:INFO:Uploading model into container now
2025-03-14 11:39:24,478:INFO:_master_model_container: 12
2025-03-14 11:39:24,478:INFO:_display_container: 2
2025-03-14 11:39:24,478:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-03-14 11:39:24,479:INFO:create_model() successfully completed......................................
2025-03-14 11:39:24,709:INFO:SubProcess create_model() end ==================================
2025-03-14 11:39:24,709:INFO:Creating metrics dataframe
2025-03-14 11:39:24,722:INFO:Initializing Extreme Gradient Boosting
2025-03-14 11:39:24,722:INFO:Total runtime is 0.714668647448222 minutes
2025-03-14 11:39:24,726:INFO:SubProcess create_model() called ==================================
2025-03-14 11:39:24,726:INFO:Initializing create_model()
2025-03-14 11:39:24,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:39:24,726:INFO:Checking exceptions
2025-03-14 11:39:24,727:INFO:Importing libraries
2025-03-14 11:39:24,727:INFO:Copying training dataset
2025-03-14 11:39:24,730:INFO:Defining folds
2025-03-14 11:39:24,730:INFO:Declaring metric variables
2025-03-14 11:39:24,735:INFO:Importing untrained model
2025-03-14 11:39:24,742:INFO:Extreme Gradient Boosting Imported successfully
2025-03-14 11:39:24,753:INFO:Starting cross validation
2025-03-14 11:39:24,757:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:39:25,523:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,527:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,542:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,549:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,553:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,558:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,653:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,658:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,663:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,712:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,716:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,716:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,720:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,721:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,726:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,830:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,837:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,851:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,895:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,900:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,908:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,987:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:25,996:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:26,005:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:26,114:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:26,118:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:26,121:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:26,124:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:26,128:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:26,130:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:26,137:INFO:Calculating mean and std
2025-03-14 11:39:26,138:INFO:Creating metrics dataframe
2025-03-14 11:39:26,141:INFO:Uploading results into container
2025-03-14 11:39:26,141:INFO:Uploading model into container now
2025-03-14 11:39:26,142:INFO:_master_model_container: 13
2025-03-14 11:39:26,142:INFO:_display_container: 2
2025-03-14 11:39:26,144:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-03-14 11:39:26,145:INFO:create_model() successfully completed......................................
2025-03-14 11:39:26,353:INFO:SubProcess create_model() end ==================================
2025-03-14 11:39:26,353:INFO:Creating metrics dataframe
2025-03-14 11:39:26,368:INFO:Initializing Light Gradient Boosting Machine
2025-03-14 11:39:26,368:INFO:Total runtime is 0.7421011805534364 minutes
2025-03-14 11:39:26,372:INFO:SubProcess create_model() called ==================================
2025-03-14 11:39:26,372:INFO:Initializing create_model()
2025-03-14 11:39:26,372:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:39:26,372:INFO:Checking exceptions
2025-03-14 11:39:26,372:INFO:Importing libraries
2025-03-14 11:39:26,372:INFO:Copying training dataset
2025-03-14 11:39:26,377:INFO:Defining folds
2025-03-14 11:39:26,377:INFO:Declaring metric variables
2025-03-14 11:39:26,382:INFO:Importing untrained model
2025-03-14 11:39:26,387:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-14 11:39:26,398:INFO:Starting cross validation
2025-03-14 11:39:26,402:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:39:31,967:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:31,973:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:31,978:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,111:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,115:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,119:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,307:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,314:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,318:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,391:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,396:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,402:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,554:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,566:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,571:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,723:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,728:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,733:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,819:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,825:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:32,830:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:33,204:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:33,207:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:33,211:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:34,353:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:34,363:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:34,377:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:34,562:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:34,568:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:34,572:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:39:34,586:INFO:Calculating mean and std
2025-03-14 11:39:34,588:INFO:Creating metrics dataframe
2025-03-14 11:39:34,590:INFO:Uploading results into container
2025-03-14 11:39:34,591:INFO:Uploading model into container now
2025-03-14 11:39:34,592:INFO:_master_model_container: 14
2025-03-14 11:39:34,592:INFO:_display_container: 2
2025-03-14 11:39:34,592:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-14 11:39:34,593:INFO:create_model() successfully completed......................................
2025-03-14 11:39:34,857:INFO:SubProcess create_model() end ==================================
2025-03-14 11:39:34,858:INFO:Creating metrics dataframe
2025-03-14 11:39:34,876:INFO:Initializing CatBoost Classifier
2025-03-14 11:39:34,876:INFO:Total runtime is 0.8838994503021242 minutes
2025-03-14 11:39:34,882:INFO:SubProcess create_model() called ==================================
2025-03-14 11:39:34,882:INFO:Initializing create_model()
2025-03-14 11:39:34,882:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:39:34,882:INFO:Checking exceptions
2025-03-14 11:39:34,882:INFO:Importing libraries
2025-03-14 11:39:34,882:INFO:Copying training dataset
2025-03-14 11:39:34,890:INFO:Defining folds
2025-03-14 11:39:34,890:INFO:Declaring metric variables
2025-03-14 11:39:34,896:INFO:Importing untrained model
2025-03-14 11:39:34,925:INFO:CatBoost Classifier Imported successfully
2025-03-14 11:39:34,941:INFO:Starting cross validation
2025-03-14 11:39:34,944:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:40:13,314:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:13,322:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:13,328:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:13,393:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:13,404:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:13,416:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:13,881:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:13,893:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:13,901:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:14,031:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:14,059:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:14,068:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:14,744:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:14,755:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:14,760:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:15,767:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:15,787:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:15,797:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:16,046:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:16,054:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:16,062:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:16,609:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:16,650:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:16,667:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:35,028:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:35,043:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:35,064:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:35,258:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:35,265:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:35,271:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:35,288:INFO:Calculating mean and std
2025-03-14 11:40:35,291:INFO:Creating metrics dataframe
2025-03-14 11:40:35,295:INFO:Uploading results into container
2025-03-14 11:40:35,296:INFO:Uploading model into container now
2025-03-14 11:40:35,296:INFO:_master_model_container: 15
2025-03-14 11:40:35,296:INFO:_display_container: 2
2025-03-14 11:40:35,296:INFO:<catboost.core.CatBoostClassifier object at 0x000002244C0CE190>
2025-03-14 11:40:35,296:INFO:create_model() successfully completed......................................
2025-03-14 11:40:35,725:INFO:SubProcess create_model() end ==================================
2025-03-14 11:40:35,725:INFO:Creating metrics dataframe
2025-03-14 11:40:35,746:INFO:Initializing Dummy Classifier
2025-03-14 11:40:35,746:INFO:Total runtime is 1.8983938694000246 minutes
2025-03-14 11:40:35,750:INFO:SubProcess create_model() called ==================================
2025-03-14 11:40:35,751:INFO:Initializing create_model()
2025-03-14 11:40:35,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244C52F050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:40:35,751:INFO:Checking exceptions
2025-03-14 11:40:35,751:INFO:Importing libraries
2025-03-14 11:40:35,751:INFO:Copying training dataset
2025-03-14 11:40:35,757:INFO:Defining folds
2025-03-14 11:40:35,758:INFO:Declaring metric variables
2025-03-14 11:40:35,760:INFO:Importing untrained model
2025-03-14 11:40:35,764:INFO:Dummy Classifier Imported successfully
2025-03-14 11:40:35,771:INFO:Starting cross validation
2025-03-14 11:40:35,774:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 11:40:36,021:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,041:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,046:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,048:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:40:36,051:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,062:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,065:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:40:36,065:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,068:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,070:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,072:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:40:36,075:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,079:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,089:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,092:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:40:36,096:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,103:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,107:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,109:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,110:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,111:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,111:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:40:36,114:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,115:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,117:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:40:36,126:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,126:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:40:36,140:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,151:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,156:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,158:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:40:36,161:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,253:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,260:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,262:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:40:36,267:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,376:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,382:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,385:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 11:40:36,387:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 11:40:36,408:INFO:Calculating mean and std
2025-03-14 11:40:36,409:INFO:Creating metrics dataframe
2025-03-14 11:40:36,413:INFO:Uploading results into container
2025-03-14 11:40:36,414:INFO:Uploading model into container now
2025-03-14 11:40:36,414:INFO:_master_model_container: 16
2025-03-14 11:40:36,414:INFO:_display_container: 2
2025-03-14 11:40:36,415:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-03-14 11:40:36,415:INFO:create_model() successfully completed......................................
2025-03-14 11:40:36,749:INFO:SubProcess create_model() end ==================================
2025-03-14 11:40:36,749:INFO:Creating metrics dataframe
2025-03-14 11:40:36,769:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-03-14 11:40:36,784:INFO:Initializing create_model()
2025-03-14 11:40:36,786:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002242EFD4E10>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 11:40:36,786:INFO:Checking exceptions
2025-03-14 11:40:36,792:INFO:Importing libraries
2025-03-14 11:40:36,792:INFO:Copying training dataset
2025-03-14 11:40:36,797:INFO:Defining folds
2025-03-14 11:40:36,797:INFO:Declaring metric variables
2025-03-14 11:40:36,797:INFO:Importing untrained model
2025-03-14 11:40:36,797:INFO:Declaring custom model
2025-03-14 11:40:36,798:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-14 11:40:36,800:INFO:Cross validation set to False
2025-03-14 11:40:36,800:INFO:Fitting Model
2025-03-14 11:40:36,926:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-03-14 11:40:36,928:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000132 seconds.
2025-03-14 11:40:36,928:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-14 11:40:36,929:INFO:[LightGBM] [Info] Total Bins 327
2025-03-14 11:40:36,929:INFO:[LightGBM] [Info] Number of data points in the train set: 700, number of used features: 9
2025-03-14 11:40:36,929:INFO:[LightGBM] [Info] Start training from score -2.679879
2025-03-14 11:40:36,929:INFO:[LightGBM] [Info] Start training from score -2.316974
2025-03-14 11:40:36,929:INFO:[LightGBM] [Info] Start training from score -2.316974
2025-03-14 11:40:36,929:INFO:[LightGBM] [Info] Start training from score -2.599837
2025-03-14 11:40:36,930:INFO:[LightGBM] [Info] Start training from score -2.543747
2025-03-14 11:40:36,930:INFO:[LightGBM] [Info] Start training from score -2.639057
2025-03-14 11:40:36,930:INFO:[LightGBM] [Info] Start training from score -2.619255
2025-03-14 11:40:36,930:INFO:[LightGBM] [Info] Start training from score -2.440206
2025-03-14 11:40:36,930:INFO:[LightGBM] [Info] Start training from score -2.288400
2025-03-14 11:40:36,930:INFO:[LightGBM] [Info] Start training from score -2.562096
2025-03-14 11:40:36,930:INFO:[LightGBM] [Info] Start training from score -2.508029
2025-03-14 11:40:36,930:INFO:[LightGBM] [Info] Start training from score -2.407946
2025-03-14 11:40:36,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,932:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,932:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,932:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,935:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,935:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,941:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,943:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,945:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,945:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,951:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,957:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,965:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,970:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,971:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,973:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,973:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,975:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,977:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,979:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,983:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,983:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,990:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:36,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,006:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,039:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,039:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,041:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,042:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,045:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,046:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,049:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,054:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,057:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,060:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,061:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,073:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,076:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,076:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,077:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,078:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,079:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,084:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,084:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,087:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,113:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,133:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,172:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,176:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,177:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,180:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,181:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,182:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,183:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,184:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,185:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,186:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,187:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,200:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,200:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,207:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,208:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,209:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,212:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,215:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,229:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,241:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,251:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,259:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,261:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,262:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,262:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,263:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,266:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,267:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,267:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,270:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,271:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,271:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,272:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,273:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,277:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,278:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,286:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,304:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,304:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,310:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,311:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,312:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,315:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,378:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,415:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,415:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,416:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,417:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,422:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,422:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,424:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,425:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,425:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,430:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,451:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,453:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,455:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,457:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,459:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,460:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,465:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,465:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,467:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,469:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,471:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,473:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,475:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,477:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,480:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,480:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,481:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,483:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,485:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,487:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,487:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,490:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,490:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,491:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,491:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,493:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,493:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,494:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,494:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,495:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,496:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,497:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,499:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,499:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,501:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,503:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,504:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,504:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,506:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,507:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,507:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,513:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,515:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,521:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,529:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,542:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,542:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,547:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,553:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,584:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,588:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,590:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,592:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,594:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,604:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,606:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,607:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,608:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,610:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,611:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,612:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,616:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,617:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,619:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,624:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,629:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,630:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,636:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,638:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,642:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,643:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,650:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,652:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,654:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,655:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,656:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,658:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,660:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,664:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,666:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,666:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,672:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,674:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,679:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,681:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,685:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,687:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,690:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,691:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,693:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,693:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,695:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,695:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,695:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,696:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,696:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,699:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,699:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,699:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,700:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,700:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,705:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,705:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,707:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,707:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,707:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,707:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,708:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,708:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,708:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,709:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,711:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,712:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,712:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,712:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,712:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,715:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,715:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,716:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,716:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,716:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,717:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,718:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,720:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,720:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,721:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,721:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,722:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,722:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,722:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,722:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,733:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,744:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,746:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,750:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,755:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,755:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,755:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,755:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,771:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,775:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,775:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,779:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,779:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,779:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,785:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,785:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,785:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,795:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,795:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,795:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,801:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,801:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,813:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,813:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,813:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,813:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,828:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,828:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,841:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,841:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,845:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,845:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,845:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,845:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,846:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,846:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,846:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,846:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,846:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,846:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,849:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,856:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,858:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,858:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,858:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,858:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,858:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,862:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,862:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,862:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,862:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,865:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,865:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,865:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-14 11:40:37,980:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-14 11:40:37,980:INFO:create_model() successfully completed......................................
2025-03-14 11:40:38,353:INFO:_master_model_container: 16
2025-03-14 11:40:38,354:INFO:_display_container: 2
2025-03-14 11:40:38,355:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-14 11:40:38,355:INFO:compare_models() successfully completed......................................
2025-03-14 11:40:38,409:INFO:Initializing save_model()
2025-03-14 11:40:38,409:INFO:save_model(model=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ARDIAN~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                                    transformer=TargetEncoder(cols=['Minat dan '
                                                                    'Bakat',
                                                                    'Rencana '
                                                                    'Karir'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-14 11:40:38,409:INFO:Adding model into prep_pipe
2025-03-14 11:40:38,534:INFO:best_model.pkl saved in current working directory
2025-03-14 11:40:38,561:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                 LGBMClassifier(boosting_type='gbdt', class_weight=None,
                                colsample_bytree=1.0, importance_type='split',
                                learning_rate=0.1, max_depth=-1,
                                min_child_samples=20, min_child_weight=0.001,
                                min_split_gain=0.0, n_estimators=100, n_jobs=-1,
                                num_leaves=31, objective=None, random_state=42,
                                reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
                                subsample_for_bin=200000, subsample_freq=0))],
         verbose=False)
2025-03-14 11:40:38,562:INFO:save_model() successfully completed......................................
2025-03-14 12:59:51,201:INFO:PyCaret ClassificationExperiment
2025-03-14 12:59:51,202:INFO:Logging name: clf-default-name
2025-03-14 12:59:51,202:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-14 12:59:51,202:INFO:version 3.3.2
2025-03-14 12:59:51,202:INFO:Initializing setup()
2025-03-14 12:59:51,202:INFO:self.USI: e071
2025-03-14 12:59:51,202:INFO:self._variable_keys: {'y_test', 'X_train', 'memory', 'seed', 'fix_imbalance', 'pipeline', 'idx', 'html_param', '_available_plots', 'y_train', 'X_test', 'log_plots_param', '_ml_usecase', 'USI', 'fold_generator', 'fold_shuffle_param', 'y', 'X', 'gpu_n_jobs_param', 'target_param', 'exp_id', 'is_multiclass', 'fold_groups_param', 'logging_param', 'n_jobs_param', 'gpu_param', 'data', 'exp_name_log'}
2025-03-14 12:59:51,204:INFO:Checking environment
2025-03-14 12:59:51,205:INFO:python_version: 3.11.7
2025-03-14 12:59:51,205:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2025-03-14 12:59:51,206:INFO:machine: AMD64
2025-03-14 12:59:51,206:INFO:platform: Windows-10-10.0.22631-SP0
2025-03-14 12:59:51,216:INFO:Memory: svmem(total=7897944064, available=749051904, percent=90.5, used=7148892160, free=749051904)
2025-03-14 12:59:51,216:INFO:Physical Core: 4
2025-03-14 12:59:51,216:INFO:Logical Core: 8
2025-03-14 12:59:51,217:INFO:Checking libraries
2025-03-14 12:59:51,218:INFO:System:
2025-03-14 12:59:51,219:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2025-03-14 12:59:51,219:INFO:executable: c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\python.exe
2025-03-14 12:59:51,219:INFO:   machine: Windows-10-10.0.22631-SP0
2025-03-14 12:59:51,219:INFO:PyCaret required dependencies:
2025-03-14 12:59:51,223:INFO:                 pip: 24.0
2025-03-14 12:59:51,223:INFO:          setuptools: 75.8.0
2025-03-14 12:59:51,223:INFO:             pycaret: 3.3.2
2025-03-14 12:59:51,223:INFO:             IPython: 8.23.0
2025-03-14 12:59:51,223:INFO:          ipywidgets: 8.1.2
2025-03-14 12:59:51,223:INFO:                tqdm: 4.67.1
2025-03-14 12:59:51,223:INFO:               numpy: 1.26.4
2025-03-14 12:59:51,223:INFO:              pandas: 2.1.4
2025-03-14 12:59:51,223:INFO:              jinja2: 3.1.3
2025-03-14 12:59:51,223:INFO:               scipy: 1.11.4
2025-03-14 12:59:51,223:INFO:              joblib: 1.3.2
2025-03-14 12:59:51,223:INFO:             sklearn: 1.4.2
2025-03-14 12:59:51,223:INFO:                pyod: 1.1.3
2025-03-14 12:59:51,223:INFO:            imblearn: 0.12.2
2025-03-14 12:59:51,223:INFO:   category_encoders: 2.6.3
2025-03-14 12:59:51,223:INFO:            lightgbm: 4.3.0
2025-03-14 12:59:51,224:INFO:               numba: 0.59.1
2025-03-14 12:59:51,224:INFO:            requests: 2.32.3
2025-03-14 12:59:51,224:INFO:          matplotlib: 3.7.5
2025-03-14 12:59:51,224:INFO:          scikitplot: 0.3.7
2025-03-14 12:59:51,224:INFO:         yellowbrick: 1.5
2025-03-14 12:59:51,224:INFO:              plotly: 5.20.0
2025-03-14 12:59:51,224:INFO:    plotly-resampler: Not installed
2025-03-14 12:59:51,224:INFO:             kaleido: 0.2.1
2025-03-14 12:59:51,224:INFO:           schemdraw: 0.15
2025-03-14 12:59:51,224:INFO:         statsmodels: 0.14.1
2025-03-14 12:59:51,224:INFO:              sktime: 0.26.0
2025-03-14 12:59:51,224:INFO:               tbats: 1.1.3
2025-03-14 12:59:51,224:INFO:            pmdarima: 2.0.4
2025-03-14 12:59:51,224:INFO:              psutil: 5.9.8
2025-03-14 12:59:51,224:INFO:          markupsafe: 2.1.5
2025-03-14 12:59:51,224:INFO:             pickle5: Not installed
2025-03-14 12:59:51,224:INFO:         cloudpickle: 3.0.0
2025-03-14 12:59:51,224:INFO:         deprecation: 2.1.0
2025-03-14 12:59:51,224:INFO:              xxhash: 3.4.1
2025-03-14 12:59:51,224:INFO:           wurlitzer: Not installed
2025-03-14 12:59:51,224:INFO:PyCaret optional dependencies:
2025-03-14 12:59:51,225:INFO:                shap: 0.44.1
2025-03-14 12:59:51,225:INFO:           interpret: 0.6.7
2025-03-14 12:59:51,225:INFO:                umap: 0.5.7
2025-03-14 12:59:51,225:INFO:     ydata_profiling: 4.7.0
2025-03-14 12:59:51,225:INFO:  explainerdashboard: 0.4.7
2025-03-14 12:59:51,225:INFO:             autoviz: Not installed
2025-03-14 12:59:51,225:INFO:           fairlearn: 0.7.0
2025-03-14 12:59:51,225:INFO:          deepchecks: Not installed
2025-03-14 12:59:51,225:INFO:             xgboost: 2.0.3
2025-03-14 12:59:51,225:INFO:            catboost: 1.2.7
2025-03-14 12:59:51,225:INFO:              kmodes: 0.12.2
2025-03-14 12:59:51,225:INFO:             mlxtend: 0.23.1
2025-03-14 12:59:51,225:INFO:       statsforecast: 1.5.0
2025-03-14 12:59:51,225:INFO:        tune_sklearn: Not installed
2025-03-14 12:59:51,225:INFO:                 ray: Not installed
2025-03-14 12:59:51,225:INFO:            hyperopt: 0.2.7
2025-03-14 12:59:51,225:INFO:              optuna: 3.6.1
2025-03-14 12:59:51,225:INFO:               skopt: 0.10.2
2025-03-14 12:59:51,225:INFO:              mlflow: 2.11.3
2025-03-14 12:59:51,226:INFO:              gradio: 5.7.0
2025-03-14 12:59:51,226:INFO:             fastapi: 0.115.5
2025-03-14 12:59:51,226:INFO:             uvicorn: 0.29.0
2025-03-14 12:59:51,226:INFO:              m2cgen: 0.10.0
2025-03-14 12:59:51,226:INFO:           evidently: 0.4.40
2025-03-14 12:59:51,226:INFO:               fugue: 0.8.7
2025-03-14 12:59:51,226:INFO:           streamlit: 1.33.0
2025-03-14 12:59:51,226:INFO:             prophet: Not installed
2025-03-14 12:59:51,226:INFO:None
2025-03-14 12:59:51,227:INFO:Set up data.
2025-03-14 12:59:51,288:INFO:Set up folding strategy.
2025-03-14 12:59:51,289:INFO:Set up train/test split.
2025-03-14 12:59:51,337:INFO:Set up index.
2025-03-14 12:59:51,340:INFO:Assigning column types.
2025-03-14 12:59:51,346:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-14 12:59:51,388:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-14 12:59:51,393:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 12:59:51,423:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 12:59:51,431:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 12:59:51,479:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-14 12:59:51,481:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 12:59:51,504:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 12:59:51,506:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 12:59:51,508:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-14 12:59:51,546:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 12:59:51,570:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 12:59:51,572:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 12:59:51,621:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 12:59:51,649:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 12:59:51,652:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 12:59:51,652:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-14 12:59:51,737:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 12:59:51,742:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 12:59:51,819:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 12:59:51,822:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 12:59:51,832:INFO:Preparing preprocessing pipeline...
2025-03-14 12:59:51,834:INFO:Set up label encoding.
2025-03-14 12:59:51,835:INFO:Set up simple imputation.
2025-03-14 12:59:51,848:INFO:Set up encoding of ordinal features.
2025-03-14 12:59:51,852:INFO:Set up encoding of categorical features.
2025-03-14 12:59:51,853:INFO:Set up column name cleaning.
2025-03-14 12:59:52,067:INFO:Finished creating preprocessing pipeline.
2025-03-14 12:59:52,091:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ARDIAN~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                                    transformer=TargetEncoder(cols=['Minat dan '
                                                                    'Bakat',
                                                                    'Rencana '
                                                                    'Karir'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-03-14 12:59:52,091:INFO:Creating final display dataframe.
2025-03-14 12:59:52,391:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                7616  
1                                       Program Studi  
2                                          Multiclass  
3   Sains Data Terapan: 0, Sistem Pembangkitan Ene...  
4                                           (1000, 6)  
5                                          (1000, 10)  
6                                           (700, 10)  
7                                           (300, 10)  
8                                                   1  
9                                                   4  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                 25  
15                                               None  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               e071  
2025-03-14 12:59:52,497:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 12:59:52,499:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 12:59:52,564:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 12:59:52,566:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 12:59:52,571:INFO:setup() successfully completed in 1.45s...............
2025-03-14 13:00:04,777:INFO:Initializing compare_models()
2025-03-14 13:00:04,777:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-03-14 13:00:04,778:INFO:Checking exceptions
2025-03-14 13:00:04,784:INFO:Preparing display monitor
2025-03-14 13:00:04,816:INFO:Initializing Logistic Regression
2025-03-14 13:00:04,817:INFO:Total runtime is 0.0 minutes
2025-03-14 13:00:04,821:INFO:SubProcess create_model() called ==================================
2025-03-14 13:00:04,823:INFO:Initializing create_model()
2025-03-14 13:00:04,823:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:00:04,823:INFO:Checking exceptions
2025-03-14 13:00:04,824:INFO:Importing libraries
2025-03-14 13:00:04,824:INFO:Copying training dataset
2025-03-14 13:00:04,830:INFO:Defining folds
2025-03-14 13:00:04,831:INFO:Declaring metric variables
2025-03-14 13:00:04,838:INFO:Importing untrained model
2025-03-14 13:00:04,846:INFO:Logistic Regression Imported successfully
2025-03-14 13:00:04,856:INFO:Starting cross validation
2025-03-14 13:00:04,859:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:00:36,347:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 13:00:36,356:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 13:00:36,358:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 13:00:36,367:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 13:00:36,391:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 13:00:36,407:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 13:00:36,428:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 13:00:36,472:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 13:00:36,474:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:36,474:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:36,474:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:36,481:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:36,481:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:36,481:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:36,499:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,500:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,501:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,502:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,505:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,506:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,506:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,506:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,507:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,507:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,508:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:36,509:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:36,509:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,509:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,511:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,512:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,512:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,513:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,515:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,515:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,517:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:36,519:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,527:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:36,531:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,528:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:36,536:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:36,540:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,541:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,546:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:36,547:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:36,551:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:37,171:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 13:00:37,177:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 13:00:37,201:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:37,202:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:37,206:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:37,206:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:37,209:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:37,213:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:37,214:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:37,217:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:37,218:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:37,219:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:37,229:INFO:Calculating mean and std
2025-03-14 13:00:37,233:INFO:Creating metrics dataframe
2025-03-14 13:00:37,239:INFO:Uploading results into container
2025-03-14 13:00:37,240:INFO:Uploading model into container now
2025-03-14 13:00:37,242:INFO:_master_model_container: 1
2025-03-14 13:00:37,242:INFO:_display_container: 2
2025-03-14 13:00:37,243:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7616, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-14 13:00:37,243:INFO:create_model() successfully completed......................................
2025-03-14 13:00:39,373:INFO:SubProcess create_model() end ==================================
2025-03-14 13:00:39,373:INFO:Creating metrics dataframe
2025-03-14 13:00:39,388:INFO:Initializing K Neighbors Classifier
2025-03-14 13:00:39,388:INFO:Total runtime is 0.5762072443962097 minutes
2025-03-14 13:00:39,393:INFO:SubProcess create_model() called ==================================
2025-03-14 13:00:39,393:INFO:Initializing create_model()
2025-03-14 13:00:39,393:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:00:39,393:INFO:Checking exceptions
2025-03-14 13:00:39,393:INFO:Importing libraries
2025-03-14 13:00:39,393:INFO:Copying training dataset
2025-03-14 13:00:39,399:INFO:Defining folds
2025-03-14 13:00:39,400:INFO:Declaring metric variables
2025-03-14 13:00:39,403:INFO:Importing untrained model
2025-03-14 13:00:39,411:INFO:K Neighbors Classifier Imported successfully
2025-03-14 13:00:39,420:INFO:Starting cross validation
2025-03-14 13:00:39,425:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:00:39,726:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,727:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,726:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,727:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,731:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,733:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,734:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,736:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,737:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,737:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,738:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,739:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,739:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,741:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,742:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,742:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,747:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:39,750:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,751:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,772:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,775:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,775:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,776:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:39,777:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,777:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,778:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:39,780:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,881:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,885:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,888:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,894:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,896:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,898:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:39,908:INFO:Calculating mean and std
2025-03-14 13:00:39,909:INFO:Creating metrics dataframe
2025-03-14 13:00:39,911:INFO:Uploading results into container
2025-03-14 13:00:39,911:INFO:Uploading model into container now
2025-03-14 13:00:39,912:INFO:_master_model_container: 2
2025-03-14 13:00:39,912:INFO:_display_container: 2
2025-03-14 13:00:39,913:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-14 13:00:39,913:INFO:create_model() successfully completed......................................
2025-03-14 13:00:40,172:INFO:SubProcess create_model() end ==================================
2025-03-14 13:00:40,172:INFO:Creating metrics dataframe
2025-03-14 13:00:40,180:INFO:Initializing Naive Bayes
2025-03-14 13:00:40,180:INFO:Total runtime is 0.5894120335578918 minutes
2025-03-14 13:00:40,186:INFO:SubProcess create_model() called ==================================
2025-03-14 13:00:40,186:INFO:Initializing create_model()
2025-03-14 13:00:40,186:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:00:40,187:INFO:Checking exceptions
2025-03-14 13:00:40,187:INFO:Importing libraries
2025-03-14 13:00:40,187:INFO:Copying training dataset
2025-03-14 13:00:40,192:INFO:Defining folds
2025-03-14 13:00:40,193:INFO:Declaring metric variables
2025-03-14 13:00:40,199:INFO:Importing untrained model
2025-03-14 13:00:40,205:INFO:Naive Bayes Imported successfully
2025-03-14 13:00:40,218:INFO:Starting cross validation
2025-03-14 13:00:40,222:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:00:40,480:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,481:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,486:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,486:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,488:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:40,491:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,501:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,507:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,507:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,510:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:40,512:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,512:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,518:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,532:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,539:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,540:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,542:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:40,543:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,545:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,552:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,554:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,559:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,564:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,569:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,578:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,581:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:40,584:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,660:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,663:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,669:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,679:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,682:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,684:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:40,693:INFO:Calculating mean and std
2025-03-14 13:00:40,694:INFO:Creating metrics dataframe
2025-03-14 13:00:40,696:INFO:Uploading results into container
2025-03-14 13:00:40,697:INFO:Uploading model into container now
2025-03-14 13:00:40,698:INFO:_master_model_container: 3
2025-03-14 13:00:40,698:INFO:_display_container: 2
2025-03-14 13:00:40,699:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-14 13:00:40,699:INFO:create_model() successfully completed......................................
2025-03-14 13:00:40,986:INFO:SubProcess create_model() end ==================================
2025-03-14 13:00:40,986:INFO:Creating metrics dataframe
2025-03-14 13:00:40,995:INFO:Initializing Decision Tree Classifier
2025-03-14 13:00:40,995:INFO:Total runtime is 0.6029826641082764 minutes
2025-03-14 13:00:40,999:INFO:SubProcess create_model() called ==================================
2025-03-14 13:00:40,999:INFO:Initializing create_model()
2025-03-14 13:00:40,999:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:00:40,999:INFO:Checking exceptions
2025-03-14 13:00:40,999:INFO:Importing libraries
2025-03-14 13:00:40,999:INFO:Copying training dataset
2025-03-14 13:00:41,003:INFO:Defining folds
2025-03-14 13:00:41,004:INFO:Declaring metric variables
2025-03-14 13:00:41,007:INFO:Importing untrained model
2025-03-14 13:00:41,014:INFO:Decision Tree Classifier Imported successfully
2025-03-14 13:00:41,024:INFO:Starting cross validation
2025-03-14 13:00:41,026:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:00:41,258:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,259:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,264:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,265:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,270:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,274:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,280:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,285:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,286:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,289:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,290:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,294:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,296:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,297:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,298:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,302:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,308:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,313:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,318:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,324:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,330:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,334:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,448:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,454:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,458:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,471:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,475:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,479:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:41,496:INFO:Calculating mean and std
2025-03-14 13:00:41,498:INFO:Creating metrics dataframe
2025-03-14 13:00:41,502:INFO:Uploading results into container
2025-03-14 13:00:41,506:INFO:Uploading model into container now
2025-03-14 13:00:41,510:INFO:_master_model_container: 4
2025-03-14 13:00:41,511:INFO:_display_container: 2
2025-03-14 13:00:41,511:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=7616, splitter='best')
2025-03-14 13:00:41,512:INFO:create_model() successfully completed......................................
2025-03-14 13:00:41,877:INFO:SubProcess create_model() end ==================================
2025-03-14 13:00:41,877:INFO:Creating metrics dataframe
2025-03-14 13:00:41,886:INFO:Initializing SVM - Linear Kernel
2025-03-14 13:00:41,887:INFO:Total runtime is 0.6178352514902751 minutes
2025-03-14 13:00:41,892:INFO:SubProcess create_model() called ==================================
2025-03-14 13:00:41,893:INFO:Initializing create_model()
2025-03-14 13:00:41,893:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:00:41,893:INFO:Checking exceptions
2025-03-14 13:00:41,893:INFO:Importing libraries
2025-03-14 13:00:41,893:INFO:Copying training dataset
2025-03-14 13:00:41,898:INFO:Defining folds
2025-03-14 13:00:41,898:INFO:Declaring metric variables
2025-03-14 13:00:41,903:INFO:Importing untrained model
2025-03-14 13:00:41,909:INFO:SVM - Linear Kernel Imported successfully
2025-03-14 13:00:41,920:INFO:Starting cross validation
2025-03-14 13:00:41,922:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:00:42,148:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,150:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,154:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,156:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,159:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,164:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,164:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,165:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,166:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,166:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,167:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,173:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,173:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,174:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,175:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,175:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,176:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,176:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,177:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,178:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,178:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,181:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,182:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,183:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,184:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,186:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,186:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,198:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,199:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,205:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,207:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,210:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,215:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,218:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,221:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,223:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,227:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,297:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,298:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,300:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,303:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,304:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,312:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,313:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,315:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,316:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,317:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,332:INFO:Calculating mean and std
2025-03-14 13:00:42,332:INFO:Creating metrics dataframe
2025-03-14 13:00:42,335:INFO:Uploading results into container
2025-03-14 13:00:42,336:INFO:Uploading model into container now
2025-03-14 13:00:42,336:INFO:_master_model_container: 5
2025-03-14 13:00:42,336:INFO:_display_container: 2
2025-03-14 13:00:42,336:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7616, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-14 13:00:42,336:INFO:create_model() successfully completed......................................
2025-03-14 13:00:42,603:INFO:SubProcess create_model() end ==================================
2025-03-14 13:00:42,603:INFO:Creating metrics dataframe
2025-03-14 13:00:42,613:INFO:Initializing Ridge Classifier
2025-03-14 13:00:42,613:INFO:Total runtime is 0.6299633661905925 minutes
2025-03-14 13:00:42,618:INFO:SubProcess create_model() called ==================================
2025-03-14 13:00:42,618:INFO:Initializing create_model()
2025-03-14 13:00:42,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:00:42,618:INFO:Checking exceptions
2025-03-14 13:00:42,618:INFO:Importing libraries
2025-03-14 13:00:42,618:INFO:Copying training dataset
2025-03-14 13:00:42,624:INFO:Defining folds
2025-03-14 13:00:42,624:INFO:Declaring metric variables
2025-03-14 13:00:42,629:INFO:Importing untrained model
2025-03-14 13:00:42,635:INFO:Ridge Classifier Imported successfully
2025-03-14 13:00:42,644:INFO:Starting cross validation
2025-03-14 13:00:42,648:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:00:42,827:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,829:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,833:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,833:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,833:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,835:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,836:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,836:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,837:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,837:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,838:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,838:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,839:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,839:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,839:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,841:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,841:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,842:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,843:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,843:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,843:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,844:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,845:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,845:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,845:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,847:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,847:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,847:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,847:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,847:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,849:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,852:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,854:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,859:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,861:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,865:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,867:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,869:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,933:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,934:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:42,934:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,935:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,938:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,938:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,939:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,940:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:42,940:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,941:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:42,954:INFO:Calculating mean and std
2025-03-14 13:00:42,955:INFO:Creating metrics dataframe
2025-03-14 13:00:42,957:INFO:Uploading results into container
2025-03-14 13:00:42,957:INFO:Uploading model into container now
2025-03-14 13:00:42,957:INFO:_master_model_container: 6
2025-03-14 13:00:42,958:INFO:_display_container: 2
2025-03-14 13:00:42,958:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7616, solver='auto',
                tol=0.0001)
2025-03-14 13:00:42,958:INFO:create_model() successfully completed......................................
2025-03-14 13:00:43,167:INFO:SubProcess create_model() end ==================================
2025-03-14 13:00:43,167:INFO:Creating metrics dataframe
2025-03-14 13:00:43,175:INFO:Initializing Random Forest Classifier
2025-03-14 13:00:43,176:INFO:Total runtime is 0.639337416489919 minutes
2025-03-14 13:00:43,178:INFO:SubProcess create_model() called ==================================
2025-03-14 13:00:43,178:INFO:Initializing create_model()
2025-03-14 13:00:43,178:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:00:43,178:INFO:Checking exceptions
2025-03-14 13:00:43,178:INFO:Importing libraries
2025-03-14 13:00:43,178:INFO:Copying training dataset
2025-03-14 13:00:43,182:INFO:Defining folds
2025-03-14 13:00:43,184:INFO:Declaring metric variables
2025-03-14 13:00:43,187:INFO:Importing untrained model
2025-03-14 13:00:43,191:INFO:Random Forest Classifier Imported successfully
2025-03-14 13:00:43,200:INFO:Starting cross validation
2025-03-14 13:00:43,202:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:00:43,894:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:43,900:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:43,904:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:43,908:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:43,909:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:43,910:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:43,912:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:43,914:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:43,916:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:43,917:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:43,921:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:43,923:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:43,925:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:43,927:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:43,957:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:43,961:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:43,968:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,018:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,022:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,026:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,039:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,042:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,043:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:44,045:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,286:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,287:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,290:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,294:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,294:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,303:INFO:Calculating mean and std
2025-03-14 13:00:44,304:INFO:Creating metrics dataframe
2025-03-14 13:00:44,306:INFO:Uploading results into container
2025-03-14 13:00:44,307:INFO:Uploading model into container now
2025-03-14 13:00:44,307:INFO:_master_model_container: 7
2025-03-14 13:00:44,307:INFO:_display_container: 2
2025-03-14 13:00:44,309:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=7616, verbose=0,
                       warm_start=False)
2025-03-14 13:00:44,309:INFO:create_model() successfully completed......................................
2025-03-14 13:00:44,544:INFO:SubProcess create_model() end ==================================
2025-03-14 13:00:44,544:INFO:Creating metrics dataframe
2025-03-14 13:00:44,553:INFO:Initializing Quadratic Discriminant Analysis
2025-03-14 13:00:44,553:INFO:Total runtime is 0.6622889518737793 minutes
2025-03-14 13:00:44,558:INFO:SubProcess create_model() called ==================================
2025-03-14 13:00:44,558:INFO:Initializing create_model()
2025-03-14 13:00:44,558:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:00:44,558:INFO:Checking exceptions
2025-03-14 13:00:44,558:INFO:Importing libraries
2025-03-14 13:00:44,558:INFO:Copying training dataset
2025-03-14 13:00:44,562:INFO:Defining folds
2025-03-14 13:00:44,562:INFO:Declaring metric variables
2025-03-14 13:00:44,567:INFO:Importing untrained model
2025-03-14 13:00:44,574:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-14 13:00:44,583:INFO:Starting cross validation
2025-03-14 13:00:44,587:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:00:44,820:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:00:44,820:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:00:44,820:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:00:44,827:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:00:44,830:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:00:44,831:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:00:44,860:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:44,862:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,864:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:44,866:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,871:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:44,872:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,872:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:44,873:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:44,873:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,874:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:44,874:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:44,874:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,875:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:44,876:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,876:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,876:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,877:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,878:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,879:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:44,881:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,881:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,882:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,882:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:44,884:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,885:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:44,885:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:44,887:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,888:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,888:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,888:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:44,891:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,892:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,892:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:44,894:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,899:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,900:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:44,902:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,953:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:00:44,958:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:00:44,986:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:44,988:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,989:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:44,990:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,991:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,991:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:44,993:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,994:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:44,995:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:44,998:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,013:INFO:Calculating mean and std
2025-03-14 13:00:45,014:INFO:Creating metrics dataframe
2025-03-14 13:00:45,016:INFO:Uploading results into container
2025-03-14 13:00:45,017:INFO:Uploading model into container now
2025-03-14 13:00:45,017:INFO:_master_model_container: 8
2025-03-14 13:00:45,017:INFO:_display_container: 2
2025-03-14 13:00:45,018:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-14 13:00:45,018:INFO:create_model() successfully completed......................................
2025-03-14 13:00:45,262:INFO:SubProcess create_model() end ==================================
2025-03-14 13:00:45,263:INFO:Creating metrics dataframe
2025-03-14 13:00:45,274:INFO:Initializing Ada Boost Classifier
2025-03-14 13:00:45,274:INFO:Total runtime is 0.6743050217628479 minutes
2025-03-14 13:00:45,277:INFO:SubProcess create_model() called ==================================
2025-03-14 13:00:45,279:INFO:Initializing create_model()
2025-03-14 13:00:45,279:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:00:45,279:INFO:Checking exceptions
2025-03-14 13:00:45,279:INFO:Importing libraries
2025-03-14 13:00:45,280:INFO:Copying training dataset
2025-03-14 13:00:45,284:INFO:Defining folds
2025-03-14 13:00:45,284:INFO:Declaring metric variables
2025-03-14 13:00:45,290:INFO:Importing untrained model
2025-03-14 13:00:45,295:INFO:Ada Boost Classifier Imported successfully
2025-03-14 13:00:45,314:INFO:Starting cross validation
2025-03-14 13:00:45,318:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:00:45,491:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 13:00:45,491:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 13:00:45,491:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 13:00:45,501:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 13:00:45,520:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 13:00:45,526:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 13:00:45,722:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:45,725:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,728:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,733:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:45,733:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:45,735:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,735:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,736:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:45,739:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,740:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,741:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:45,741:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:45,743:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,743:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,744:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:45,745:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,746:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:45,747:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,748:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,751:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,754:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:45,754:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:45,755:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:45,755:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,757:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,758:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,760:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,762:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,762:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:45,763:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:45,764:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,769:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,770:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:45,772:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,775:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,778:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:45,779:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,826:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 13:00:45,826:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 13:00:45,981:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:45,983:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,984:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,986:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:45,990:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,991:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:45,993:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,997:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:45,998:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:46,000:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:46,016:INFO:Calculating mean and std
2025-03-14 13:00:46,017:INFO:Creating metrics dataframe
2025-03-14 13:00:46,018:INFO:Uploading results into container
2025-03-14 13:00:46,018:INFO:Uploading model into container now
2025-03-14 13:00:46,019:INFO:_master_model_container: 9
2025-03-14 13:00:46,019:INFO:_display_container: 2
2025-03-14 13:00:46,019:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=7616)
2025-03-14 13:00:46,019:INFO:create_model() successfully completed......................................
2025-03-14 13:00:46,277:INFO:SubProcess create_model() end ==================================
2025-03-14 13:00:46,277:INFO:Creating metrics dataframe
2025-03-14 13:00:46,286:INFO:Initializing Gradient Boosting Classifier
2025-03-14 13:00:46,286:INFO:Total runtime is 0.6911807060241699 minutes
2025-03-14 13:00:46,289:INFO:SubProcess create_model() called ==================================
2025-03-14 13:00:46,289:INFO:Initializing create_model()
2025-03-14 13:00:46,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:00:46,291:INFO:Checking exceptions
2025-03-14 13:00:46,291:INFO:Importing libraries
2025-03-14 13:00:46,291:INFO:Copying training dataset
2025-03-14 13:00:46,296:INFO:Defining folds
2025-03-14 13:00:46,296:INFO:Declaring metric variables
2025-03-14 13:00:46,299:INFO:Importing untrained model
2025-03-14 13:00:46,303:INFO:Gradient Boosting Classifier Imported successfully
2025-03-14 13:00:46,314:INFO:Starting cross validation
2025-03-14 13:00:46,316:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:00:49,089:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:49,093:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,097:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,101:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,120:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:49,123:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,128:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,132:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,156:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:49,158:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,163:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:49,164:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,165:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,173:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,182:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:49,185:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,185:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,197:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,215:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,234:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,275:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:49,285:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,294:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,329:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,347:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:49,357:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,365:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,373:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,425:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:49,428:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,434:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:49,440:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,350:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:51,353:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,357:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,359:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,369:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:51,370:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,374:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,377:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,383:INFO:Calculating mean and std
2025-03-14 13:00:51,384:INFO:Creating metrics dataframe
2025-03-14 13:00:51,387:INFO:Uploading results into container
2025-03-14 13:00:51,388:INFO:Uploading model into container now
2025-03-14 13:00:51,388:INFO:_master_model_container: 10
2025-03-14 13:00:51,388:INFO:_display_container: 2
2025-03-14 13:00:51,389:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 13:00:51,389:INFO:create_model() successfully completed......................................
2025-03-14 13:00:51,640:INFO:SubProcess create_model() end ==================================
2025-03-14 13:00:51,640:INFO:Creating metrics dataframe
2025-03-14 13:00:51,648:INFO:Initializing Linear Discriminant Analysis
2025-03-14 13:00:51,648:INFO:Total runtime is 0.7805360754330953 minutes
2025-03-14 13:00:51,650:INFO:SubProcess create_model() called ==================================
2025-03-14 13:00:51,651:INFO:Initializing create_model()
2025-03-14 13:00:51,651:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:00:51,651:INFO:Checking exceptions
2025-03-14 13:00:51,652:INFO:Importing libraries
2025-03-14 13:00:51,652:INFO:Copying training dataset
2025-03-14 13:00:51,656:INFO:Defining folds
2025-03-14 13:00:51,656:INFO:Declaring metric variables
2025-03-14 13:00:51,660:INFO:Importing untrained model
2025-03-14 13:00:51,667:INFO:Linear Discriminant Analysis Imported successfully
2025-03-14 13:00:51,676:INFO:Starting cross validation
2025-03-14 13:00:51,678:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:00:51,868:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:51,870:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:51,871:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,873:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,876:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,878:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:51,881:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,882:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,883:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:51,885:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,912:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:51,914:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,919:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,921:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:51,924:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,925:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:51,925:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:51,928:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,931:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,934:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,935:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,936:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:51,936:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:51,938:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,938:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,947:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:51,949:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,949:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,953:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,954:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,954:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:51,955:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:51,956:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,956:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:51,956:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,959:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,961:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:51,963:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:51,965:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:52,003:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:52,004:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:52,007:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:52,009:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:00:52,010:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:52,011:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:52,012:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:52,016:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:52,020:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:52,031:INFO:Calculating mean and std
2025-03-14 13:00:52,032:INFO:Creating metrics dataframe
2025-03-14 13:00:52,034:INFO:Uploading results into container
2025-03-14 13:00:52,034:INFO:Uploading model into container now
2025-03-14 13:00:52,035:INFO:_master_model_container: 11
2025-03-14 13:00:52,036:INFO:_display_container: 2
2025-03-14 13:00:52,036:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-14 13:00:52,036:INFO:create_model() successfully completed......................................
2025-03-14 13:00:52,327:INFO:SubProcess create_model() end ==================================
2025-03-14 13:00:52,327:INFO:Creating metrics dataframe
2025-03-14 13:00:52,338:INFO:Initializing Extra Trees Classifier
2025-03-14 13:00:52,338:INFO:Total runtime is 0.7920448780059814 minutes
2025-03-14 13:00:52,345:INFO:SubProcess create_model() called ==================================
2025-03-14 13:00:52,345:INFO:Initializing create_model()
2025-03-14 13:00:52,345:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:00:52,345:INFO:Checking exceptions
2025-03-14 13:00:52,345:INFO:Importing libraries
2025-03-14 13:00:52,345:INFO:Copying training dataset
2025-03-14 13:00:52,351:INFO:Defining folds
2025-03-14 13:00:52,352:INFO:Declaring metric variables
2025-03-14 13:00:52,356:INFO:Importing untrained model
2025-03-14 13:00:52,362:INFO:Extra Trees Classifier Imported successfully
2025-03-14 13:00:52,375:INFO:Starting cross validation
2025-03-14 13:00:52,378:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:00:52,999:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,004:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,010:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,014:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,018:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,022:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,024:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,030:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,037:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,037:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,047:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,053:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:53,056:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,104:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,106:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,108:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,108:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,110:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,111:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,111:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,113:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:00:53,114:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,115:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,139:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,144:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,148:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,454:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,457:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,461:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,465:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,469:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,472:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:53,483:INFO:Calculating mean and std
2025-03-14 13:00:53,485:INFO:Creating metrics dataframe
2025-03-14 13:00:53,488:INFO:Uploading results into container
2025-03-14 13:00:53,488:INFO:Uploading model into container now
2025-03-14 13:00:53,489:INFO:_master_model_container: 12
2025-03-14 13:00:53,489:INFO:_display_container: 2
2025-03-14 13:00:53,489:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=7616, verbose=0,
                     warm_start=False)
2025-03-14 13:00:53,489:INFO:create_model() successfully completed......................................
2025-03-14 13:00:53,691:INFO:SubProcess create_model() end ==================================
2025-03-14 13:00:53,692:INFO:Creating metrics dataframe
2025-03-14 13:00:53,704:INFO:Initializing Extreme Gradient Boosting
2025-03-14 13:00:53,704:INFO:Total runtime is 0.8148093342781066 minutes
2025-03-14 13:00:53,709:INFO:SubProcess create_model() called ==================================
2025-03-14 13:00:53,710:INFO:Initializing create_model()
2025-03-14 13:00:53,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:00:53,711:INFO:Checking exceptions
2025-03-14 13:00:53,711:INFO:Importing libraries
2025-03-14 13:00:53,711:INFO:Copying training dataset
2025-03-14 13:00:53,718:INFO:Defining folds
2025-03-14 13:00:53,719:INFO:Declaring metric variables
2025-03-14 13:00:53,725:INFO:Importing untrained model
2025-03-14 13:00:53,732:INFO:Extreme Gradient Boosting Imported successfully
2025-03-14 13:00:53,742:INFO:Starting cross validation
2025-03-14 13:00:53,746:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:00:54,524:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,529:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,539:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,541:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,545:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,547:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,547:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,552:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,552:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,558:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,557:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,564:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,582:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,588:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,594:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,599:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,610:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,615:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,620:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,629:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,629:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,637:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,642:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,649:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,956:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,960:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,963:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,964:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,968:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,970:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:54,976:INFO:Calculating mean and std
2025-03-14 13:00:54,977:INFO:Creating metrics dataframe
2025-03-14 13:00:54,980:INFO:Uploading results into container
2025-03-14 13:00:54,981:INFO:Uploading model into container now
2025-03-14 13:00:54,982:INFO:_master_model_container: 13
2025-03-14 13:00:54,982:INFO:_display_container: 2
2025-03-14 13:00:54,983:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-03-14 13:00:54,983:INFO:create_model() successfully completed......................................
2025-03-14 13:00:55,278:INFO:SubProcess create_model() end ==================================
2025-03-14 13:00:55,278:INFO:Creating metrics dataframe
2025-03-14 13:00:55,288:INFO:Initializing Light Gradient Boosting Machine
2025-03-14 13:00:55,288:INFO:Total runtime is 0.8412046472231547 minutes
2025-03-14 13:00:55,291:INFO:SubProcess create_model() called ==================================
2025-03-14 13:00:55,291:INFO:Initializing create_model()
2025-03-14 13:00:55,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:00:55,293:INFO:Checking exceptions
2025-03-14 13:00:55,293:INFO:Importing libraries
2025-03-14 13:00:55,293:INFO:Copying training dataset
2025-03-14 13:00:55,296:INFO:Defining folds
2025-03-14 13:00:55,296:INFO:Declaring metric variables
2025-03-14 13:00:55,298:INFO:Importing untrained model
2025-03-14 13:00:55,303:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-14 13:00:55,310:INFO:Starting cross validation
2025-03-14 13:00:55,313:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:00:57,716:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:57,720:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:57,724:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:57,936:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:57,941:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:57,946:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:58,356:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:58,361:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:58,367:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:58,774:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:58,779:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:58,782:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:58,955:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:58,960:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:58,963:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:59,050:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:59,055:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:59,059:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:59,168:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:59,170:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:59,175:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:59,255:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:59,263:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:00:59,270:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:00,045:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:00,050:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:00,053:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:00,287:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:00,290:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:00,293:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:00,299:INFO:Calculating mean and std
2025-03-14 13:01:00,300:INFO:Creating metrics dataframe
2025-03-14 13:01:00,303:INFO:Uploading results into container
2025-03-14 13:01:00,303:INFO:Uploading model into container now
2025-03-14 13:01:00,304:INFO:_master_model_container: 14
2025-03-14 13:01:00,304:INFO:_display_container: 2
2025-03-14 13:01:00,305:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7616, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-14 13:01:00,305:INFO:create_model() successfully completed......................................
2025-03-14 13:01:00,572:INFO:SubProcess create_model() end ==================================
2025-03-14 13:01:00,572:INFO:Creating metrics dataframe
2025-03-14 13:01:00,587:INFO:Initializing CatBoost Classifier
2025-03-14 13:01:00,587:INFO:Total runtime is 0.9295149445533752 minutes
2025-03-14 13:01:00,591:INFO:SubProcess create_model() called ==================================
2025-03-14 13:01:00,591:INFO:Initializing create_model()
2025-03-14 13:01:00,591:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:01:00,591:INFO:Checking exceptions
2025-03-14 13:01:00,591:INFO:Importing libraries
2025-03-14 13:01:00,591:INFO:Copying training dataset
2025-03-14 13:01:00,595:INFO:Defining folds
2025-03-14 13:01:00,595:INFO:Declaring metric variables
2025-03-14 13:01:00,599:INFO:Importing untrained model
2025-03-14 13:01:00,606:INFO:CatBoost Classifier Imported successfully
2025-03-14 13:01:00,615:INFO:Starting cross validation
2025-03-14 13:01:00,619:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:01:38,207:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:38,213:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:38,220:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:39,406:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:39,436:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:39,462:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:39,554:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:39,560:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:39,644:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:40,089:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:40,101:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:40,110:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:41,577:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:41,584:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:41,590:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:41,758:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:41,764:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:41,770:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:41,810:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:41,817:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:41,823:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:42,377:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:42,380:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:42,389:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:54,303:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:54,308:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:54,315:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:54,445:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:54,448:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:54,450:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:54,466:INFO:Calculating mean and std
2025-03-14 13:01:54,468:INFO:Creating metrics dataframe
2025-03-14 13:01:54,470:INFO:Uploading results into container
2025-03-14 13:01:54,471:INFO:Uploading model into container now
2025-03-14 13:01:54,472:INFO:_master_model_container: 15
2025-03-14 13:01:54,472:INFO:_display_container: 2
2025-03-14 13:01:54,472:INFO:<catboost.core.CatBoostClassifier object at 0x000002245003FDD0>
2025-03-14 13:01:54,472:INFO:create_model() successfully completed......................................
2025-03-14 13:01:54,822:INFO:SubProcess create_model() end ==================================
2025-03-14 13:01:54,822:INFO:Creating metrics dataframe
2025-03-14 13:01:54,835:INFO:Initializing Dummy Classifier
2025-03-14 13:01:54,836:INFO:Total runtime is 1.833648173014323 minutes
2025-03-14 13:01:54,842:INFO:SubProcess create_model() called ==================================
2025-03-14 13:01:54,842:INFO:Initializing create_model()
2025-03-14 13:01:54,843:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF07050>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:01:54,843:INFO:Checking exceptions
2025-03-14 13:01:54,843:INFO:Importing libraries
2025-03-14 13:01:54,843:INFO:Copying training dataset
2025-03-14 13:01:54,850:INFO:Defining folds
2025-03-14 13:01:54,850:INFO:Declaring metric variables
2025-03-14 13:01:54,857:INFO:Importing untrained model
2025-03-14 13:01:54,870:INFO:Dummy Classifier Imported successfully
2025-03-14 13:01:54,888:INFO:Starting cross validation
2025-03-14 13:01:54,891:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:01:55,238:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,246:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,250:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:01:55,253:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,264:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,268:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,273:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,274:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,274:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,275:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:01:55,279:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,280:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:01:55,281:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,281:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,281:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:01:55,284:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,285:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:01:55,285:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,286:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,287:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,287:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,287:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,289:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:01:55,294:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,300:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,302:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:01:55,307:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,323:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,327:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,329:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:01:55,331:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,397:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,399:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,400:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:01:55,402:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,408:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,412:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,413:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:01:55,414:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:01:55,426:INFO:Calculating mean and std
2025-03-14 13:01:55,427:INFO:Creating metrics dataframe
2025-03-14 13:01:55,429:INFO:Uploading results into container
2025-03-14 13:01:55,430:INFO:Uploading model into container now
2025-03-14 13:01:55,430:INFO:_master_model_container: 16
2025-03-14 13:01:55,430:INFO:_display_container: 2
2025-03-14 13:01:55,431:INFO:DummyClassifier(constant=None, random_state=7616, strategy='prior')
2025-03-14 13:01:55,431:INFO:create_model() successfully completed......................................
2025-03-14 13:01:55,683:INFO:SubProcess create_model() end ==================================
2025-03-14 13:01:55,683:INFO:Creating metrics dataframe
2025-03-14 13:01:55,694:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-03-14 13:01:55,705:INFO:Initializing create_model()
2025-03-14 13:01:55,705:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:01:55,705:INFO:Checking exceptions
2025-03-14 13:01:55,710:INFO:Importing libraries
2025-03-14 13:01:55,710:INFO:Copying training dataset
2025-03-14 13:01:55,716:INFO:Defining folds
2025-03-14 13:01:55,716:INFO:Declaring metric variables
2025-03-14 13:01:55,716:INFO:Importing untrained model
2025-03-14 13:01:55,716:INFO:Declaring custom model
2025-03-14 13:01:55,717:INFO:Gradient Boosting Classifier Imported successfully
2025-03-14 13:01:55,718:INFO:Cross validation set to False
2025-03-14 13:01:55,718:INFO:Fitting Model
2025-03-14 13:01:57,741:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 13:01:57,741:INFO:create_model() successfully completed......................................
2025-03-14 13:01:58,099:INFO:_master_model_container: 16
2025-03-14 13:01:58,099:INFO:_display_container: 2
2025-03-14 13:01:58,100:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 13:01:58,100:INFO:compare_models() successfully completed......................................
2025-03-14 13:02:29,701:INFO:Initializing create_model()
2025-03-14 13:02:29,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=qda, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:02:29,702:INFO:Checking exceptions
2025-03-14 13:02:29,721:INFO:Importing libraries
2025-03-14 13:02:29,721:INFO:Copying training dataset
2025-03-14 13:02:29,728:INFO:Defining folds
2025-03-14 13:02:29,729:INFO:Declaring metric variables
2025-03-14 13:02:29,732:INFO:Importing untrained model
2025-03-14 13:02:29,735:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-14 13:02:29,744:INFO:Starting cross validation
2025-03-14 13:02:29,747:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:02:29,882:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:02:29,893:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:02:29,907:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:02:29,942:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:02:29,944:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:02:29,958:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:29,962:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:29,968:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:02:29,968:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:29,971:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:29,976:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:29,976:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:29,978:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:02:29,980:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:29,980:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:29,988:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:02:29,991:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:29,995:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,000:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:02:30,000:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,004:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:30,005:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:02:30,006:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,008:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:30,010:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,010:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,012:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,012:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:02:30,014:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,016:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,020:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,031:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:30,033:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,037:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,038:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:02:30,040:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,041:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:30,043:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,047:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,048:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:30,049:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:02:30,049:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,051:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,051:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,052:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:02:30,054:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,066:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:02:30,068:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:02:30,088:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:30,089:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,091:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:30,092:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,093:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,093:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:02:30,095:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,097:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,098:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 13:02:30,100:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:30,118:INFO:Calculating mean and std
2025-03-14 13:02:30,119:INFO:Creating metrics dataframe
2025-03-14 13:02:30,123:INFO:Finalizing model
2025-03-14 13:02:30,183:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 13:02:30,190:INFO:Uploading results into container
2025-03-14 13:02:30,191:INFO:Uploading model into container now
2025-03-14 13:02:30,243:INFO:_master_model_container: 17
2025-03-14 13:02:30,244:INFO:_display_container: 3
2025-03-14 13:02:30,244:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-14 13:02:30,244:INFO:create_model() successfully completed......................................
2025-03-14 13:02:30,626:INFO:Initializing tune_model()
2025-03-14 13:02:30,626:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=qda, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-03-14 13:02:30,626:INFO:Checking exceptions
2025-03-14 13:02:52,867:INFO:Initializing create_model()
2025-03-14 13:02:52,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:02:52,867:INFO:Checking exceptions
2025-03-14 13:02:52,882:INFO:Importing libraries
2025-03-14 13:02:52,882:INFO:Copying training dataset
2025-03-14 13:02:52,890:INFO:Defining folds
2025-03-14 13:02:52,890:INFO:Declaring metric variables
2025-03-14 13:02:52,895:INFO:Importing untrained model
2025-03-14 13:02:52,899:INFO:Gradient Boosting Classifier Imported successfully
2025-03-14 13:02:52,911:INFO:Starting cross validation
2025-03-14 13:02:52,916:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:02:56,097:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:56,097:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:56,099:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,099:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,105:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,108:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,109:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,154:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:56,158:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,163:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:56,167:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,169:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,171:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,173:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,175:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,272:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:56,277:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,278:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:56,281:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,282:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,287:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,290:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,296:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,339:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:56,341:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:56,342:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,343:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,348:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,349:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,352:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:56,354:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:58,007:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:58,008:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:58,010:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:58,010:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:02:58,012:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:58,013:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:58,015:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:58,018:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:02:58,030:INFO:Calculating mean and std
2025-03-14 13:02:58,031:INFO:Creating metrics dataframe
2025-03-14 13:02:58,034:INFO:Finalizing model
2025-03-14 13:03:00,134:INFO:Uploading results into container
2025-03-14 13:03:00,137:INFO:Uploading model into container now
2025-03-14 13:03:00,149:INFO:_master_model_container: 18
2025-03-14 13:03:00,151:INFO:_display_container: 4
2025-03-14 13:03:00,151:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 13:03:00,151:INFO:create_model() successfully completed......................................
2025-03-14 13:03:00,472:INFO:Initializing tune_model()
2025-03-14 13:03:00,472:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=gbc, fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-03-14 13:03:00,473:INFO:Checking exceptions
2025-03-14 13:03:13,238:INFO:Initializing tune_model()
2025-03-14 13:03:13,238:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-03-14 13:03:13,238:INFO:Checking exceptions
2025-03-14 13:03:13,260:INFO:Copying training dataset
2025-03-14 13:03:13,266:INFO:Checking base model
2025-03-14 13:03:13,266:INFO:Base model : Gradient Boosting Classifier
2025-03-14 13:03:13,271:INFO:Declaring metric variables
2025-03-14 13:03:13,275:INFO:Defining Hyperparameters
2025-03-14 13:03:13,533:INFO:Tuning with n_jobs=-1
2025-03-14 13:03:13,533:INFO:Initializing RandomizedSearchCV
2025-03-14 13:03:49,028:INFO:best_params: {'actual_estimator__subsample': 0.9, 'actual_estimator__n_estimators': 260, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.02, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 7, 'actual_estimator__learning_rate': 0.2}
2025-03-14 13:03:49,029:INFO:Hyperparameter search completed
2025-03-14 13:03:49,029:INFO:SubProcess create_model() called ==================================
2025-03-14 13:03:49,030:INFO:Initializing create_model()
2025-03-14 13:03:49,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002244FF05750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.9, 'n_estimators': 260, 'min_samples_split': 2, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.02, 'max_features': 1.0, 'max_depth': 7, 'learning_rate': 0.2})
2025-03-14 13:03:49,030:INFO:Checking exceptions
2025-03-14 13:03:49,030:INFO:Importing libraries
2025-03-14 13:03:49,030:INFO:Copying training dataset
2025-03-14 13:03:49,036:INFO:Defining folds
2025-03-14 13:03:49,036:INFO:Declaring metric variables
2025-03-14 13:03:49,038:INFO:Importing untrained model
2025-03-14 13:03:49,039:INFO:Declaring custom model
2025-03-14 13:03:49,044:INFO:Gradient Boosting Classifier Imported successfully
2025-03-14 13:03:49,050:INFO:Starting cross validation
2025-03-14 13:03:49,053:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:03:52,901:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:03:52,903:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:52,909:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:52,913:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,016:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:03:53,022:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,028:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,034:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,058:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:03:53,061:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,067:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,071:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,099:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:03:53,102:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,105:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,107:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:03:53,110:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,111:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,114:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,118:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,236:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:03:53,238:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,243:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,247:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,750:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:03:53,752:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,758:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:53,761:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:54,189:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:03:54,191:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:54,194:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:54,199:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:55,236:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:03:55,237:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:55,240:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:55,242:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:55,314:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:03:55,315:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:55,317:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:55,320:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:55,332:INFO:Calculating mean and std
2025-03-14 13:03:55,333:INFO:Creating metrics dataframe
2025-03-14 13:03:55,338:INFO:Finalizing model
2025-03-14 13:03:57,126:INFO:Uploading results into container
2025-03-14 13:03:57,127:INFO:Uploading model into container now
2025-03-14 13:03:57,128:INFO:_master_model_container: 19
2025-03-14 13:03:57,128:INFO:_display_container: 5
2025-03-14 13:03:57,129:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.2, loss='log_loss', max_depth=7,
                           max_features=1.0, max_leaf_nodes=None,
                           min_impurity_decrease=0.02, min_samples_leaf=3,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=260, n_iter_no_change=None,
                           random_state=7616, subsample=0.9, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 13:03:57,130:INFO:create_model() successfully completed......................................
2025-03-14 13:03:57,353:INFO:SubProcess create_model() end ==================================
2025-03-14 13:03:57,353:INFO:choose_better activated
2025-03-14 13:03:57,356:INFO:SubProcess create_model() called ==================================
2025-03-14 13:03:57,357:INFO:Initializing create_model()
2025-03-14 13:03:57,357:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:03:57,357:INFO:Checking exceptions
2025-03-14 13:03:57,358:INFO:Importing libraries
2025-03-14 13:03:57,359:INFO:Copying training dataset
2025-03-14 13:03:57,361:INFO:Defining folds
2025-03-14 13:03:57,361:INFO:Declaring metric variables
2025-03-14 13:03:57,361:INFO:Importing untrained model
2025-03-14 13:03:57,361:INFO:Declaring custom model
2025-03-14 13:03:57,361:INFO:Gradient Boosting Classifier Imported successfully
2025-03-14 13:03:57,361:INFO:Starting cross validation
2025-03-14 13:03:57,363:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 13:03:59,916:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:03:59,920:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:59,927:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:59,927:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:03:59,929:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:59,931:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:59,937:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:59,961:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:59,965:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:03:59,970:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:59,977:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:59,982:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:59,986:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:03:59,989:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:59,992:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:03:59,994:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:59,994:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:03:59,998:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:00,000:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:00,003:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:00,004:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:04:00,007:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:00,013:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:00,018:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:00,030:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:04:00,034:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:00,038:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:04:00,041:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:00,043:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:00,047:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:00,048:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:00,051:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:01,738:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:04:01,740:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:01,742:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:01,744:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:01,797:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 13:04:01,798:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:01,799:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:01,802:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 13:04:01,809:INFO:Calculating mean and std
2025-03-14 13:04:01,810:INFO:Creating metrics dataframe
2025-03-14 13:04:01,811:INFO:Finalizing model
2025-03-14 13:04:03,374:INFO:Uploading results into container
2025-03-14 13:04:03,374:INFO:Uploading model into container now
2025-03-14 13:04:03,375:INFO:_master_model_container: 20
2025-03-14 13:04:03,375:INFO:_display_container: 6
2025-03-14 13:04:03,375:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 13:04:03,375:INFO:create_model() successfully completed......................................
2025-03-14 13:04:03,595:INFO:SubProcess create_model() end ==================================
2025-03-14 13:04:03,596:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.9729
2025-03-14 13:04:03,597:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.2, loss='log_loss', max_depth=7,
                           max_features=1.0, max_leaf_nodes=None,
                           min_impurity_decrease=0.02, min_samples_leaf=3,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=260, n_iter_no_change=None,
                           random_state=7616, subsample=0.9, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.9629
2025-03-14 13:04:03,597:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2025-03-14 13:04:03,597:INFO:choose_better completed
2025-03-14 13:04:03,597:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-03-14 13:04:03,608:INFO:_master_model_container: 20
2025-03-14 13:04:03,608:INFO:_display_container: 5
2025-03-14 13:04:03,608:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 13:04:03,608:INFO:tune_model() successfully completed......................................
2025-03-14 13:04:03,865:INFO:Initializing plot_model()
2025-03-14 13:04:03,866:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=boundary, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-03-14 13:04:03,866:INFO:Checking exceptions
2025-03-14 13:04:03,881:INFO:Preloading libraries
2025-03-14 13:04:03,945:INFO:Copying training dataset
2025-03-14 13:04:03,945:INFO:Plot type: boundary
2025-03-14 13:04:04,127:INFO:Fitting StandardScaler()
2025-03-14 13:04:04,132:INFO:Fitting PCA()
2025-03-14 13:04:04,385:INFO:Fitting Model
2025-03-14 13:04:12,003:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\yellowbrick\contrib\classifier\boundaries.py:467: UserWarning: You passed a edgecolor/edgecolors ('black') for an unfilled marker ('+').  Matplotlib is ignoring the edgecolor in favor of the facecolor.  This behavior may change in the future.
  self.ax.scatter(

2025-03-14 13:04:12,995:INFO:Visual Rendered Successfully
2025-03-14 13:04:13,317:INFO:plot_model() successfully completed......................................
2025-03-14 13:04:13,378:INFO:Initializing plot_model()
2025-03-14 13:04:13,378:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-03-14 13:04:13,378:INFO:Checking exceptions
2025-03-14 13:04:13,390:INFO:Preloading libraries
2025-03-14 13:04:13,478:INFO:Copying training dataset
2025-03-14 13:04:13,478:INFO:Plot type: confusion_matrix
2025-03-14 13:04:13,788:INFO:Fitting Model
2025-03-14 13:04:13,789:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2025-03-14 13:04:13,789:INFO:Scoring test/hold-out set
2025-03-14 13:04:14,110:INFO:Visual Rendered Successfully
2025-03-14 13:04:14,368:INFO:plot_model() successfully completed......................................
2025-03-14 13:04:14,383:INFO:Initializing plot_model()
2025-03-14 13:04:14,383:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=error, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-03-14 13:04:14,383:INFO:Checking exceptions
2025-03-14 13:04:14,394:INFO:Preloading libraries
2025-03-14 13:04:14,452:INFO:Copying training dataset
2025-03-14 13:04:14,453:INFO:Plot type: error
2025-03-14 13:04:14,748:INFO:Fitting Model
2025-03-14 13:04:14,748:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2025-03-14 13:04:14,748:INFO:Scoring test/hold-out set
2025-03-14 13:04:15,142:INFO:Visual Rendered Successfully
2025-03-14 13:04:15,401:INFO:plot_model() successfully completed......................................
2025-03-14 13:19:49,086:INFO:Initializing finalize_model()
2025-03-14 13:19:49,086:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-14 13:19:49,087:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 13:19:49,091:INFO:Initializing create_model()
2025-03-14 13:19:49,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000224500655D0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 13:19:49,091:INFO:Checking exceptions
2025-03-14 13:19:49,094:INFO:Importing libraries
2025-03-14 13:19:49,094:INFO:Copying training dataset
2025-03-14 13:19:49,094:INFO:Defining folds
2025-03-14 13:19:49,094:INFO:Declaring metric variables
2025-03-14 13:19:49,094:INFO:Importing untrained model
2025-03-14 13:19:49,094:INFO:Declaring custom model
2025-03-14 13:19:49,095:INFO:Gradient Boosting Classifier Imported successfully
2025-03-14 13:19:49,097:INFO:Cross validation set to False
2025-03-14 13:19:49,097:INFO:Fitting Model
2025-03-14 13:19:50,783:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=7616, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-03-14 13:19:50,783:INFO:create_model() successfully completed......................................
2025-03-14 13:19:51,101:INFO:_master_model_container: 20
2025-03-14 13:19:51,101:INFO:_display_container: 5
2025-03-14 13:19:51,120:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=7616, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-03-14 13:19:51,120:INFO:finalize_model() successfully completed......................................
2025-03-14 13:26:30,829:INFO:Initializing save_model()
2025-03-14 13:26:30,830:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7616, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=qda1, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ARDIAN~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                                    transformer=TargetEncoder(cols=['Minat dan '
                                                                    'Bakat',
                                                                    'Rencana '
                                                                    'Karir'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-14 13:26:30,830:INFO:Adding model into prep_pipe
2025-03-14 13:26:30,899:INFO:qda1.pkl saved in current working directory
2025-03-14 13:26:30,913:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=7616, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-03-14 13:26:30,913:INFO:save_model() successfully completed......................................
2025-03-14 15:41:26,073:INFO:PyCaret ClassificationExperiment
2025-03-14 15:41:26,075:INFO:Logging name: clf-default-name
2025-03-14 15:41:26,076:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-14 15:41:26,076:INFO:version 3.3.2
2025-03-14 15:41:26,076:INFO:Initializing setup()
2025-03-14 15:41:26,076:INFO:self.USI: 905c
2025-03-14 15:41:26,079:INFO:self._variable_keys: {'y_test', 'X_train', 'memory', 'seed', 'fix_imbalance', 'pipeline', 'idx', 'html_param', '_available_plots', 'y_train', 'X_test', 'log_plots_param', '_ml_usecase', 'USI', 'fold_generator', 'fold_shuffle_param', 'y', 'X', 'gpu_n_jobs_param', 'target_param', 'exp_id', 'is_multiclass', 'fold_groups_param', 'logging_param', 'n_jobs_param', 'gpu_param', 'data', 'exp_name_log'}
2025-03-14 15:41:26,083:INFO:Checking environment
2025-03-14 15:41:26,084:INFO:python_version: 3.11.7
2025-03-14 15:41:26,085:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2025-03-14 15:41:26,086:INFO:machine: AMD64
2025-03-14 15:41:26,087:INFO:platform: Windows-10-10.0.22631-SP0
2025-03-14 15:41:26,113:INFO:Memory: svmem(total=7897944064, available=1003888640, percent=87.3, used=6894055424, free=1003888640)
2025-03-14 15:41:26,113:INFO:Physical Core: 4
2025-03-14 15:41:26,113:INFO:Logical Core: 8
2025-03-14 15:41:26,114:INFO:Checking libraries
2025-03-14 15:41:26,115:INFO:System:
2025-03-14 15:41:26,116:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2025-03-14 15:41:26,116:INFO:executable: c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\python.exe
2025-03-14 15:41:26,117:INFO:   machine: Windows-10-10.0.22631-SP0
2025-03-14 15:41:26,117:INFO:PyCaret required dependencies:
2025-03-14 15:41:26,123:INFO:                 pip: 24.0
2025-03-14 15:41:26,123:INFO:          setuptools: 75.8.0
2025-03-14 15:41:26,123:INFO:             pycaret: 3.3.2
2025-03-14 15:41:26,124:INFO:             IPython: 8.23.0
2025-03-14 15:41:26,124:INFO:          ipywidgets: 8.1.2
2025-03-14 15:41:26,124:INFO:                tqdm: 4.67.1
2025-03-14 15:41:26,125:INFO:               numpy: 1.26.4
2025-03-14 15:41:26,125:INFO:              pandas: 2.1.4
2025-03-14 15:41:26,125:INFO:              jinja2: 3.1.3
2025-03-14 15:41:26,125:INFO:               scipy: 1.11.4
2025-03-14 15:41:26,125:INFO:              joblib: 1.3.2
2025-03-14 15:41:26,125:INFO:             sklearn: 1.4.2
2025-03-14 15:41:26,125:INFO:                pyod: 1.1.3
2025-03-14 15:41:26,125:INFO:            imblearn: 0.12.2
2025-03-14 15:41:26,125:INFO:   category_encoders: 2.6.3
2025-03-14 15:41:26,125:INFO:            lightgbm: 4.3.0
2025-03-14 15:41:26,125:INFO:               numba: 0.59.1
2025-03-14 15:41:26,125:INFO:            requests: 2.32.3
2025-03-14 15:41:26,126:INFO:          matplotlib: 3.7.5
2025-03-14 15:41:26,126:INFO:          scikitplot: 0.3.7
2025-03-14 15:41:26,126:INFO:         yellowbrick: 1.5
2025-03-14 15:41:26,126:INFO:              plotly: 5.20.0
2025-03-14 15:41:26,126:INFO:    plotly-resampler: Not installed
2025-03-14 15:41:26,126:INFO:             kaleido: 0.2.1
2025-03-14 15:41:26,126:INFO:           schemdraw: 0.15
2025-03-14 15:41:26,126:INFO:         statsmodels: 0.14.1
2025-03-14 15:41:26,126:INFO:              sktime: 0.26.0
2025-03-14 15:41:26,126:INFO:               tbats: 1.1.3
2025-03-14 15:41:26,126:INFO:            pmdarima: 2.0.4
2025-03-14 15:41:26,126:INFO:              psutil: 5.9.8
2025-03-14 15:41:26,126:INFO:          markupsafe: 2.1.5
2025-03-14 15:41:26,126:INFO:             pickle5: Not installed
2025-03-14 15:41:26,126:INFO:         cloudpickle: 3.0.0
2025-03-14 15:41:26,126:INFO:         deprecation: 2.1.0
2025-03-14 15:41:26,127:INFO:              xxhash: 3.4.1
2025-03-14 15:41:26,127:INFO:           wurlitzer: Not installed
2025-03-14 15:41:26,127:INFO:PyCaret optional dependencies:
2025-03-14 15:41:26,130:INFO:                shap: 0.44.1
2025-03-14 15:41:26,130:INFO:           interpret: 0.6.7
2025-03-14 15:41:26,130:INFO:                umap: 0.5.7
2025-03-14 15:41:26,130:INFO:     ydata_profiling: 4.7.0
2025-03-14 15:41:26,130:INFO:  explainerdashboard: 0.4.7
2025-03-14 15:41:26,131:INFO:             autoviz: Not installed
2025-03-14 15:41:26,131:INFO:           fairlearn: 0.7.0
2025-03-14 15:41:26,131:INFO:          deepchecks: Not installed
2025-03-14 15:41:26,131:INFO:             xgboost: 2.0.3
2025-03-14 15:41:26,131:INFO:            catboost: 1.2.7
2025-03-14 15:41:26,131:INFO:              kmodes: 0.12.2
2025-03-14 15:41:26,131:INFO:             mlxtend: 0.23.1
2025-03-14 15:41:26,131:INFO:       statsforecast: 1.5.0
2025-03-14 15:41:26,131:INFO:        tune_sklearn: Not installed
2025-03-14 15:41:26,131:INFO:                 ray: Not installed
2025-03-14 15:41:26,131:INFO:            hyperopt: 0.2.7
2025-03-14 15:41:26,132:INFO:              optuna: 3.6.1
2025-03-14 15:41:26,132:INFO:               skopt: 0.10.2
2025-03-14 15:41:26,132:INFO:              mlflow: 2.11.3
2025-03-14 15:41:26,132:INFO:              gradio: 5.7.0
2025-03-14 15:41:26,132:INFO:             fastapi: 0.115.5
2025-03-14 15:41:26,132:INFO:             uvicorn: 0.29.0
2025-03-14 15:41:26,132:INFO:              m2cgen: 0.10.0
2025-03-14 15:41:26,132:INFO:           evidently: 0.4.40
2025-03-14 15:41:26,132:INFO:               fugue: 0.8.7
2025-03-14 15:41:26,132:INFO:           streamlit: 1.33.0
2025-03-14 15:41:26,132:INFO:             prophet: Not installed
2025-03-14 15:41:26,132:INFO:None
2025-03-14 15:41:26,135:INFO:Set up data.
2025-03-14 15:41:26,284:INFO:Set up folding strategy.
2025-03-14 15:41:26,296:INFO:Set up train/test split.
2025-03-14 15:41:26,438:INFO:Set up index.
2025-03-14 15:41:26,442:INFO:Assigning column types.
2025-03-14 15:41:26,458:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-14 15:41:26,588:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-14 15:41:26,609:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 15:41:26,691:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 15:41:26,717:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 15:41:26,841:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-14 15:41:26,844:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 15:41:26,904:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 15:41:26,910:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 15:41:26,911:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-14 15:41:27,006:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 15:41:27,060:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 15:41:27,066:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 15:41:27,160:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-14 15:41:27,216:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 15:41:27,220:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 15:41:27,222:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-14 15:41:27,375:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 15:41:27,381:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 15:41:27,527:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 15:41:27,531:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 15:41:27,557:INFO:Preparing preprocessing pipeline...
2025-03-14 15:41:27,561:INFO:Set up label encoding.
2025-03-14 15:41:27,564:INFO:Set up simple imputation.
2025-03-14 15:41:27,576:INFO:Set up encoding of ordinal features.
2025-03-14 15:41:27,584:INFO:Set up encoding of categorical features.
2025-03-14 15:41:27,587:INFO:Set up column name cleaning.
2025-03-14 15:41:27,935:INFO:Finished creating preprocessing pipeline.
2025-03-14 15:41:27,989:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ARDIAN~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                                    transformer=TargetEncoder(cols=['Minat dan '
                                                                    'Bakat',
                                                                    'Rencana '
                                                                    'Karir'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-03-14 15:41:27,990:INFO:Creating final display dataframe.
2025-03-14 15:41:28,707:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                3625  
1                                       Program Studi  
2                                          Multiclass  
3   Sains Data Terapan: 0, Sistem Pembangkitan Ene...  
4                                           (1000, 6)  
5                                          (1000, 10)  
6                                           (700, 10)  
7                                           (300, 10)  
8                                                   1  
9                                                   4  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                 25  
15                                               None  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               905c  
2025-03-14 15:41:28,987:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 15:41:28,994:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 15:41:29,130:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-14 15:41:29,135:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-14 15:41:29,145:INFO:setup() successfully completed in 3.27s...............
2025-03-14 15:41:29,150:INFO:Initializing compare_models()
2025-03-14 15:41:29,150:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-03-14 15:41:29,150:INFO:Checking exceptions
2025-03-14 15:41:29,160:INFO:Preparing display monitor
2025-03-14 15:41:29,251:INFO:Initializing Logistic Regression
2025-03-14 15:41:29,251:INFO:Total runtime is 1.6657511393229165e-05 minutes
2025-03-14 15:41:29,261:INFO:SubProcess create_model() called ==================================
2025-03-14 15:41:29,269:INFO:Initializing create_model()
2025-03-14 15:41:29,269:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:41:29,270:INFO:Checking exceptions
2025-03-14 15:41:29,270:INFO:Importing libraries
2025-03-14 15:41:29,271:INFO:Copying training dataset
2025-03-14 15:41:29,286:INFO:Defining folds
2025-03-14 15:41:29,288:INFO:Declaring metric variables
2025-03-14 15:41:29,301:INFO:Importing untrained model
2025-03-14 15:41:29,313:INFO:Logistic Regression Imported successfully
2025-03-14 15:41:29,355:INFO:Starting cross validation
2025-03-14 15:41:29,391:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:41:52,670:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 15:41:52,687:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 15:41:52,715:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 15:41:52,724:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 15:41:52,749:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 15:41:52,764:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:41:52,771:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,777:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:41:52,783:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,785:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,790:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,796:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,799:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:41:52,803:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,808:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:41:52,816:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,818:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:41:52,825:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,827:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,835:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,836:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,839:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:41:52,847:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,860:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:41:52,868:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,873:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 15:41:52,874:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 15:41:52,881:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,893:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,893:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 15:41:52,972:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:41:52,982:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,992:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:41:52,993:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:52,997:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:41:53,000:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

c, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:41:53,004:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:53,014:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:53,015:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:53,018:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:41:53,021:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:53,022:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:53,025:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:41:53,031:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:54,094:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 15:41:54,102:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-14 15:41:54,144:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:41:54,146:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:54,150:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:41:54,151:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:54,152:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:54,153:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:41:54,156:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:54,157:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:54,158:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:41:54,162:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:54,202:INFO:Calculating mean and std
2025-03-14 15:41:54,209:INFO:Creating metrics dataframe
2025-03-14 15:41:54,218:INFO:Uploading results into container
2025-03-14 15:41:54,219:INFO:Uploading model into container now
2025-03-14 15:41:54,223:INFO:_master_model_container: 1
2025-03-14 15:41:54,224:INFO:_display_container: 2
2025-03-14 15:41:54,226:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3625, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-14 15:41:54,226:INFO:create_model() successfully completed......................................
2025-03-14 15:41:56,586:INFO:SubProcess create_model() end ==================================
2025-03-14 15:41:56,586:INFO:Creating metrics dataframe
2025-03-14 15:41:56,612:INFO:Initializing K Neighbors Classifier
2025-03-14 15:41:56,613:INFO:Total runtime is 0.45603864192962645 minutes
2025-03-14 15:41:56,620:INFO:SubProcess create_model() called ==================================
2025-03-14 15:41:56,621:INFO:Initializing create_model()
2025-03-14 15:41:56,621:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:41:56,622:INFO:Checking exceptions
2025-03-14 15:41:56,622:INFO:Importing libraries
2025-03-14 15:41:56,622:INFO:Copying training dataset
2025-03-14 15:41:56,631:INFO:Defining folds
2025-03-14 15:41:56,631:INFO:Declaring metric variables
2025-03-14 15:41:56,641:INFO:Importing untrained model
2025-03-14 15:41:56,656:INFO:K Neighbors Classifier Imported successfully
2025-03-14 15:41:56,678:INFO:Starting cross validation
2025-03-14 15:41:56,685:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:41:57,243:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,250:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,255:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,255:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,262:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,270:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,271:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,277:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,283:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,290:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,303:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,313:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,340:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,352:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,362:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,372:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,374:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,379:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,382:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,384:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,389:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,394:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,402:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,617:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,623:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,624:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,629:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,630:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,632:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:41:57,635:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:57,650:INFO:Calculating mean and std
2025-03-14 15:41:57,653:INFO:Creating metrics dataframe
2025-03-14 15:41:57,659:INFO:Uploading results into container
2025-03-14 15:41:57,660:INFO:Uploading model into container now
2025-03-14 15:41:57,661:INFO:_master_model_container: 2
2025-03-14 15:41:57,662:INFO:_display_container: 2
2025-03-14 15:41:57,662:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-14 15:41:57,664:INFO:create_model() successfully completed......................................
2025-03-14 15:41:58,056:INFO:SubProcess create_model() end ==================================
2025-03-14 15:41:58,057:INFO:Creating metrics dataframe
2025-03-14 15:41:58,072:INFO:Initializing Naive Bayes
2025-03-14 15:41:58,072:INFO:Total runtime is 0.48036365111668905 minutes
2025-03-14 15:41:58,077:INFO:SubProcess create_model() called ==================================
2025-03-14 15:41:58,078:INFO:Initializing create_model()
2025-03-14 15:41:58,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:41:58,078:INFO:Checking exceptions
2025-03-14 15:41:58,078:INFO:Importing libraries
2025-03-14 15:41:58,078:INFO:Copying training dataset
2025-03-14 15:41:58,089:INFO:Defining folds
2025-03-14 15:41:58,089:INFO:Declaring metric variables
2025-03-14 15:41:58,099:INFO:Importing untrained model
2025-03-14 15:41:58,107:INFO:Naive Bayes Imported successfully
2025-03-14 15:41:58,128:INFO:Starting cross validation
2025-03-14 15:41:58,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:41:58,545:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,551:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,553:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,556:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,561:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,561:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,562:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,564:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,565:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:41:58,568:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,571:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,572:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,575:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,585:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,593:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,597:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,601:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,605:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,607:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,614:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,615:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,624:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,651:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,656:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,661:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,848:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,849:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,855:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,856:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,859:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:41:58,861:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,863:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:58,875:INFO:Calculating mean and std
2025-03-14 15:41:58,879:INFO:Creating metrics dataframe
2025-03-14 15:41:58,884:INFO:Uploading results into container
2025-03-14 15:41:58,886:INFO:Uploading model into container now
2025-03-14 15:41:58,887:INFO:_master_model_container: 3
2025-03-14 15:41:58,887:INFO:_display_container: 2
2025-03-14 15:41:58,888:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-14 15:41:58,888:INFO:create_model() successfully completed......................................
2025-03-14 15:41:59,220:INFO:SubProcess create_model() end ==================================
2025-03-14 15:41:59,221:INFO:Creating metrics dataframe
2025-03-14 15:41:59,234:INFO:Initializing Decision Tree Classifier
2025-03-14 15:41:59,235:INFO:Total runtime is 0.4997400760650635 minutes
2025-03-14 15:41:59,241:INFO:SubProcess create_model() called ==================================
2025-03-14 15:41:59,242:INFO:Initializing create_model()
2025-03-14 15:41:59,242:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:41:59,242:INFO:Checking exceptions
2025-03-14 15:41:59,242:INFO:Importing libraries
2025-03-14 15:41:59,242:INFO:Copying training dataset
2025-03-14 15:41:59,249:INFO:Defining folds
2025-03-14 15:41:59,250:INFO:Declaring metric variables
2025-03-14 15:41:59,259:INFO:Importing untrained model
2025-03-14 15:41:59,267:INFO:Decision Tree Classifier Imported successfully
2025-03-14 15:41:59,291:INFO:Starting cross validation
2025-03-14 15:41:59,297:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:41:59,636:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,638:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,639:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,640:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,640:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,643:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,643:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,644:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,646:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,647:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,647:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,646:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,650:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,650:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,651:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,654:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,654:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,656:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,656:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,658:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,658:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,836:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,840:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,847:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,854:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,862:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,866:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:41:59,878:INFO:Calculating mean and std
2025-03-14 15:41:59,880:INFO:Creating metrics dataframe
2025-03-14 15:41:59,884:INFO:Uploading results into container
2025-03-14 15:41:59,885:INFO:Uploading model into container now
2025-03-14 15:41:59,886:INFO:_master_model_container: 4
2025-03-14 15:41:59,886:INFO:_display_container: 2
2025-03-14 15:41:59,887:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=3625, splitter='best')
2025-03-14 15:41:59,887:INFO:create_model() successfully completed......................................
2025-03-14 15:42:00,226:INFO:SubProcess create_model() end ==================================
2025-03-14 15:42:00,226:INFO:Creating metrics dataframe
2025-03-14 15:42:00,243:INFO:Initializing SVM - Linear Kernel
2025-03-14 15:42:00,243:INFO:Total runtime is 0.5165472547213237 minutes
2025-03-14 15:42:00,249:INFO:SubProcess create_model() called ==================================
2025-03-14 15:42:00,250:INFO:Initializing create_model()
2025-03-14 15:42:00,250:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:42:00,250:INFO:Checking exceptions
2025-03-14 15:42:00,250:INFO:Importing libraries
2025-03-14 15:42:00,252:INFO:Copying training dataset
2025-03-14 15:42:00,259:INFO:Defining folds
2025-03-14 15:42:00,259:INFO:Declaring metric variables
2025-03-14 15:42:00,269:INFO:Importing untrained model
2025-03-14 15:42:00,277:INFO:SVM - Linear Kernel Imported successfully
2025-03-14 15:42:00,293:INFO:Starting cross validation
2025-03-14 15:42:00,297:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:42:00,665:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:00,669:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,677:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,686:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:00,692:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,693:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:00,698:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,707:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,708:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:00,711:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:00,711:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,715:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,715:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:00,717:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,718:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,718:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,721:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:00,722:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:00,725:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,726:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,726:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,727:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,729:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:00,729:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:00,729:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:00,733:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,733:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,733:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,733:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,737:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:00,740:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,745:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,748:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:00,753:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,770:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:00,773:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,778:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,782:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:00,785:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,945:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:00,948:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,954:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,957:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:00,962:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,979:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:00,982:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,987:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:00,999:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:01,003:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,016:INFO:Calculating mean and std
2025-03-14 15:42:01,017:INFO:Creating metrics dataframe
2025-03-14 15:42:01,025:INFO:Uploading results into container
2025-03-14 15:42:01,026:INFO:Uploading model into container now
2025-03-14 15:42:01,029:INFO:_master_model_container: 5
2025-03-14 15:42:01,029:INFO:_display_container: 2
2025-03-14 15:42:01,029:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3625, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-14 15:42:01,030:INFO:create_model() successfully completed......................................
2025-03-14 15:42:01,479:INFO:SubProcess create_model() end ==================================
2025-03-14 15:42:01,479:INFO:Creating metrics dataframe
2025-03-14 15:42:01,498:INFO:Initializing Ridge Classifier
2025-03-14 15:42:01,498:INFO:Total runtime is 0.5374520421028137 minutes
2025-03-14 15:42:01,505:INFO:SubProcess create_model() called ==================================
2025-03-14 15:42:01,505:INFO:Initializing create_model()
2025-03-14 15:42:01,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:42:01,505:INFO:Checking exceptions
2025-03-14 15:42:01,505:INFO:Importing libraries
2025-03-14 15:42:01,505:INFO:Copying training dataset
2025-03-14 15:42:01,513:INFO:Defining folds
2025-03-14 15:42:01,514:INFO:Declaring metric variables
2025-03-14 15:42:01,521:INFO:Importing untrained model
2025-03-14 15:42:01,532:INFO:Ridge Classifier Imported successfully
2025-03-14 15:42:01,553:INFO:Starting cross validation
2025-03-14 15:42:01,557:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:42:01,861:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:01,864:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,866:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:01,866:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:01,870:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,870:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,873:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,876:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:01,876:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:01,877:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,879:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,880:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,881:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,881:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:01,882:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:01,883:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:01,883:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:01,885:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,886:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,887:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:01,888:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,889:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,889:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,891:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,894:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:01,896:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,898:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,899:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,900:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,900:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:01,904:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:01,904:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,906:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:01,908:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,911:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,921:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:01,927:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,935:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:01,938:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:01,942:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:02,094:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:02,096:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:02,098:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:02,101:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:02,102:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:02,104:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:02,107:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:02,107:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:02,109:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:02,112:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:02,132:INFO:Calculating mean and std
2025-03-14 15:42:02,134:INFO:Creating metrics dataframe
2025-03-14 15:42:02,139:INFO:Uploading results into container
2025-03-14 15:42:02,141:INFO:Uploading model into container now
2025-03-14 15:42:02,142:INFO:_master_model_container: 6
2025-03-14 15:42:02,142:INFO:_display_container: 2
2025-03-14 15:42:02,143:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3625, solver='auto',
                tol=0.0001)
2025-03-14 15:42:02,143:INFO:create_model() successfully completed......................................
2025-03-14 15:42:02,490:INFO:SubProcess create_model() end ==================================
2025-03-14 15:42:02,491:INFO:Creating metrics dataframe
2025-03-14 15:42:02,509:INFO:Initializing Random Forest Classifier
2025-03-14 15:42:02,509:INFO:Total runtime is 0.5543078064918519 minutes
2025-03-14 15:42:02,516:INFO:SubProcess create_model() called ==================================
2025-03-14 15:42:02,517:INFO:Initializing create_model()
2025-03-14 15:42:02,517:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:42:02,517:INFO:Checking exceptions
2025-03-14 15:42:02,517:INFO:Importing libraries
2025-03-14 15:42:02,517:INFO:Copying training dataset
2025-03-14 15:42:02,526:INFO:Defining folds
2025-03-14 15:42:02,527:INFO:Declaring metric variables
2025-03-14 15:42:02,537:INFO:Importing untrained model
2025-03-14 15:42:02,554:INFO:Random Forest Classifier Imported successfully
2025-03-14 15:42:02,574:INFO:Starting cross validation
2025-03-14 15:42:02,579:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:42:03,512:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,519:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,524:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,526:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,531:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,539:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,556:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,571:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,574:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,586:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,587:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,598:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,625:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,636:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,644:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,645:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,656:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,665:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,741:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,747:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,752:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,781:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,785:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:03,790:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,219:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,221:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,226:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,227:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,233:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,234:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,244:INFO:Calculating mean and std
2025-03-14 15:42:04,246:INFO:Creating metrics dataframe
2025-03-14 15:42:04,251:INFO:Uploading results into container
2025-03-14 15:42:04,252:INFO:Uploading model into container now
2025-03-14 15:42:04,252:INFO:_master_model_container: 7
2025-03-14 15:42:04,252:INFO:_display_container: 2
2025-03-14 15:42:04,255:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=3625, verbose=0,
                       warm_start=False)
2025-03-14 15:42:04,255:INFO:create_model() successfully completed......................................
2025-03-14 15:42:04,540:INFO:SubProcess create_model() end ==================================
2025-03-14 15:42:04,541:INFO:Creating metrics dataframe
2025-03-14 15:42:04,553:INFO:Initializing Quadratic Discriminant Analysis
2025-03-14 15:42:04,554:INFO:Total runtime is 0.5883943160374959 minutes
2025-03-14 15:42:04,559:INFO:SubProcess create_model() called ==================================
2025-03-14 15:42:04,559:INFO:Initializing create_model()
2025-03-14 15:42:04,560:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:42:04,560:INFO:Checking exceptions
2025-03-14 15:42:04,560:INFO:Importing libraries
2025-03-14 15:42:04,560:INFO:Copying training dataset
2025-03-14 15:42:04,566:INFO:Defining folds
2025-03-14 15:42:04,566:INFO:Declaring metric variables
2025-03-14 15:42:04,574:INFO:Importing untrained model
2025-03-14 15:42:04,584:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-14 15:42:04,605:INFO:Starting cross validation
2025-03-14 15:42:04,610:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:42:04,856:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 15:42:04,856:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 15:42:04,858:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 15:42:04,874:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 15:42:04,877:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 15:42:04,887:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 15:42:04,917:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 15:42:04,952:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:04,955:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:04,956:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,962:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,964:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:04,966:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,968:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,968:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:04,969:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:04,969:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,971:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,973:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,974:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,975:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:04,975:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:04,977:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:04,977:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,980:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,983:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,984:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,985:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,988:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:04,992:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,994:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,995:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:04,998:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:05,002:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:05,005:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:05,009:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:05,015:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:05,019:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:05,023:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:05,025:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:05,030:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:05,038:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:05,041:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:05,045:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:05,120:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 15:42:05,127:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-14 15:42:05,182:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:05,186:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:05,188:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:05,192:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:05,193:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:05,196:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:05,197:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:05,199:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:05,200:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:05,201:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:05,221:INFO:Calculating mean and std
2025-03-14 15:42:05,223:INFO:Creating metrics dataframe
2025-03-14 15:42:05,226:INFO:Uploading results into container
2025-03-14 15:42:05,227:INFO:Uploading model into container now
2025-03-14 15:42:05,228:INFO:_master_model_container: 8
2025-03-14 15:42:05,228:INFO:_display_container: 2
2025-03-14 15:42:05,228:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-14 15:42:05,228:INFO:create_model() successfully completed......................................
2025-03-14 15:42:05,587:INFO:SubProcess create_model() end ==================================
2025-03-14 15:42:05,588:INFO:Creating metrics dataframe
2025-03-14 15:42:05,613:INFO:Initializing Ada Boost Classifier
2025-03-14 15:42:05,615:INFO:Total runtime is 0.606071392695109 minutes
2025-03-14 15:42:05,619:INFO:SubProcess create_model() called ==================================
2025-03-14 15:42:05,620:INFO:Initializing create_model()
2025-03-14 15:42:05,620:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:42:05,621:INFO:Checking exceptions
2025-03-14 15:42:05,621:INFO:Importing libraries
2025-03-14 15:42:05,621:INFO:Copying training dataset
2025-03-14 15:42:05,630:INFO:Defining folds
2025-03-14 15:42:05,631:INFO:Declaring metric variables
2025-03-14 15:42:05,640:INFO:Importing untrained model
2025-03-14 15:42:05,646:INFO:Ada Boost Classifier Imported successfully
2025-03-14 15:42:05,661:INFO:Starting cross validation
2025-03-14 15:42:05,666:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:42:05,871:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 15:42:05,877:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 15:42:05,880:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 15:42:05,885:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 15:42:05,887:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 15:42:05,888:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 15:42:05,892:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 15:42:05,906:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 15:42:06,282:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:06,286:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:06,287:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:06,290:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,291:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,294:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,296:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:06,296:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:06,296:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,298:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,299:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,300:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:06,300:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,302:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:06,302:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:06,304:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,306:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:06,307:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,307:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,309:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,310:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:06,310:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,310:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:06,314:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,314:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,316:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:06,318:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,319:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:06,320:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,324:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

)} is", len(result))

2025-03-14 15:42:06,328:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,328:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,329:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,331:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:06,332:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:06,335:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,335:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,426:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 15:42:06,431:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-14 15:42:06,698:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:06,702:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,706:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:06,709:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,709:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,711:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:06,714:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,714:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,716:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:06,719:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:06,735:INFO:Calculating mean and std
2025-03-14 15:42:06,737:INFO:Creating metrics dataframe
2025-03-14 15:42:06,740:INFO:Uploading results into container
2025-03-14 15:42:06,741:INFO:Uploading model into container now
2025-03-14 15:42:06,742:INFO:_master_model_container: 9
2025-03-14 15:42:06,742:INFO:_display_container: 2
2025-03-14 15:42:06,743:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=3625)
2025-03-14 15:42:06,743:INFO:create_model() successfully completed......................................
2025-03-14 15:42:07,086:INFO:SubProcess create_model() end ==================================
2025-03-14 15:42:07,087:INFO:Creating metrics dataframe
2025-03-14 15:42:07,100:INFO:Initializing Gradient Boosting Classifier
2025-03-14 15:42:07,100:INFO:Total runtime is 0.6308279514312743 minutes
2025-03-14 15:42:07,106:INFO:SubProcess create_model() called ==================================
2025-03-14 15:42:07,106:INFO:Initializing create_model()
2025-03-14 15:42:07,106:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:42:07,107:INFO:Checking exceptions
2025-03-14 15:42:07,107:INFO:Importing libraries
2025-03-14 15:42:07,107:INFO:Copying training dataset
2025-03-14 15:42:07,112:INFO:Defining folds
2025-03-14 15:42:07,112:INFO:Declaring metric variables
2025-03-14 15:42:07,117:INFO:Importing untrained model
2025-03-14 15:42:07,124:INFO:Gradient Boosting Classifier Imported successfully
2025-03-14 15:42:07,137:INFO:Starting cross validation
2025-03-14 15:42:07,140:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:42:12,143:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:12,144:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:12,148:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,148:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,155:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:12,155:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,155:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,159:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,163:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,164:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,166:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,172:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,180:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:12,186:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,194:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,201:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,201:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:12,206:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,215:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,223:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,252:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:12,257:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,267:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:12,271:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,274:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,279:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,288:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,351:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:12,353:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,359:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:12,365:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:15,697:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:15,701:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:15,709:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:15,717:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:15,723:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:15,726:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:15,733:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:15,740:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:15,762:INFO:Calculating mean and std
2025-03-14 15:42:15,765:INFO:Creating metrics dataframe
2025-03-14 15:42:15,768:INFO:Uploading results into container
2025-03-14 15:42:15,769:INFO:Uploading model into container now
2025-03-14 15:42:15,770:INFO:_master_model_container: 10
2025-03-14 15:42:15,770:INFO:_display_container: 2
2025-03-14 15:42:15,771:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 15:42:15,771:INFO:create_model() successfully completed......................................
2025-03-14 15:42:16,076:INFO:SubProcess create_model() end ==================================
2025-03-14 15:42:16,077:INFO:Creating metrics dataframe
2025-03-14 15:42:16,091:INFO:Initializing Linear Discriminant Analysis
2025-03-14 15:42:16,091:INFO:Total runtime is 0.7806840618451436 minutes
2025-03-14 15:42:16,097:INFO:SubProcess create_model() called ==================================
2025-03-14 15:42:16,097:INFO:Initializing create_model()
2025-03-14 15:42:16,097:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:42:16,097:INFO:Checking exceptions
2025-03-14 15:42:16,098:INFO:Importing libraries
2025-03-14 15:42:16,098:INFO:Copying training dataset
2025-03-14 15:42:16,105:INFO:Defining folds
2025-03-14 15:42:16,105:INFO:Declaring metric variables
2025-03-14 15:42:16,111:INFO:Importing untrained model
2025-03-14 15:42:16,121:INFO:Linear Discriminant Analysis Imported successfully
2025-03-14 15:42:16,139:INFO:Starting cross validation
2025-03-14 15:42:16,142:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:42:16,443:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:16,444:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:16,444:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:16,446:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,448:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,448:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,451:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:16,451:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:16,455:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,455:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,455:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,457:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,458:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:16,460:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,462:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,462:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,462:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,466:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,467:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:16,469:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,470:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:16,470:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:16,471:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,472:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:16,474:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,475:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,476:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,483:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,485:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,487:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:16,491:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,493:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,499:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:16,503:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,507:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,509:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:42:16,512:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,626:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:16,629:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,632:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:42:16,633:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,634:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,637:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,639:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,643:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:16,660:INFO:Calculating mean and std
2025-03-14 15:42:16,661:INFO:Creating metrics dataframe
2025-03-14 15:42:16,664:INFO:Uploading results into container
2025-03-14 15:42:16,665:INFO:Uploading model into container now
2025-03-14 15:42:16,666:INFO:_master_model_container: 11
2025-03-14 15:42:16,666:INFO:_display_container: 2
2025-03-14 15:42:16,666:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-14 15:42:16,666:INFO:create_model() successfully completed......................................
2025-03-14 15:42:16,962:INFO:SubProcess create_model() end ==================================
2025-03-14 15:42:16,962:INFO:Creating metrics dataframe
2025-03-14 15:42:16,980:INFO:Initializing Extra Trees Classifier
2025-03-14 15:42:16,980:INFO:Total runtime is 0.7954895257949829 minutes
2025-03-14 15:42:16,985:INFO:SubProcess create_model() called ==================================
2025-03-14 15:42:16,986:INFO:Initializing create_model()
2025-03-14 15:42:16,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:42:16,986:INFO:Checking exceptions
2025-03-14 15:42:16,986:INFO:Importing libraries
2025-03-14 15:42:16,986:INFO:Copying training dataset
2025-03-14 15:42:16,993:INFO:Defining folds
2025-03-14 15:42:16,993:INFO:Declaring metric variables
2025-03-14 15:42:16,997:INFO:Importing untrained model
2025-03-14 15:42:17,003:INFO:Extra Trees Classifier Imported successfully
2025-03-14 15:42:17,014:INFO:Starting cross validation
2025-03-14 15:42:17,017:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:42:17,837:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:17,848:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:17,857:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:17,870:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:17,878:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:17,892:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:17,938:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:17,946:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:17,953:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:17,959:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:17,969:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:17,986:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,045:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,059:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,083:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,095:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,103:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,110:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,112:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,115:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,119:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,121:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,126:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,128:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,516:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,520:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,525:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,530:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,534:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,539:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:18,548:INFO:Calculating mean and std
2025-03-14 15:42:18,549:INFO:Creating metrics dataframe
2025-03-14 15:42:18,552:INFO:Uploading results into container
2025-03-14 15:42:18,555:INFO:Uploading model into container now
2025-03-14 15:42:18,556:INFO:_master_model_container: 12
2025-03-14 15:42:18,557:INFO:_display_container: 2
2025-03-14 15:42:18,558:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=3625, verbose=0,
                     warm_start=False)
2025-03-14 15:42:18,558:INFO:create_model() successfully completed......................................
2025-03-14 15:42:18,851:INFO:SubProcess create_model() end ==================================
2025-03-14 15:42:18,852:INFO:Creating metrics dataframe
2025-03-14 15:42:18,882:INFO:Initializing Extreme Gradient Boosting
2025-03-14 15:42:18,882:INFO:Total runtime is 0.8272005716959635 minutes
2025-03-14 15:42:18,891:INFO:SubProcess create_model() called ==================================
2025-03-14 15:42:18,892:INFO:Initializing create_model()
2025-03-14 15:42:18,892:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:42:18,892:INFO:Checking exceptions
2025-03-14 15:42:18,893:INFO:Importing libraries
2025-03-14 15:42:18,893:INFO:Copying training dataset
2025-03-14 15:42:18,902:INFO:Defining folds
2025-03-14 15:42:18,903:INFO:Declaring metric variables
2025-03-14 15:42:18,913:INFO:Importing untrained model
2025-03-14 15:42:18,920:INFO:Extreme Gradient Boosting Imported successfully
2025-03-14 15:42:18,940:INFO:Starting cross validation
2025-03-14 15:42:18,945:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:42:20,949:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:20,968:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:20,970:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:20,977:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:20,977:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:20,989:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:20,991:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:20,996:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,005:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,012:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,017:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,020:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,025:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,029:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,033:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,033:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,041:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,048:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,088:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,095:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,097:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,102:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,104:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,112:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,497:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,499:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,503:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,503:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,507:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,508:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:21,526:INFO:Calculating mean and std
2025-03-14 15:42:21,528:INFO:Creating metrics dataframe
2025-03-14 15:42:21,531:INFO:Uploading results into container
2025-03-14 15:42:21,532:INFO:Uploading model into container now
2025-03-14 15:42:21,532:INFO:_master_model_container: 13
2025-03-14 15:42:21,532:INFO:_display_container: 2
2025-03-14 15:42:21,533:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-03-14 15:42:21,534:INFO:create_model() successfully completed......................................
2025-03-14 15:42:21,827:INFO:SubProcess create_model() end ==================================
2025-03-14 15:42:21,827:INFO:Creating metrics dataframe
2025-03-14 15:42:21,843:INFO:Initializing Light Gradient Boosting Machine
2025-03-14 15:42:21,843:INFO:Total runtime is 0.8765368580818176 minutes
2025-03-14 15:42:21,849:INFO:SubProcess create_model() called ==================================
2025-03-14 15:42:21,850:INFO:Initializing create_model()
2025-03-14 15:42:21,850:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:42:21,850:INFO:Checking exceptions
2025-03-14 15:42:21,850:INFO:Importing libraries
2025-03-14 15:42:21,850:INFO:Copying training dataset
2025-03-14 15:42:21,860:INFO:Defining folds
2025-03-14 15:42:21,861:INFO:Declaring metric variables
2025-03-14 15:42:21,868:INFO:Importing untrained model
2025-03-14 15:42:21,874:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-14 15:42:21,890:INFO:Starting cross validation
2025-03-14 15:42:21,894:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:42:27,062:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:27,068:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:27,076:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:28,047:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:28,054:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:28,061:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:28,094:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:28,102:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:28,137:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:28,359:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:28,366:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:28,374:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:28,692:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:28,698:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:28,704:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:28,806:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:28,814:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:28,821:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:29,011:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:29,018:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:29,033:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:29,181:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:29,188:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:29,196:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:30,300:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:30,309:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:30,316:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:30,501:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:30,507:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:30,512:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:42:30,528:INFO:Calculating mean and std
2025-03-14 15:42:30,530:INFO:Creating metrics dataframe
2025-03-14 15:42:30,536:INFO:Uploading results into container
2025-03-14 15:42:30,537:INFO:Uploading model into container now
2025-03-14 15:42:30,538:INFO:_master_model_container: 14
2025-03-14 15:42:30,539:INFO:_display_container: 2
2025-03-14 15:42:30,540:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3625, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-14 15:42:30,540:INFO:create_model() successfully completed......................................
2025-03-14 15:42:30,834:INFO:SubProcess create_model() end ==================================
2025-03-14 15:42:30,834:INFO:Creating metrics dataframe
2025-03-14 15:42:30,852:INFO:Initializing CatBoost Classifier
2025-03-14 15:42:30,852:INFO:Total runtime is 1.026685611406962 minutes
2025-03-14 15:42:30,858:INFO:SubProcess create_model() called ==================================
2025-03-14 15:42:30,859:INFO:Initializing create_model()
2025-03-14 15:42:30,859:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:42:30,859:INFO:Checking exceptions
2025-03-14 15:42:30,861:INFO:Importing libraries
2025-03-14 15:42:30,861:INFO:Copying training dataset
2025-03-14 15:42:30,869:INFO:Defining folds
2025-03-14 15:42:30,869:INFO:Declaring metric variables
2025-03-14 15:42:30,875:INFO:Importing untrained model
2025-03-14 15:42:30,884:INFO:CatBoost Classifier Imported successfully
2025-03-14 15:42:30,901:INFO:Starting cross validation
2025-03-14 15:42:30,904:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:43:05,836:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:05,852:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:05,869:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:06,010:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:06,017:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:06,029:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:06,038:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:06,041:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:06,045:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:06,195:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:06,212:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:06,219:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:06,720:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:06,727:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:06,739:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:07,570:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:07,578:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:07,587:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:07,646:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:07,656:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:07,664:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:07,976:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:07,984:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:07,992:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:21,981:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:21,987:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:21,991:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,045:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,049:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,055:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,072:INFO:Calculating mean and std
2025-03-14 15:43:22,075:INFO:Creating metrics dataframe
2025-03-14 15:43:22,078:INFO:Uploading results into container
2025-03-14 15:43:22,079:INFO:Uploading model into container now
2025-03-14 15:43:22,079:INFO:_master_model_container: 15
2025-03-14 15:43:22,079:INFO:_display_container: 2
2025-03-14 15:43:22,081:INFO:<catboost.core.CatBoostClassifier object at 0x000002245325D150>
2025-03-14 15:43:22,081:INFO:create_model() successfully completed......................................
2025-03-14 15:43:22,384:INFO:SubProcess create_model() end ==================================
2025-03-14 15:43:22,385:INFO:Creating metrics dataframe
2025-03-14 15:43:22,410:INFO:Initializing Dummy Classifier
2025-03-14 15:43:22,411:INFO:Total runtime is 1.885992403825124 minutes
2025-03-14 15:43:22,417:INFO:SubProcess create_model() called ==================================
2025-03-14 15:43:22,418:INFO:Initializing create_model()
2025-03-14 15:43:22,418:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022459409750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:43:22,418:INFO:Checking exceptions
2025-03-14 15:43:22,419:INFO:Importing libraries
2025-03-14 15:43:22,419:INFO:Copying training dataset
2025-03-14 15:43:22,427:INFO:Defining folds
2025-03-14 15:43:22,427:INFO:Declaring metric variables
2025-03-14 15:43:22,436:INFO:Importing untrained model
2025-03-14 15:43:22,444:INFO:Dummy Classifier Imported successfully
2025-03-14 15:43:22,458:INFO:Starting cross validation
2025-03-14 15:43:22,463:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:43:22,781:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,783:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,786:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,789:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,790:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,790:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,792:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:43:22,793:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,793:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:43:22,793:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:43:22,796:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,797:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:43:22,797:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,798:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,798:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,800:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,806:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,808:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,809:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,812:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:43:22,813:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,816:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,816:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,820:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:43:22,820:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:43:22,820:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,823:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,824:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:43:22,824:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,828:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,982:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,984:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,988:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,990:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,992:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:43:22,994:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-14 15:43:22,996:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:22,997:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:23,013:INFO:Calculating mean and std
2025-03-14 15:43:23,014:INFO:Creating metrics dataframe
2025-03-14 15:43:23,018:INFO:Uploading results into container
2025-03-14 15:43:23,018:INFO:Uploading model into container now
2025-03-14 15:43:23,020:INFO:_master_model_container: 16
2025-03-14 15:43:23,020:INFO:_display_container: 2
2025-03-14 15:43:23,020:INFO:DummyClassifier(constant=None, random_state=3625, strategy='prior')
2025-03-14 15:43:23,021:INFO:create_model() successfully completed......................................
2025-03-14 15:43:23,468:INFO:SubProcess create_model() end ==================================
2025-03-14 15:43:23,469:INFO:Creating metrics dataframe
2025-03-14 15:43:23,488:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-03-14 15:43:23,506:INFO:Initializing create_model()
2025-03-14 15:43:23,507:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:43:23,507:INFO:Checking exceptions
2025-03-14 15:43:23,510:INFO:Importing libraries
2025-03-14 15:43:23,511:INFO:Copying training dataset
2025-03-14 15:43:23,517:INFO:Defining folds
2025-03-14 15:43:23,517:INFO:Declaring metric variables
2025-03-14 15:43:23,517:INFO:Importing untrained model
2025-03-14 15:43:23,517:INFO:Declaring custom model
2025-03-14 15:43:23,518:INFO:Gradient Boosting Classifier Imported successfully
2025-03-14 15:43:23,521:INFO:Cross validation set to False
2025-03-14 15:43:23,521:INFO:Fitting Model
2025-03-14 15:43:26,912:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 15:43:26,912:INFO:create_model() successfully completed......................................
2025-03-14 15:43:27,306:INFO:_master_model_container: 16
2025-03-14 15:43:27,307:INFO:_display_container: 2
2025-03-14 15:43:27,308:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 15:43:27,309:INFO:compare_models() successfully completed......................................
2025-03-14 15:43:27,310:INFO:Initializing create_model()
2025-03-14 15:43:27,310:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=gbc, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:43:27,310:INFO:Checking exceptions
2025-03-14 15:43:27,342:INFO:Importing libraries
2025-03-14 15:43:27,343:INFO:Copying training dataset
2025-03-14 15:43:27,358:INFO:Defining folds
2025-03-14 15:43:27,358:INFO:Declaring metric variables
2025-03-14 15:43:27,367:INFO:Importing untrained model
2025-03-14 15:43:27,378:INFO:Gradient Boosting Classifier Imported successfully
2025-03-14 15:43:27,397:INFO:Starting cross validation
2025-03-14 15:43:27,402:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:43:32,851:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:43:32,859:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:32,866:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:32,874:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:32,963:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:43:32,970:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:32,984:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:32,993:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

c, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:43:33,004:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,019:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,028:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:43:33,033:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,044:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,052:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,069:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,241:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:43:33,247:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,256:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,265:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,270:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:43:33,276:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,280:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:43:33,283:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,285:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,290:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,290:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,295:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,314:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:43:33,316:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,320:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:33,327:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:37,114:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:43:37,116:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:37,123:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:37,128:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:37,145:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:43:37,148:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:37,153:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:37,158:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:43:37,171:INFO:Calculating mean and std
2025-03-14 15:43:37,173:INFO:Creating metrics dataframe
2025-03-14 15:43:37,185:INFO:Finalizing model
2025-03-14 15:43:40,965:INFO:Uploading results into container
2025-03-14 15:43:40,968:INFO:Uploading model into container now
2025-03-14 15:43:41,021:INFO:_master_model_container: 17
2025-03-14 15:43:41,021:INFO:_display_container: 3
2025-03-14 15:43:41,023:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 15:43:41,024:INFO:create_model() successfully completed......................................
2025-03-14 15:43:41,469:INFO:Initializing tune_model()
2025-03-14 15:43:41,469:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-03-14 15:43:41,469:INFO:Checking exceptions
2025-03-14 15:43:41,499:INFO:Copying training dataset
2025-03-14 15:43:41,507:INFO:Checking base model
2025-03-14 15:43:41,508:INFO:Base model : Gradient Boosting Classifier
2025-03-14 15:43:41,520:INFO:Declaring metric variables
2025-03-14 15:43:41,528:INFO:Defining Hyperparameters
2025-03-14 15:43:41,866:INFO:Tuning with n_jobs=-1
2025-03-14 15:43:41,893:INFO:Initializing RandomizedSearchCV
2025-03-14 15:44:57,013:INFO:best_params: {'actual_estimator__subsample': 0.45, 'actual_estimator__n_estimators': 150, 'actual_estimator__min_samples_split': 9, 'actual_estimator__min_samples_leaf': 3, 'actual_estimator__min_impurity_decrease': 0.4, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 9, 'actual_estimator__learning_rate': 0.2}
2025-03-14 15:44:57,014:INFO:Hyperparameter search completed
2025-03-14 15:44:57,014:INFO:SubProcess create_model() called ==================================
2025-03-14 15:44:57,016:INFO:Initializing create_model()
2025-03-14 15:44:57,016:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000224530EE990>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'subsample': 0.45, 'n_estimators': 150, 'min_samples_split': 9, 'min_samples_leaf': 3, 'min_impurity_decrease': 0.4, 'max_features': 1.0, 'max_depth': 9, 'learning_rate': 0.2})
2025-03-14 15:44:57,016:INFO:Checking exceptions
2025-03-14 15:44:57,017:INFO:Importing libraries
2025-03-14 15:44:57,017:INFO:Copying training dataset
2025-03-14 15:44:57,031:INFO:Defining folds
2025-03-14 15:44:57,031:INFO:Declaring metric variables
2025-03-14 15:44:57,038:INFO:Importing untrained model
2025-03-14 15:44:57,039:INFO:Declaring custom model
2025-03-14 15:44:57,053:INFO:Gradient Boosting Classifier Imported successfully
2025-03-14 15:44:57,090:INFO:Starting cross validation
2025-03-14 15:44:57,095:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:45:00,875:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:00,877:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:00,881:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:00,881:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:00,888:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:00,889:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:00,895:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:00,897:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:00,899:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:00,908:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:00,914:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:00,922:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:00,937:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:00,941:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:00,948:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:00,956:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:01,047:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:01,052:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:01,060:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:01,066:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:01,084:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:01,086:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:01,088:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:01,090:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:01,095:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:01,097:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:01,103:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:01,104:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:01,176:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:01,179:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:01,186:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:01,193:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:03,040:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:03,042:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:03,048:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:03,053:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:03,097:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:03,099:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:03,104:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:03,107:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:03,117:INFO:Calculating mean and std
2025-03-14 15:45:03,119:INFO:Creating metrics dataframe
2025-03-14 15:45:03,126:INFO:Finalizing model
2025-03-14 15:45:05,244:INFO:Uploading results into container
2025-03-14 15:45:05,246:INFO:Uploading model into container now
2025-03-14 15:45:05,247:INFO:_master_model_container: 18
2025-03-14 15:45:05,247:INFO:_display_container: 4
2025-03-14 15:45:05,249:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.2, loss='log_loss', max_depth=9,
                           max_features=1.0, max_leaf_nodes=None,
                           min_impurity_decrease=0.4, min_samples_leaf=3,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=150, n_iter_no_change=None,
                           random_state=3625, subsample=0.45, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 15:45:05,249:INFO:create_model() successfully completed......................................
2025-03-14 15:45:05,577:INFO:SubProcess create_model() end ==================================
2025-03-14 15:45:05,577:INFO:choose_better activated
2025-03-14 15:45:05,582:INFO:SubProcess create_model() called ==================================
2025-03-14 15:45:05,583:INFO:Initializing create_model()
2025-03-14 15:45:05,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:45:05,583:INFO:Checking exceptions
2025-03-14 15:45:05,586:INFO:Importing libraries
2025-03-14 15:45:05,586:INFO:Copying training dataset
2025-03-14 15:45:05,591:INFO:Defining folds
2025-03-14 15:45:05,591:INFO:Declaring metric variables
2025-03-14 15:45:05,591:INFO:Importing untrained model
2025-03-14 15:45:05,591:INFO:Declaring custom model
2025-03-14 15:45:05,592:INFO:Gradient Boosting Classifier Imported successfully
2025-03-14 15:45:05,593:INFO:Starting cross validation
2025-03-14 15:45:05,595:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-14 15:45:10,323:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:10,327:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,337:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,345:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,382:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:10,392:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,399:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,407:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,445:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:10,449:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,451:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:10,455:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,456:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,462:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,463:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,469:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,483:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:10,487:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:10,487:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,491:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,495:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,498:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,505:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,507:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,516:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:10,520:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,529:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,536:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,567:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:10,570:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,579:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:10,585:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:13,602:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:13,605:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:13,611:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:13,617:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:13,619:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-14 15:45:13,622:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:13,629:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:13,634:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-14 15:45:13,644:INFO:Calculating mean and std
2025-03-14 15:45:13,645:INFO:Creating metrics dataframe
2025-03-14 15:45:13,648:INFO:Finalizing model
2025-03-14 15:45:16,776:INFO:Uploading results into container
2025-03-14 15:45:16,777:INFO:Uploading model into container now
2025-03-14 15:45:16,777:INFO:_master_model_container: 19
2025-03-14 15:45:16,778:INFO:_display_container: 5
2025-03-14 15:45:16,779:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 15:45:16,779:INFO:create_model() successfully completed......................................
2025-03-14 15:45:17,074:INFO:SubProcess create_model() end ==================================
2025-03-14 15:45:17,075:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.9657
2025-03-14 15:45:17,078:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.2, loss='log_loss', max_depth=9,
                           max_features=1.0, max_leaf_nodes=None,
                           min_impurity_decrease=0.4, min_samples_leaf=3,
                           min_samples_split=9, min_weight_fraction_leaf=0.0,
                           n_estimators=150, n_iter_no_change=None,
                           random_state=3625, subsample=0.45, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) result for Accuracy is 0.9486
2025-03-14 15:45:17,079:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) is best model
2025-03-14 15:45:17,079:INFO:choose_better completed
2025-03-14 15:45:17,079:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-03-14 15:45:17,124:INFO:_master_model_container: 19
2025-03-14 15:45:17,125:INFO:_display_container: 4
2025-03-14 15:45:17,126:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 15:45:17,126:INFO:tune_model() successfully completed......................................
2025-03-14 15:45:17,436:INFO:Initializing evaluate_model()
2025-03-14 15:45:17,436:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-14 15:45:17,487:INFO:Initializing plot_model()
2025-03-14 15:45:17,487:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-14 15:45:17,487:INFO:Checking exceptions
2025-03-14 15:45:17,499:INFO:Preloading libraries
2025-03-14 15:45:17,633:INFO:Copying training dataset
2025-03-14 15:45:17,633:INFO:Plot type: pipeline
2025-03-14 15:45:18,384:INFO:Visual Rendered Successfully
2025-03-14 15:45:18,675:INFO:plot_model() successfully completed......................................
2025-03-14 15:45:18,681:INFO:Initializing finalize_model()
2025-03-14 15:45:18,682:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-14 15:45:18,682:INFO:Finalizing GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-14 15:45:18,688:INFO:Initializing create_model()
2025-03-14 15:45:18,688:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-14 15:45:18,688:INFO:Checking exceptions
2025-03-14 15:45:18,691:INFO:Importing libraries
2025-03-14 15:45:18,691:INFO:Copying training dataset
2025-03-14 15:45:18,691:INFO:Defining folds
2025-03-14 15:45:18,691:INFO:Declaring metric variables
2025-03-14 15:45:18,692:INFO:Importing untrained model
2025-03-14 15:45:18,692:INFO:Declaring custom model
2025-03-14 15:45:18,694:INFO:Gradient Boosting Classifier Imported successfully
2025-03-14 15:45:18,697:INFO:Cross validation set to False
2025-03-14 15:45:18,697:INFO:Fitting Model
2025-03-14 15:45:22,714:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=3625, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-03-14 15:45:22,714:INFO:create_model() successfully completed......................................
2025-03-14 15:45:22,996:INFO:_master_model_container: 19
2025-03-14 15:45:22,996:INFO:_display_container: 4
2025-03-14 15:45:23,025:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=3625, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-03-14 15:45:23,025:INFO:finalize_model() successfully completed......................................
2025-03-14 15:45:23,373:INFO:Initializing predict_model()
2025-03-14 15:45:23,373:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=3625, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000224422C4D60>)
2025-03-14 15:45:23,373:INFO:Checking exceptions
2025-03-14 15:45:23,373:INFO:Preloading libraries
2025-03-14 15:45:23,376:INFO:Set up data.
2025-03-14 15:45:23,384:INFO:Set up index.
2025-03-14 15:45:23,820:INFO:Initializing save_model()
2025-03-14 15:45:23,820:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=3625, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), model_name=final_rf_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\ARDIAN~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                                    transformer=TargetEncoder(cols=['Minat dan '
                                                                    'Bakat',
                                                                    'Rencana '
                                                                    'Karir'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-14 15:45:23,820:INFO:Adding model into prep_pipe
2025-03-14 15:45:23,820:WARNING:Only Model saved as it was a pipeline.
2025-03-14 15:45:23,902:INFO:final_rf_model.pkl saved in current working directory
2025-03-14 15:45:23,936:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=3625, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2025-03-14 15:45:23,936:INFO:save_model() successfully completed......................................
2025-03-14 16:04:03,555:INFO:Initializing plot_model()
2025-03-14 16:04:03,555:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=parameter, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-14 16:04:03,555:INFO:Checking exceptions
2025-03-14 16:04:03,572:INFO:Preloading libraries
2025-03-14 16:04:03,759:INFO:Copying training dataset
2025-03-14 16:04:03,760:INFO:Plot type: parameter
2025-03-14 16:04:03,766:INFO:Visual Rendered Successfully
2025-03-14 16:04:04,104:INFO:plot_model() successfully completed......................................
2025-03-14 16:04:07,721:INFO:Initializing plot_model()
2025-03-14 16:04:07,722:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=auc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-14 16:04:07,722:INFO:Checking exceptions
2025-03-14 16:04:07,738:INFO:Preloading libraries
2025-03-14 16:04:07,846:INFO:Copying training dataset
2025-03-14 16:04:07,846:INFO:Plot type: auc
2025-03-14 16:04:08,000:INFO:Fitting Model
2025-03-14 16:04:08,000:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2025-03-14 16:04:08,000:INFO:Scoring test/hold-out set
2025-03-14 16:04:08,591:INFO:Visual Rendered Successfully
2025-03-14 16:04:08,898:INFO:plot_model() successfully completed......................................
2025-03-14 16:04:11,758:INFO:Initializing plot_model()
2025-03-14 16:04:11,758:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-14 16:04:11,759:INFO:Checking exceptions
2025-03-14 16:04:11,776:INFO:Preloading libraries
2025-03-14 16:04:11,909:INFO:Copying training dataset
2025-03-14 16:04:11,909:INFO:Plot type: confusion_matrix
2025-03-14 16:04:12,032:INFO:Fitting Model
2025-03-14 16:04:12,032:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2025-03-14 16:04:12,033:INFO:Scoring test/hold-out set
2025-03-14 16:04:12,859:INFO:Visual Rendered Successfully
2025-03-14 16:04:13,186:INFO:plot_model() successfully completed......................................
2025-03-14 16:04:17,800:INFO:Initializing plot_model()
2025-03-14 16:04:17,800:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=threshold, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-14 16:04:17,801:INFO:Checking exceptions
2025-03-14 16:04:20,096:INFO:Initializing plot_model()
2025-03-14 16:04:20,097:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=pr, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-14 16:04:20,097:INFO:Checking exceptions
2025-03-14 16:04:20,137:INFO:Preloading libraries
2025-03-14 16:04:20,250:INFO:Copying training dataset
2025-03-14 16:04:20,250:INFO:Plot type: pr
2025-03-14 16:04:20,382:INFO:Fitting Model
2025-03-14 16:04:22,817:INFO:Scoring test/hold-out set
2025-03-14 16:04:23,213:INFO:Visual Rendered Successfully
2025-03-14 16:04:23,577:INFO:plot_model() successfully completed......................................
2025-03-14 16:04:23,600:INFO:Initializing plot_model()
2025-03-14 16:04:23,601:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=error, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-14 16:04:23,601:INFO:Checking exceptions
2025-03-14 16:04:23,615:INFO:Preloading libraries
2025-03-14 16:04:23,729:INFO:Copying training dataset
2025-03-14 16:04:23,729:INFO:Plot type: error
2025-03-14 16:04:23,877:INFO:Fitting Model
2025-03-14 16:04:23,877:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2025-03-14 16:04:23,878:INFO:Scoring test/hold-out set
2025-03-14 16:04:24,804:INFO:Visual Rendered Successfully
2025-03-14 16:04:25,119:INFO:plot_model() successfully completed......................................
2025-03-14 16:04:25,246:INFO:Initializing plot_model()
2025-03-14 16:04:25,246:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002244FD17310>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3625, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), plot=class_report, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-14 16:04:25,247:INFO:Checking exceptions
2025-03-14 16:04:25,257:INFO:Preloading libraries
2025-03-14 16:04:25,367:INFO:Copying training dataset
2025-03-14 16:04:25,367:INFO:Plot type: class_report
2025-03-14 16:04:25,491:INFO:Fitting Model
2025-03-14 16:04:25,491:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GradientBoostingClassifier was fitted with feature names
  warnings.warn(

2025-03-14 16:04:25,491:INFO:Scoring test/hold-out set
2025-03-14 16:04:26,074:INFO:Visual Rendered Successfully
2025-03-14 16:04:26,463:INFO:plot_model() successfully completed......................................
2025-03-15 14:33:25,897:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 14:33:25,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 14:33:25,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 14:33:25,899:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-15 14:33:39,410:INFO:PyCaret ClassificationExperiment
2025-03-15 14:33:39,410:INFO:Logging name: clf-default-name
2025-03-15 14:33:39,411:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-15 14:33:39,411:INFO:version 3.3.2
2025-03-15 14:33:39,411:INFO:Initializing setup()
2025-03-15 14:33:39,411:INFO:self.USI: de85
2025-03-15 14:33:39,411:INFO:self._variable_keys: {'_ml_usecase', 'X', 'fix_imbalance', 'seed', 'exp_id', 'y_train', 'data', 'exp_name_log', 'gpu_n_jobs_param', 'y_test', 'idx', 'target_param', 'X_test', 'memory', 'X_train', 'fold_generator', 'logging_param', 'log_plots_param', 'USI', '_available_plots', 'y', 'fold_groups_param', 'html_param', 'pipeline', 'fold_shuffle_param', 'gpu_param', 'is_multiclass', 'n_jobs_param'}
2025-03-15 14:33:39,411:INFO:Checking environment
2025-03-15 14:33:39,411:INFO:python_version: 3.11.7
2025-03-15 14:33:39,411:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2025-03-15 14:33:39,411:INFO:machine: AMD64
2025-03-15 14:33:39,411:INFO:platform: Windows-10-10.0.22631-SP0
2025-03-15 14:33:39,421:INFO:Memory: svmem(total=7897944064, available=448544768, percent=94.3, used=7449399296, free=448544768)
2025-03-15 14:33:39,421:INFO:Physical Core: 4
2025-03-15 14:33:39,421:INFO:Logical Core: 8
2025-03-15 14:33:39,421:INFO:Checking libraries
2025-03-15 14:33:39,421:INFO:System:
2025-03-15 14:33:39,421:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2025-03-15 14:33:39,421:INFO:executable: c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\python.exe
2025-03-15 14:33:39,421:INFO:   machine: Windows-10-10.0.22631-SP0
2025-03-15 14:33:39,421:INFO:PyCaret required dependencies:
2025-03-15 14:33:45,639:INFO:                 pip: 24.0
2025-03-15 14:33:45,639:INFO:          setuptools: 75.8.0
2025-03-15 14:33:45,639:INFO:             pycaret: 3.3.2
2025-03-15 14:33:45,639:INFO:             IPython: 8.23.0
2025-03-15 14:33:45,639:INFO:          ipywidgets: 8.1.2
2025-03-15 14:33:45,639:INFO:                tqdm: 4.67.1
2025-03-15 14:33:45,639:INFO:               numpy: 1.26.4
2025-03-15 14:33:45,641:INFO:              pandas: 2.1.4
2025-03-15 14:33:45,642:INFO:              jinja2: 3.1.3
2025-03-15 14:33:45,642:INFO:               scipy: 1.11.4
2025-03-15 14:33:45,642:INFO:              joblib: 1.3.2
2025-03-15 14:33:45,642:INFO:             sklearn: 1.4.2
2025-03-15 14:33:45,642:INFO:                pyod: 1.1.3
2025-03-15 14:33:45,642:INFO:            imblearn: 0.12.2
2025-03-15 14:33:45,642:INFO:   category_encoders: 2.6.3
2025-03-15 14:33:45,642:INFO:            lightgbm: 4.3.0
2025-03-15 14:33:45,642:INFO:               numba: 0.59.1
2025-03-15 14:33:45,642:INFO:            requests: 2.32.3
2025-03-15 14:33:45,642:INFO:          matplotlib: 3.7.5
2025-03-15 14:33:45,643:INFO:          scikitplot: 0.3.7
2025-03-15 14:33:45,643:INFO:         yellowbrick: 1.5
2025-03-15 14:33:45,643:INFO:              plotly: 5.20.0
2025-03-15 14:33:45,643:INFO:    plotly-resampler: Not installed
2025-03-15 14:33:45,643:INFO:             kaleido: 0.2.1
2025-03-15 14:33:45,643:INFO:           schemdraw: 0.15
2025-03-15 14:33:45,643:INFO:         statsmodels: 0.14.1
2025-03-15 14:33:45,643:INFO:              sktime: 0.26.0
2025-03-15 14:33:45,643:INFO:               tbats: 1.1.3
2025-03-15 14:33:45,643:INFO:            pmdarima: 2.0.4
2025-03-15 14:33:45,643:INFO:              psutil: 5.9.8
2025-03-15 14:33:45,643:INFO:          markupsafe: 2.1.5
2025-03-15 14:33:45,643:INFO:             pickle5: Not installed
2025-03-15 14:33:45,644:INFO:         cloudpickle: 3.0.0
2025-03-15 14:33:45,644:INFO:         deprecation: 2.1.0
2025-03-15 14:33:45,644:INFO:              xxhash: 3.4.1
2025-03-15 14:33:45,644:INFO:           wurlitzer: Not installed
2025-03-15 14:33:45,644:INFO:PyCaret optional dependencies:
2025-03-15 14:33:59,224:INFO:                shap: 0.44.1
2025-03-15 14:33:59,224:INFO:           interpret: 0.6.7
2025-03-15 14:33:59,224:INFO:                umap: 0.5.7
2025-03-15 14:33:59,224:INFO:     ydata_profiling: 4.7.0
2025-03-15 14:33:59,224:INFO:  explainerdashboard: 0.4.7
2025-03-15 14:33:59,224:INFO:             autoviz: Not installed
2025-03-15 14:33:59,224:INFO:           fairlearn: 0.7.0
2025-03-15 14:33:59,224:INFO:          deepchecks: Not installed
2025-03-15 14:33:59,224:INFO:             xgboost: 2.0.3
2025-03-15 14:33:59,224:INFO:            catboost: 1.2.7
2025-03-15 14:33:59,224:INFO:              kmodes: 0.12.2
2025-03-15 14:33:59,224:INFO:             mlxtend: 0.23.1
2025-03-15 14:33:59,224:INFO:       statsforecast: 1.5.0
2025-03-15 14:33:59,224:INFO:        tune_sklearn: Not installed
2025-03-15 14:33:59,224:INFO:                 ray: Not installed
2025-03-15 14:33:59,225:INFO:            hyperopt: 0.2.7
2025-03-15 14:33:59,225:INFO:              optuna: 3.6.1
2025-03-15 14:33:59,225:INFO:               skopt: 0.10.2
2025-03-15 14:33:59,225:INFO:              mlflow: 2.11.3
2025-03-15 14:33:59,225:INFO:              gradio: 5.7.0
2025-03-15 14:33:59,225:INFO:             fastapi: 0.115.5
2025-03-15 14:33:59,225:INFO:             uvicorn: 0.29.0
2025-03-15 14:33:59,225:INFO:              m2cgen: 0.10.0
2025-03-15 14:33:59,225:INFO:           evidently: 0.4.40
2025-03-15 14:33:59,225:INFO:               fugue: 0.8.7
2025-03-15 14:33:59,225:INFO:           streamlit: 1.33.0
2025-03-15 14:33:59,226:INFO:             prophet: Not installed
2025-03-15 14:33:59,226:INFO:None
2025-03-15 14:33:59,226:INFO:Set up data.
2025-03-15 14:33:59,262:INFO:Set up folding strategy.
2025-03-15 14:33:59,262:INFO:Set up train/test split.
2025-03-15 14:33:59,286:INFO:Set up index.
2025-03-15 14:33:59,288:INFO:Assigning column types.
2025-03-15 14:33:59,295:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-15 14:33:59,402:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-15 14:33:59,411:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-15 14:33:59,486:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-15 14:33:59,491:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-15 14:33:59,798:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-15 14:33:59,800:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-15 14:33:59,852:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-15 14:33:59,857:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-15 14:33:59,859:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-15 14:33:59,956:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-15 14:34:00,017:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-15 14:34:00,022:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-15 14:34:00,113:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-15 14:34:00,168:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-15 14:34:00,173:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-15 14:34:00,174:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-15 14:34:00,318:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-15 14:34:00,325:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-15 14:34:00,470:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-15 14:34:00,475:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-15 14:34:00,500:INFO:Preparing preprocessing pipeline...
2025-03-15 14:34:00,505:INFO:Set up label encoding.
2025-03-15 14:34:00,505:INFO:Set up simple imputation.
2025-03-15 14:34:00,511:INFO:Set up encoding of ordinal features.
2025-03-15 14:34:00,513:INFO:Set up encoding of categorical features.
2025-03-15 14:34:00,514:INFO:Set up column name cleaning.
2025-03-15 14:34:00,800:INFO:Finished creating preprocessing pipeline.
2025-03-15 14:34:00,838:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ARDIAN~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                                    transformer=TargetEncoder(cols=['Minat dan '
                                                                    'Bakat',
                                                                    'Rencana '
                                                                    'Karir'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-03-15 14:34:00,838:INFO:Creating final display dataframe.
2025-03-15 14:34:01,452:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                5687  
1                                       Program Studi  
2                                          Multiclass  
3   Sains Data Terapan: 0, Sistem Pembangkitan Ene...  
4                                           (1000, 6)  
5                                          (1000, 10)  
6                                           (700, 10)  
7                                           (300, 10)  
8                                                   1  
9                                                   4  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                 25  
15                                               None  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               de85  
2025-03-15 14:34:01,689:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-15 14:34:01,695:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-15 14:34:01,838:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-15 14:34:01,843:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-15 14:34:01,846:INFO:setup() successfully completed in 22.48s...............
2025-03-15 14:34:01,847:INFO:Initializing compare_models()
2025-03-15 14:34:01,847:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-03-15 14:34:01,847:INFO:Checking exceptions
2025-03-15 14:34:01,853:INFO:Preparing display monitor
2025-03-15 14:34:01,978:INFO:Initializing Logistic Regression
2025-03-15 14:34:01,980:INFO:Total runtime is 3.4133593241373696e-05 minutes
2025-03-15 14:34:01,990:INFO:SubProcess create_model() called ==================================
2025-03-15 14:34:01,990:INFO:Initializing create_model()
2025-03-15 14:34:01,991:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:34:01,991:INFO:Checking exceptions
2025-03-15 14:34:01,991:INFO:Importing libraries
2025-03-15 14:34:01,991:INFO:Copying training dataset
2025-03-15 14:34:02,002:INFO:Defining folds
2025-03-15 14:34:02,002:INFO:Declaring metric variables
2025-03-15 14:34:02,015:INFO:Importing untrained model
2025-03-15 14:34:02,024:INFO:Logistic Regression Imported successfully
2025-03-15 14:34:02,047:INFO:Starting cross validation
2025-03-15 14:34:02,051:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:34:27,593:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-15 14:34:27,607:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-15 14:34:27,634:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-15 14:34:27,649:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-15 14:34:27,749:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-15 14:34:27,754:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-15 14:34:27,812:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-15 14:34:27,821:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-15 14:34:27,872:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:27,872:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:27,872:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:27,888:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:27,896:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:27,906:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,906:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,906:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,906:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,915:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,915:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,915:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,915:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,916:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,917:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,918:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:27,919:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:27,922:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,922:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:27,922:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,923:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,923:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,924:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,924:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,924:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:27,927:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:28,901:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-15 14:34:28,902:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-15 14:34:28,953:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:28,954:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:28,956:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:28,957:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:28,961:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:28,962:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:28,963:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:28,965:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:28,968:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:28,968:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,004:INFO:Calculating mean and std
2025-03-15 14:34:29,007:INFO:Creating metrics dataframe
2025-03-15 14:34:29,009:INFO:Uploading results into container
2025-03-15 14:34:29,010:INFO:Uploading model into container now
2025-03-15 14:34:29,011:INFO:_master_model_container: 1
2025-03-15 14:34:29,011:INFO:_display_container: 2
2025-03-15 14:34:29,011:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5687, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-15 14:34:29,011:INFO:create_model() successfully completed......................................
2025-03-15 14:34:29,241:INFO:SubProcess create_model() end ==================================
2025-03-15 14:34:29,242:INFO:Creating metrics dataframe
2025-03-15 14:34:29,272:INFO:Initializing K Neighbors Classifier
2025-03-15 14:34:29,273:INFO:Total runtime is 0.4549172123273214 minutes
2025-03-15 14:34:29,283:INFO:SubProcess create_model() called ==================================
2025-03-15 14:34:29,284:INFO:Initializing create_model()
2025-03-15 14:34:29,284:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:34:29,284:INFO:Checking exceptions
2025-03-15 14:34:29,284:INFO:Importing libraries
2025-03-15 14:34:29,284:INFO:Copying training dataset
2025-03-15 14:34:29,297:INFO:Defining folds
2025-03-15 14:34:29,297:INFO:Declaring metric variables
2025-03-15 14:34:29,306:INFO:Importing untrained model
2025-03-15 14:34:29,334:INFO:K Neighbors Classifier Imported successfully
2025-03-15 14:34:29,350:INFO:Starting cross validation
2025-03-15 14:34:29,356:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:34:29,840:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,841:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,842:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,845:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,845:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,845:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,846:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,846:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,848:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,850:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,850:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,853:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,853:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,854:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,854:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,856:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,857:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,858:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,858:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,860:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,860:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:29,866:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,108:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,112:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,113:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,116:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,117:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,121:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,133:INFO:Calculating mean and std
2025-03-15 14:34:30,134:INFO:Creating metrics dataframe
2025-03-15 14:34:30,137:INFO:Uploading results into container
2025-03-15 14:34:30,138:INFO:Uploading model into container now
2025-03-15 14:34:30,138:INFO:_master_model_container: 2
2025-03-15 14:34:30,138:INFO:_display_container: 2
2025-03-15 14:34:30,140:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-15 14:34:30,140:INFO:create_model() successfully completed......................................
2025-03-15 14:34:30,364:INFO:SubProcess create_model() end ==================================
2025-03-15 14:34:30,364:INFO:Creating metrics dataframe
2025-03-15 14:34:30,407:INFO:Initializing Naive Bayes
2025-03-15 14:34:30,408:INFO:Total runtime is 0.47383059660593674 minutes
2025-03-15 14:34:30,415:INFO:SubProcess create_model() called ==================================
2025-03-15 14:34:30,415:INFO:Initializing create_model()
2025-03-15 14:34:30,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:34:30,416:INFO:Checking exceptions
2025-03-15 14:34:30,416:INFO:Importing libraries
2025-03-15 14:34:30,416:INFO:Copying training dataset
2025-03-15 14:34:30,426:INFO:Defining folds
2025-03-15 14:34:30,426:INFO:Declaring metric variables
2025-03-15 14:34:30,443:INFO:Importing untrained model
2025-03-15 14:34:30,458:INFO:Naive Bayes Imported successfully
2025-03-15 14:34:30,480:INFO:Starting cross validation
2025-03-15 14:34:30,487:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:34:30,847:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,848:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,849:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,854:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,855:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,856:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,857:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,861:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,863:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,864:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,864:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,864:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,865:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,868:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:30,871:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,872:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,873:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,879:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,883:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,888:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,895:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,913:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,920:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:30,926:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,051:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,055:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,057:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,060:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,061:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,065:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,081:INFO:Calculating mean and std
2025-03-15 14:34:31,083:INFO:Creating metrics dataframe
2025-03-15 14:34:31,088:INFO:Uploading results into container
2025-03-15 14:34:31,093:INFO:Uploading model into container now
2025-03-15 14:34:31,094:INFO:_master_model_container: 3
2025-03-15 14:34:31,094:INFO:_display_container: 2
2025-03-15 14:34:31,094:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-15 14:34:31,095:INFO:create_model() successfully completed......................................
2025-03-15 14:34:31,351:INFO:SubProcess create_model() end ==================================
2025-03-15 14:34:31,351:INFO:Creating metrics dataframe
2025-03-15 14:34:31,363:INFO:Initializing Decision Tree Classifier
2025-03-15 14:34:31,364:INFO:Total runtime is 0.48977536360422774 minutes
2025-03-15 14:34:31,369:INFO:SubProcess create_model() called ==================================
2025-03-15 14:34:31,370:INFO:Initializing create_model()
2025-03-15 14:34:31,370:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:34:31,370:INFO:Checking exceptions
2025-03-15 14:34:31,371:INFO:Importing libraries
2025-03-15 14:34:31,371:INFO:Copying training dataset
2025-03-15 14:34:31,378:INFO:Defining folds
2025-03-15 14:34:31,378:INFO:Declaring metric variables
2025-03-15 14:34:31,389:INFO:Importing untrained model
2025-03-15 14:34:31,396:INFO:Decision Tree Classifier Imported successfully
2025-03-15 14:34:31,412:INFO:Starting cross validation
2025-03-15 14:34:31,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:34:31,768:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,778:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,781:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,785:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,788:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,788:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,790:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,792:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,794:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,795:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,796:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,799:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,801:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,801:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,806:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,806:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,808:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,809:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,814:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,814:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,816:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,822:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,825:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,831:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,982:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,986:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,990:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:31,996:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,000:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,004:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,016:INFO:Calculating mean and std
2025-03-15 14:34:32,018:INFO:Creating metrics dataframe
2025-03-15 14:34:32,021:INFO:Uploading results into container
2025-03-15 14:34:32,022:INFO:Uploading model into container now
2025-03-15 14:34:32,023:INFO:_master_model_container: 4
2025-03-15 14:34:32,023:INFO:_display_container: 2
2025-03-15 14:34:32,023:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best')
2025-03-15 14:34:32,024:INFO:create_model() successfully completed......................................
2025-03-15 14:34:32,254:INFO:SubProcess create_model() end ==================================
2025-03-15 14:34:32,255:INFO:Creating metrics dataframe
2025-03-15 14:34:32,271:INFO:Initializing SVM - Linear Kernel
2025-03-15 14:34:32,272:INFO:Total runtime is 0.504899259408315 minutes
2025-03-15 14:34:32,280:INFO:SubProcess create_model() called ==================================
2025-03-15 14:34:32,281:INFO:Initializing create_model()
2025-03-15 14:34:32,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:34:32,281:INFO:Checking exceptions
2025-03-15 14:34:32,282:INFO:Importing libraries
2025-03-15 14:34:32,282:INFO:Copying training dataset
2025-03-15 14:34:32,290:INFO:Defining folds
2025-03-15 14:34:32,290:INFO:Declaring metric variables
2025-03-15 14:34:32,299:INFO:Importing untrained model
2025-03-15 14:34:32,311:INFO:SVM - Linear Kernel Imported successfully
2025-03-15 14:34:32,335:INFO:Starting cross validation
2025-03-15 14:34:32,340:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:34:32,720:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:32,727:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,730:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:32,741:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,745:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:32,746:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,750:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,754:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,758:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:32,762:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:32,764:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,767:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,772:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:32,776:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,776:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:32,777:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,779:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:32,780:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,780:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:32,783:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,785:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,786:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:32,789:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,790:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,791:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,793:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:32,794:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:32,799:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,799:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,800:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:32,805:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,812:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,815:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:32,818:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,827:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:32,829:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,835:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,837:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:32,840:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,987:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:32,990:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,993:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:32,995:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,995:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:32,997:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:33,000:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,000:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,002:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:33,004:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,015:INFO:Calculating mean and std
2025-03-15 14:34:33,017:INFO:Creating metrics dataframe
2025-03-15 14:34:33,021:INFO:Uploading results into container
2025-03-15 14:34:33,022:INFO:Uploading model into container now
2025-03-15 14:34:33,022:INFO:_master_model_container: 5
2025-03-15 14:34:33,022:INFO:_display_container: 2
2025-03-15 14:34:33,023:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5687, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-15 14:34:33,023:INFO:create_model() successfully completed......................................
2025-03-15 14:34:33,239:INFO:SubProcess create_model() end ==================================
2025-03-15 14:34:33,239:INFO:Creating metrics dataframe
2025-03-15 14:34:33,274:INFO:Initializing Ridge Classifier
2025-03-15 14:34:33,274:INFO:Total runtime is 0.5215994477272033 minutes
2025-03-15 14:34:33,281:INFO:SubProcess create_model() called ==================================
2025-03-15 14:34:33,282:INFO:Initializing create_model()
2025-03-15 14:34:33,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:34:33,282:INFO:Checking exceptions
2025-03-15 14:34:33,282:INFO:Importing libraries
2025-03-15 14:34:33,283:INFO:Copying training dataset
2025-03-15 14:34:33,291:INFO:Defining folds
2025-03-15 14:34:33,291:INFO:Declaring metric variables
2025-03-15 14:34:33,295:INFO:Importing untrained model
2025-03-15 14:34:33,305:INFO:Ridge Classifier Imported successfully
2025-03-15 14:34:33,326:INFO:Starting cross validation
2025-03-15 14:34:33,330:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:34:33,675:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:33,677:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:33,681:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,682:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,684:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:33,688:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,689:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,689:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,693:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:33,694:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:33,695:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:33,695:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,696:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,699:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,700:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,700:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:33,704:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,706:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:33,706:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:33,709:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,709:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,713:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:33,714:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,717:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,718:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,720:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:33,722:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,726:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,729:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:33,732:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,740:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:33,743:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,744:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:33,746:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,748:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,750:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:33,750:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,752:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:33,753:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,755:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,919:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:33,920:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:33,924:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,924:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,932:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,933:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,937:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:33,939:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:33,941:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,945:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:33,968:INFO:Calculating mean and std
2025-03-15 14:34:33,971:INFO:Creating metrics dataframe
2025-03-15 14:34:33,979:INFO:Uploading results into container
2025-03-15 14:34:33,980:INFO:Uploading model into container now
2025-03-15 14:34:33,980:INFO:_master_model_container: 6
2025-03-15 14:34:33,980:INFO:_display_container: 2
2025-03-15 14:34:33,981:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5687, solver='auto',
                tol=0.0001)
2025-03-15 14:34:33,981:INFO:create_model() successfully completed......................................
2025-03-15 14:34:34,223:INFO:SubProcess create_model() end ==================================
2025-03-15 14:34:34,223:INFO:Creating metrics dataframe
2025-03-15 14:34:34,240:INFO:Initializing Random Forest Classifier
2025-03-15 14:34:34,240:INFO:Total runtime is 0.5376954515775044 minutes
2025-03-15 14:34:34,245:INFO:SubProcess create_model() called ==================================
2025-03-15 14:34:34,247:INFO:Initializing create_model()
2025-03-15 14:34:34,248:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:34:34,248:INFO:Checking exceptions
2025-03-15 14:34:34,248:INFO:Importing libraries
2025-03-15 14:34:34,248:INFO:Copying training dataset
2025-03-15 14:34:34,256:INFO:Defining folds
2025-03-15 14:34:34,257:INFO:Declaring metric variables
2025-03-15 14:34:34,271:INFO:Importing untrained model
2025-03-15 14:34:34,282:INFO:Random Forest Classifier Imported successfully
2025-03-15 14:34:34,309:INFO:Starting cross validation
2025-03-15 14:34:34,312:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:34:35,367:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,376:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,388:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,394:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,410:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,414:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:35,418:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,419:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,445:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,474:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,604:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,612:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,622:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,677:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,686:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,694:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,694:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,702:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,710:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,745:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,749:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,757:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,845:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,853:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:35,860:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,199:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,203:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,207:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,207:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,213:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,219:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,230:INFO:Calculating mean and std
2025-03-15 14:34:36,233:INFO:Creating metrics dataframe
2025-03-15 14:34:36,236:INFO:Uploading results into container
2025-03-15 14:34:36,237:INFO:Uploading model into container now
2025-03-15 14:34:36,237:INFO:_master_model_container: 7
2025-03-15 14:34:36,238:INFO:_display_container: 2
2025-03-15 14:34:36,239:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5687, verbose=0,
                       warm_start=False)
2025-03-15 14:34:36,239:INFO:create_model() successfully completed......................................
2025-03-15 14:34:36,524:INFO:SubProcess create_model() end ==================================
2025-03-15 14:34:36,525:INFO:Creating metrics dataframe
2025-03-15 14:34:36,544:INFO:Initializing Quadratic Discriminant Analysis
2025-03-15 14:34:36,544:INFO:Total runtime is 0.5761030991872151 minutes
2025-03-15 14:34:36,553:INFO:SubProcess create_model() called ==================================
2025-03-15 14:34:36,554:INFO:Initializing create_model()
2025-03-15 14:34:36,554:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:34:36,555:INFO:Checking exceptions
2025-03-15 14:34:36,555:INFO:Importing libraries
2025-03-15 14:34:36,555:INFO:Copying training dataset
2025-03-15 14:34:36,563:INFO:Defining folds
2025-03-15 14:34:36,563:INFO:Declaring metric variables
2025-03-15 14:34:36,571:INFO:Importing untrained model
2025-03-15 14:34:36,582:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-15 14:34:36,601:INFO:Starting cross validation
2025-03-15 14:34:36,605:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:34:36,854:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 14:34:36,854:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 14:34:36,854:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 14:34:36,854:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 14:34:36,855:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 14:34:36,937:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:36,939:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:36,939:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:36,940:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:36,940:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,942:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:36,942:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,943:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,944:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:36,944:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,946:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,948:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,948:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,950:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,951:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:36,952:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,952:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:36,953:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:36,954:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:36,956:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize(2025-03-15 14:34:36,958:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

c, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:36,970:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,971:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,972:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:36,976:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,976:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,976:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,979:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:36,982:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,984:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:36,985:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:37,080:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 14:34:37,089:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-15 14:34:37,135:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:37,138:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:37,140:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:37,142:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:37,142:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:37,145:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:37,146:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:37,146:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:37,150:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:37,153:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:37,172:INFO:Calculating mean and std
2025-03-15 14:34:37,175:INFO:Creating metrics dataframe
2025-03-15 14:34:37,178:INFO:Uploading results into container
2025-03-15 14:34:37,179:INFO:Uploading model into container now
2025-03-15 14:34:37,180:INFO:_master_model_container: 8
2025-03-15 14:34:37,180:INFO:_display_container: 2
2025-03-15 14:34:37,180:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-15 14:34:37,180:INFO:create_model() successfully completed......................................
2025-03-15 14:34:37,416:INFO:SubProcess create_model() end ==================================
2025-03-15 14:34:37,416:INFO:Creating metrics dataframe
2025-03-15 14:34:37,430:INFO:Initializing Ada Boost Classifier
2025-03-15 14:34:37,438:INFO:Total runtime is 0.5910045067469278 minutes
2025-03-15 14:34:37,445:INFO:SubProcess create_model() called ==================================
2025-03-15 14:34:37,447:INFO:Initializing create_model()
2025-03-15 14:34:37,447:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:34:37,448:INFO:Checking exceptions
2025-03-15 14:34:37,448:INFO:Importing libraries
2025-03-15 14:34:37,448:INFO:Copying training dataset
2025-03-15 14:34:37,459:INFO:Defining folds
2025-03-15 14:34:37,459:INFO:Declaring metric variables
2025-03-15 14:34:37,468:INFO:Importing untrained model
2025-03-15 14:34:37,479:INFO:Ada Boost Classifier Imported successfully
2025-03-15 14:34:37,499:INFO:Starting cross validation
2025-03-15 14:34:37,503:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:34:37,764:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 14:34:37,764:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 14:34:37,765:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 14:34:37,765:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 14:34:37,765:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 14:34:37,765:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 14:34:37,775:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 14:34:38,156:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:38,159:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,161:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:38,163:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:38,165:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,167:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,169:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,172:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,173:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,175:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:38,176:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:38,177:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:38,178:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:38,179:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,180:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:38,181:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,181:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,183:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,183:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,186:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,190:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:38,191:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,193:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,194:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:38,198:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,200:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:38,204:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,208:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:38,211:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,213:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:38,215:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:38,218:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,219:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,219:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,223:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:38,224:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,227:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,229:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:38,232:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,327:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 14:34:38,334:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-15 14:34:38,603:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:38,606:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,610:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:38,610:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,628:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,629:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:38,633:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,634:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,636:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:38,639:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:38,658:INFO:Calculating mean and std
2025-03-15 14:34:38,659:INFO:Creating metrics dataframe
2025-03-15 14:34:38,663:INFO:Uploading results into container
2025-03-15 14:34:38,663:INFO:Uploading model into container now
2025-03-15 14:34:38,664:INFO:_master_model_container: 9
2025-03-15 14:34:38,664:INFO:_display_container: 2
2025-03-15 14:34:38,664:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5687)
2025-03-15 14:34:38,665:INFO:create_model() successfully completed......................................
2025-03-15 14:34:38,882:INFO:SubProcess create_model() end ==================================
2025-03-15 14:34:38,883:INFO:Creating metrics dataframe
2025-03-15 14:34:38,901:INFO:Initializing Gradient Boosting Classifier
2025-03-15 14:34:38,901:INFO:Total runtime is 0.6153884689013163 minutes
2025-03-15 14:34:38,911:INFO:SubProcess create_model() called ==================================
2025-03-15 14:34:38,912:INFO:Initializing create_model()
2025-03-15 14:34:38,912:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:34:38,912:INFO:Checking exceptions
2025-03-15 14:34:38,913:INFO:Importing libraries
2025-03-15 14:34:38,913:INFO:Copying training dataset
2025-03-15 14:34:38,921:INFO:Defining folds
2025-03-15 14:34:38,921:INFO:Declaring metric variables
2025-03-15 14:34:38,931:INFO:Importing untrained model
2025-03-15 14:34:38,943:INFO:Gradient Boosting Classifier Imported successfully
2025-03-15 14:34:38,971:INFO:Starting cross validation
2025-03-15 14:34:38,980:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:34:43,847:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:43,850:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:43,857:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:43,870:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:43,893:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:43,896:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:43,902:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:43,904:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:43,905:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:43,913:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:43,913:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:43,920:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:44,063:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:44,066:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:44,075:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:44,082:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:44,140:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:44,144:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:44,153:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:44,161:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:44,197:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:44,201:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:44,210:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:44,219:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:44,252:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:44,256:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:44,264:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:44,264:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:44,268:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:44,272:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:44,276:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:44,285:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:47,719:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:47,724:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:47,734:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:47,743:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:47,812:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:47,815:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:47,823:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:47,831:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:47,852:INFO:Calculating mean and std
2025-03-15 14:34:47,854:INFO:Creating metrics dataframe
2025-03-15 14:34:47,859:INFO:Uploading results into container
2025-03-15 14:34:47,860:INFO:Uploading model into container now
2025-03-15 14:34:47,861:INFO:_master_model_container: 10
2025-03-15 14:34:47,861:INFO:_display_container: 2
2025-03-15 14:34:47,861:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5687, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-15 14:34:47,863:INFO:create_model() successfully completed......................................
2025-03-15 14:34:48,120:INFO:SubProcess create_model() end ==================================
2025-03-15 14:34:48,120:INFO:Creating metrics dataframe
2025-03-15 14:34:48,138:INFO:Initializing Linear Discriminant Analysis
2025-03-15 14:34:48,138:INFO:Total runtime is 0.7693303187688191 minutes
2025-03-15 14:34:48,145:INFO:SubProcess create_model() called ==================================
2025-03-15 14:34:48,146:INFO:Initializing create_model()
2025-03-15 14:34:48,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:34:48,146:INFO:Checking exceptions
2025-03-15 14:34:48,146:INFO:Importing libraries
2025-03-15 14:34:48,147:INFO:Copying training dataset
2025-03-15 14:34:48,155:INFO:Defining folds
2025-03-15 14:34:48,156:INFO:Declaring metric variables
2025-03-15 14:34:48,165:INFO:Importing untrained model
2025-03-15 14:34:48,173:INFO:Linear Discriminant Analysis Imported successfully
2025-03-15 14:34:48,199:INFO:Starting cross validation
2025-03-15 14:34:48,211:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:34:48,578:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:48,580:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:48,582:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,586:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,587:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:48,589:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,590:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:48,591:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,594:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,595:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,598:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:48,599:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

c, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:48,599:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:48,602:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,602:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,603:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,605:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,608:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,609:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:48,610:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,610:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,612:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:48,613:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,613:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:48,618:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,618:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,620:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,624:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,627:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:48,628:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,632:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,633:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:48,638:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,640:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,649:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,820:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:48,823:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,823:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-15 14:34:48,825:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,827:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,831:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,833:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,833:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:48,835:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:48,847:INFO:Calculating mean and std
2025-03-15 14:34:48,848:INFO:Creating metrics dataframe
2025-03-15 14:34:48,853:INFO:Uploading results into container
2025-03-15 14:34:48,855:INFO:Uploading model into container now
2025-03-15 14:34:48,856:INFO:_master_model_container: 11
2025-03-15 14:34:48,856:INFO:_display_container: 2
2025-03-15 14:34:48,857:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-15 14:34:48,858:INFO:create_model() successfully completed......................................
2025-03-15 14:34:49,104:INFO:SubProcess create_model() end ==================================
2025-03-15 14:34:49,104:INFO:Creating metrics dataframe
2025-03-15 14:34:49,120:INFO:Initializing Extra Trees Classifier
2025-03-15 14:34:49,121:INFO:Total runtime is 0.7857161164283751 minutes
2025-03-15 14:34:49,128:INFO:SubProcess create_model() called ==================================
2025-03-15 14:34:49,129:INFO:Initializing create_model()
2025-03-15 14:34:49,129:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:34:49,129:INFO:Checking exceptions
2025-03-15 14:34:49,130:INFO:Importing libraries
2025-03-15 14:34:49,130:INFO:Copying training dataset
2025-03-15 14:34:49,136:INFO:Defining folds
2025-03-15 14:34:49,138:INFO:Declaring metric variables
2025-03-15 14:34:49,146:INFO:Importing untrained model
2025-03-15 14:34:49,155:INFO:Extra Trees Classifier Imported successfully
2025-03-15 14:34:49,171:INFO:Starting cross validation
2025-03-15 14:34:49,175:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:34:50,046:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,053:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,061:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,142:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,151:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,154:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,160:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,163:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,165:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:50,171:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,179:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,190:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,210:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,243:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,250:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,252:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,256:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,261:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,265:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,272:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,283:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,286:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:34:50,291:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,337:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,345:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,354:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,740:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,745:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,750:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,800:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,807:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,812:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:50,828:INFO:Calculating mean and std
2025-03-15 14:34:50,830:INFO:Creating metrics dataframe
2025-03-15 14:34:50,834:INFO:Uploading results into container
2025-03-15 14:34:50,835:INFO:Uploading model into container now
2025-03-15 14:34:50,835:INFO:_master_model_container: 12
2025-03-15 14:34:50,836:INFO:_display_container: 2
2025-03-15 14:34:50,836:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5687, verbose=0,
                     warm_start=False)
2025-03-15 14:34:50,836:INFO:create_model() successfully completed......................................
2025-03-15 14:34:51,101:INFO:SubProcess create_model() end ==================================
2025-03-15 14:34:51,102:INFO:Creating metrics dataframe
2025-03-15 14:34:51,122:INFO:Initializing Extreme Gradient Boosting
2025-03-15 14:34:51,122:INFO:Total runtime is 0.8190655906995137 minutes
2025-03-15 14:34:51,130:INFO:SubProcess create_model() called ==================================
2025-03-15 14:34:51,131:INFO:Initializing create_model()
2025-03-15 14:34:51,131:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:34:51,131:INFO:Checking exceptions
2025-03-15 14:34:51,131:INFO:Importing libraries
2025-03-15 14:34:51,132:INFO:Copying training dataset
2025-03-15 14:34:51,141:INFO:Defining folds
2025-03-15 14:34:51,142:INFO:Declaring metric variables
2025-03-15 14:34:51,150:INFO:Importing untrained model
2025-03-15 14:34:51,160:INFO:Extreme Gradient Boosting Imported successfully
2025-03-15 14:34:51,175:INFO:Starting cross validation
2025-03-15 14:34:51,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:34:53,379:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,388:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,396:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,399:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,410:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,412:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,419:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,428:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,429:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,437:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,440:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,448:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,488:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,497:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,506:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,522:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,530:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,538:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,658:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,666:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,675:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,691:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,699:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:53,706:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:54,144:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:54,149:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:54,153:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:54,157:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:54,160:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:54,169:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:54,186:INFO:Calculating mean and std
2025-03-15 14:34:54,190:INFO:Creating metrics dataframe
2025-03-15 14:34:54,192:INFO:Uploading results into container
2025-03-15 14:34:54,194:INFO:Uploading model into container now
2025-03-15 14:34:54,195:INFO:_master_model_container: 13
2025-03-15 14:34:54,195:INFO:_display_container: 2
2025-03-15 14:34:54,198:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-03-15 14:34:54,198:INFO:create_model() successfully completed......................................
2025-03-15 14:34:54,460:INFO:SubProcess create_model() end ==================================
2025-03-15 14:34:54,461:INFO:Creating metrics dataframe
2025-03-15 14:34:54,480:INFO:Initializing Light Gradient Boosting Machine
2025-03-15 14:34:54,480:INFO:Total runtime is 0.8750364820162454 minutes
2025-03-15 14:34:54,487:INFO:SubProcess create_model() called ==================================
2025-03-15 14:34:54,488:INFO:Initializing create_model()
2025-03-15 14:34:54,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:34:54,489:INFO:Checking exceptions
2025-03-15 14:34:54,489:INFO:Importing libraries
2025-03-15 14:34:54,489:INFO:Copying training dataset
2025-03-15 14:34:54,496:INFO:Defining folds
2025-03-15 14:34:54,496:INFO:Declaring metric variables
2025-03-15 14:34:54,503:INFO:Importing untrained model
2025-03-15 14:34:54,511:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-15 14:34:54,527:INFO:Starting cross validation
2025-03-15 14:34:54,533:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:34:59,464:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:59,471:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:59,479:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:59,875:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:59,881:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:34:59,887:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:00,018:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:00,027:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:00,035:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:00,947:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:00,953:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:00,954:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:00,960:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:00,962:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:00,980:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:01,239:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:01,246:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:01,253:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:01,253:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:01,261:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:01,287:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:01,480:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:01,486:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:01,493:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:02,639:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:02,645:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:02,652:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:02,795:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:02,802:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:02,809:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:02,822:INFO:Calculating mean and std
2025-03-15 14:35:02,824:INFO:Creating metrics dataframe
2025-03-15 14:35:02,828:INFO:Uploading results into container
2025-03-15 14:35:02,830:INFO:Uploading model into container now
2025-03-15 14:35:02,831:INFO:_master_model_container: 14
2025-03-15 14:35:02,831:INFO:_display_container: 2
2025-03-15 14:35:02,832:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5687, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-15 14:35:02,832:INFO:create_model() successfully completed......................................
2025-03-15 14:35:03,146:INFO:SubProcess create_model() end ==================================
2025-03-15 14:35:03,147:INFO:Creating metrics dataframe
2025-03-15 14:35:03,168:INFO:Initializing CatBoost Classifier
2025-03-15 14:35:03,169:INFO:Total runtime is 1.0198464035987853 minutes
2025-03-15 14:35:03,175:INFO:SubProcess create_model() called ==================================
2025-03-15 14:35:03,176:INFO:Initializing create_model()
2025-03-15 14:35:03,176:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:35:03,176:INFO:Checking exceptions
2025-03-15 14:35:03,177:INFO:Importing libraries
2025-03-15 14:35:03,177:INFO:Copying training dataset
2025-03-15 14:35:03,186:INFO:Defining folds
2025-03-15 14:35:03,186:INFO:Declaring metric variables
2025-03-15 14:35:03,194:INFO:Importing untrained model
2025-03-15 14:35:03,204:INFO:CatBoost Classifier Imported successfully
2025-03-15 14:35:03,216:INFO:Starting cross validation
2025-03-15 14:35:03,221:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:35:37,410:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:37,418:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:37,431:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:37,436:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:37,447:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:37,463:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:37,725:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:37,743:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:37,751:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:37,755:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:37,764:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:37,771:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:38,130:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:38,138:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:38,145:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:38,160:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:38,168:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:38,175:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:38,518:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:38,527:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:38,535:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:38,844:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:38,854:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:38,862:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,216:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,220:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,221:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,225:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,225:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,229:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,240:INFO:Calculating mean and std
2025-03-15 14:35:53,242:INFO:Creating metrics dataframe
2025-03-15 14:35:53,245:INFO:Uploading results into container
2025-03-15 14:35:53,246:INFO:Uploading model into container now
2025-03-15 14:35:53,247:INFO:_master_model_container: 15
2025-03-15 14:35:53,247:INFO:_display_container: 2
2025-03-15 14:35:53,247:INFO:<catboost.core.CatBoostClassifier object at 0x000002B53E4E87D0>
2025-03-15 14:35:53,247:INFO:create_model() successfully completed......................................
2025-03-15 14:35:53,470:INFO:SubProcess create_model() end ==================================
2025-03-15 14:35:53,471:INFO:Creating metrics dataframe
2025-03-15 14:35:53,505:INFO:Initializing Dummy Classifier
2025-03-15 14:35:53,505:INFO:Total runtime is 1.8587818582852682 minutes
2025-03-15 14:35:53,514:INFO:SubProcess create_model() called ==================================
2025-03-15 14:35:53,515:INFO:Initializing create_model()
2025-03-15 14:35:53,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53E00FB10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:35:53,516:INFO:Checking exceptions
2025-03-15 14:35:53,516:INFO:Importing libraries
2025-03-15 14:35:53,516:INFO:Copying training dataset
2025-03-15 14:35:53,526:INFO:Defining folds
2025-03-15 14:35:53,527:INFO:Declaring metric variables
2025-03-15 14:35:53,534:INFO:Importing untrained model
2025-03-15 14:35:53,541:INFO:Dummy Classifier Imported successfully
2025-03-15 14:35:53,553:INFO:Starting cross validation
2025-03-15 14:35:53,558:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:35:53,857:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,858:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,864:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,865:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,867:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:35:53,868:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:35:53,872:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,872:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,872:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,873:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,875:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,877:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,880:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,881:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,882:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,884:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:35:53,884:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,884:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,886:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:35:53,888:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:35:53,888:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,890:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,890:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:35:53,893:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,893:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,894:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:35:53,894:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,897:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,899:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,908:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:53,911:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:35:53,914:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:54,053:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:54,054:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:54,058:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:54,060:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:54,061:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:35:54,063:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:35:54,064:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:54,065:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:54,077:INFO:Calculating mean and std
2025-03-15 14:35:54,079:INFO:Creating metrics dataframe
2025-03-15 14:35:54,083:INFO:Uploading results into container
2025-03-15 14:35:54,083:INFO:Uploading model into container now
2025-03-15 14:35:54,084:INFO:_master_model_container: 16
2025-03-15 14:35:54,084:INFO:_display_container: 2
2025-03-15 14:35:54,084:INFO:DummyClassifier(constant=None, random_state=5687, strategy='prior')
2025-03-15 14:35:54,084:INFO:create_model() successfully completed......................................
2025-03-15 14:35:54,363:INFO:SubProcess create_model() end ==================================
2025-03-15 14:35:54,363:INFO:Creating metrics dataframe
2025-03-15 14:35:54,511:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-03-15 14:35:54,526:INFO:Initializing create_model()
2025-03-15 14:35:54,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5687, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:35:54,528:INFO:Checking exceptions
2025-03-15 14:35:54,532:INFO:Importing libraries
2025-03-15 14:35:54,532:INFO:Copying training dataset
2025-03-15 14:35:54,539:INFO:Defining folds
2025-03-15 14:35:54,539:INFO:Declaring metric variables
2025-03-15 14:35:54,539:INFO:Importing untrained model
2025-03-15 14:35:54,540:INFO:Declaring custom model
2025-03-15 14:35:54,542:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-15 14:35:54,545:INFO:Cross validation set to False
2025-03-15 14:35:54,545:INFO:Fitting Model
2025-03-15 14:35:54,690:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-03-15 14:35:54,691:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000165 seconds.
2025-03-15 14:35:54,691:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-15 14:35:54,692:INFO:[LightGBM] [Info] Total Bins 323
2025-03-15 14:35:54,692:INFO:[LightGBM] [Info] Number of data points in the train set: 700, number of used features: 9
2025-03-15 14:35:54,692:INFO:[LightGBM] [Info] Start training from score -2.679879
2025-03-15 14:35:54,693:INFO:[LightGBM] [Info] Start training from score -2.316974
2025-03-15 14:35:54,693:INFO:[LightGBM] [Info] Start training from score -2.316974
2025-03-15 14:35:54,693:INFO:[LightGBM] [Info] Start training from score -2.599837
2025-03-15 14:35:54,693:INFO:[LightGBM] [Info] Start training from score -2.543747
2025-03-15 14:35:54,693:INFO:[LightGBM] [Info] Start training from score -2.639057
2025-03-15 14:35:54,693:INFO:[LightGBM] [Info] Start training from score -2.619255
2025-03-15 14:35:54,693:INFO:[LightGBM] [Info] Start training from score -2.440206
2025-03-15 14:35:54,693:INFO:[LightGBM] [Info] Start training from score -2.288400
2025-03-15 14:35:54,693:INFO:[LightGBM] [Info] Start training from score -2.562096
2025-03-15 14:35:54,694:INFO:[LightGBM] [Info] Start training from score -2.508029
2025-03-15 14:35:54,694:INFO:[LightGBM] [Info] Start training from score -2.407946
2025-03-15 14:35:54,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,695:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,695:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,696:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,697:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,699:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,699:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,700:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,700:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,701:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,703:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,704:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,705:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,705:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,706:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,707:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,708:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,709:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,709:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,711:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,712:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,712:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,713:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,715:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,716:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,716:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,719:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,720:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,720:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,721:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,722:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,723:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,725:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,725:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,727:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,731:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,732:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,733:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,733:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,735:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,737:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,739:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,742:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,744:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,746:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,746:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,748:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,754:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,755:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,755:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,756:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,774:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,775:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,775:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,776:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,779:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,780:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,782:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,784:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,785:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,787:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,787:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,788:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,794:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,795:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,795:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,796:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,798:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,801:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,801:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,803:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,807:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,809:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,811:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,813:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,815:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,815:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,823:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,825:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,827:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,830:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,832:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,838:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,840:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,841:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,841:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,843:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,845:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,846:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,849:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,849:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,851:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,856:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,869:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,871:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,879:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,879:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,883:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,885:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,885:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,886:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,888:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,895:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,897:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,899:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,901:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,901:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,905:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,905:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,907:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,910:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,912:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,912:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,922:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,922:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,929:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,929:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,932:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,935:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,935:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,937:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,937:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,939:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,940:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,943:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,945:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,945:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,946:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,951:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,957:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,958:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,960:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,962:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,962:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,965:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,983:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,983:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,990:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:54,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,000:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,006:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,027:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,039:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,041:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,045:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,046:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,046:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,054:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,054:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,059:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,061:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,062:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,073:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,073:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,077:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,078:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,079:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,079:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,084:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,087:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,113:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,131:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,165:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,169:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,189:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,198:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,199:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,199:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,199:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,200:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,205:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,207:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,207:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,208:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,208:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,208:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,208:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,209:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,209:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,209:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,211:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,211:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,211:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,212:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,212:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,212:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,215:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,216:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,216:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,216:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,217:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,217:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,218:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,219:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,220:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,220:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,221:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,223:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,223:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,224:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,224:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,224:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,225:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,226:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,226:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,226:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,228:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,228:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,228:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,228:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,229:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,231:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,232:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,232:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,232:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,232:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,233:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,236:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,237:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,237:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,237:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,237:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,237:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,240:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,240:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,241:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,241:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,241:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,242:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,242:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,242:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,242:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,244:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,244:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,244:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,244:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,244:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,245:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,246:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,246:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,247:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,248:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,250:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,251:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,251:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,252:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,253:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,255:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,256:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,259:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,259:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,259:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,259:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,259:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,262:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,262:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,263:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,263:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,266:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,266:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,266:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,267:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,267:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,267:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,267:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,270:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,270:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,270:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,271:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,271:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,271:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,271:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,271:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,272:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,272:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,273:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,273:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,273:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,273:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,277:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,277:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,277:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,290:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,293:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,294:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,310:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-15 14:35:55,486:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5687, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-15 14:35:55,486:INFO:create_model() successfully completed......................................
2025-03-15 14:35:55,784:INFO:_master_model_container: 16
2025-03-15 14:35:55,784:INFO:_display_container: 2
2025-03-15 14:35:55,785:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5687, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-15 14:35:55,785:INFO:compare_models() successfully completed......................................
2025-03-15 14:35:55,787:INFO:Initializing create_model()
2025-03-15 14:35:55,787:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:35:55,787:INFO:Checking exceptions
2025-03-15 14:35:55,816:INFO:Importing libraries
2025-03-15 14:35:55,816:INFO:Copying training dataset
2025-03-15 14:35:55,826:INFO:Defining folds
2025-03-15 14:35:55,827:INFO:Declaring metric variables
2025-03-15 14:35:55,843:INFO:Importing untrained model
2025-03-15 14:35:55,852:INFO:Decision Tree Classifier Imported successfully
2025-03-15 14:35:55,869:INFO:Starting cross validation
2025-03-15 14:35:55,874:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:35:56,248:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,249:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,257:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,259:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,265:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,267:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,289:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,297:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,306:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,351:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,365:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,365:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,372:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,372:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,374:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,381:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,389:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,398:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,406:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,407:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,414:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,418:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,423:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,564:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,569:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,571:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,576:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,579:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,583:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:35:56,604:INFO:Calculating mean and std
2025-03-15 14:35:56,605:INFO:Creating metrics dataframe
2025-03-15 14:35:56,612:INFO:Finalizing model
2025-03-15 14:35:56,731:INFO:Uploading results into container
2025-03-15 14:35:56,733:INFO:Uploading model into container now
2025-03-15 14:35:56,758:INFO:_master_model_container: 17
2025-03-15 14:35:56,758:INFO:_display_container: 3
2025-03-15 14:35:56,759:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best')
2025-03-15 14:35:56,759:INFO:create_model() successfully completed......................................
2025-03-15 14:35:56,991:INFO:Initializing tune_model()
2025-03-15 14:35:56,991:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-03-15 14:35:56,991:INFO:Checking exceptions
2025-03-15 14:35:57,029:INFO:Copying training dataset
2025-03-15 14:35:57,037:INFO:Checking base model
2025-03-15 14:35:57,037:INFO:Base model : Decision Tree Classifier
2025-03-15 14:35:57,048:INFO:Declaring metric variables
2025-03-15 14:35:57,055:INFO:Defining Hyperparameters
2025-03-15 14:35:57,297:INFO:Tuning with n_jobs=-1
2025-03-15 14:35:57,297:INFO:Initializing RandomizedSearchCV
2025-03-15 14:36:00,947:INFO:best_params: {'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.01, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 12, 'actual_estimator__criterion': 'gini'}
2025-03-15 14:36:00,950:INFO:Hyperparameter search completed
2025-03-15 14:36:00,950:INFO:SubProcess create_model() called ==================================
2025-03-15 14:36:00,951:INFO:Initializing create_model()
2025-03-15 14:36:00,951:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002B53D957FD0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 7, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.01, 'max_features': 1.0, 'max_depth': 12, 'criterion': 'gini'})
2025-03-15 14:36:00,951:INFO:Checking exceptions
2025-03-15 14:36:00,951:INFO:Importing libraries
2025-03-15 14:36:00,952:INFO:Copying training dataset
2025-03-15 14:36:00,962:INFO:Defining folds
2025-03-15 14:36:00,962:INFO:Declaring metric variables
2025-03-15 14:36:00,967:INFO:Importing untrained model
2025-03-15 14:36:00,968:INFO:Declaring custom model
2025-03-15 14:36:00,975:INFO:Decision Tree Classifier Imported successfully
2025-03-15 14:36:00,989:INFO:Starting cross validation
2025-03-15 14:36:00,994:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:36:01,278:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,285:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,292:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,299:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,305:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,306:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,314:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,315:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,322:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,325:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:36:01,330:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,330:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,337:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,338:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,341:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:36:01,342:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,344:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,347:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,349:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,350:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,357:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,359:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,360:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,361:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:36:01,364:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,366:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,369:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:36:01,371:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,500:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,505:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,508:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-15 14:36:01,512:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,522:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,528:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,532:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:01,545:INFO:Calculating mean and std
2025-03-15 14:36:01,546:INFO:Creating metrics dataframe
2025-03-15 14:36:01,555:INFO:Finalizing model
2025-03-15 14:36:01,700:INFO:Uploading results into container
2025-03-15 14:36:01,703:INFO:Uploading model into container now
2025-03-15 14:36:01,704:INFO:_master_model_container: 18
2025-03-15 14:36:01,704:INFO:_display_container: 4
2025-03-15 14:36:01,705:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=12, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best')
2025-03-15 14:36:01,705:INFO:create_model() successfully completed......................................
2025-03-15 14:36:01,947:INFO:SubProcess create_model() end ==================================
2025-03-15 14:36:01,947:INFO:choose_better activated
2025-03-15 14:36:01,954:INFO:SubProcess create_model() called ==================================
2025-03-15 14:36:01,955:INFO:Initializing create_model()
2025-03-15 14:36:01,955:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:36:01,955:INFO:Checking exceptions
2025-03-15 14:36:01,959:INFO:Importing libraries
2025-03-15 14:36:01,959:INFO:Copying training dataset
2025-03-15 14:36:01,965:INFO:Defining folds
2025-03-15 14:36:01,965:INFO:Declaring metric variables
2025-03-15 14:36:01,965:INFO:Importing untrained model
2025-03-15 14:36:01,965:INFO:Declaring custom model
2025-03-15 14:36:01,966:INFO:Decision Tree Classifier Imported successfully
2025-03-15 14:36:01,966:INFO:Starting cross validation
2025-03-15 14:36:01,968:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-15 14:36:02,301:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,310:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,320:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,331:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,344:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,345:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,349:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,352:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,352:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,360:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,361:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,361:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,365:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,366:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,368:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,368:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,374:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,375:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,395:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,404:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,406:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,410:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,413:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,420:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,540:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,545:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,550:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,562:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,567:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,571:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-15 14:36:02,590:INFO:Calculating mean and std
2025-03-15 14:36:02,591:INFO:Creating metrics dataframe
2025-03-15 14:36:02,594:INFO:Finalizing model
2025-03-15 14:36:02,724:INFO:Uploading results into container
2025-03-15 14:36:02,725:INFO:Uploading model into container now
2025-03-15 14:36:02,726:INFO:_master_model_container: 19
2025-03-15 14:36:02,726:INFO:_display_container: 5
2025-03-15 14:36:02,726:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best')
2025-03-15 14:36:02,727:INFO:create_model() successfully completed......................................
2025-03-15 14:36:02,968:INFO:SubProcess create_model() end ==================================
2025-03-15 14:36:02,969:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best') result for Accuracy is 0.9443
2025-03-15 14:36:02,970:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=12, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.01, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best') result for Accuracy is 0.8157
2025-03-15 14:36:02,971:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best') is best model
2025-03-15 14:36:02,971:INFO:choose_better completed
2025-03-15 14:36:02,972:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2025-03-15 14:36:02,996:INFO:_master_model_container: 19
2025-03-15 14:36:02,996:INFO:_display_container: 4
2025-03-15 14:36:02,998:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best')
2025-03-15 14:36:02,998:INFO:tune_model() successfully completed......................................
2025-03-15 14:36:03,229:INFO:Initializing evaluate_model()
2025-03-15 14:36:03,230:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-15 14:36:03,253:INFO:Initializing plot_model()
2025-03-15 14:36:03,254:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:36:03,254:INFO:Checking exceptions
2025-03-15 14:36:03,258:INFO:Preloading libraries
2025-03-15 14:36:03,260:INFO:Copying training dataset
2025-03-15 14:36:03,260:INFO:Plot type: pipeline
2025-03-15 14:36:03,759:INFO:Visual Rendered Successfully
2025-03-15 14:36:03,980:INFO:plot_model() successfully completed......................................
2025-03-15 14:36:03,986:INFO:Initializing finalize_model()
2025-03-15 14:36:03,988:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-15 14:36:03,988:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best')
2025-03-15 14:36:03,995:INFO:Initializing create_model()
2025-03-15 14:36:03,995:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-15 14:36:03,995:INFO:Checking exceptions
2025-03-15 14:36:04,005:INFO:Importing libraries
2025-03-15 14:36:04,005:INFO:Copying training dataset
2025-03-15 14:36:04,006:INFO:Defining folds
2025-03-15 14:36:04,006:INFO:Declaring metric variables
2025-03-15 14:36:04,006:INFO:Importing untrained model
2025-03-15 14:36:04,007:INFO:Declaring custom model
2025-03-15 14:36:04,008:INFO:Decision Tree Classifier Imported successfully
2025-03-15 14:36:04,011:INFO:Cross validation set to False
2025-03-15 14:36:04,011:INFO:Fitting Model
2025-03-15 14:36:04,244:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=5687,
                                        splitter='best'))],
         verbose=False)
2025-03-15 14:36:04,244:INFO:create_model() successfully completed......................................
2025-03-15 14:36:04,473:INFO:_master_model_container: 19
2025-03-15 14:36:04,473:INFO:_display_container: 4
2025-03-15 14:36:04,505:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=5687,
                                        splitter='best'))],
         verbose=False)
2025-03-15 14:36:04,505:INFO:finalize_model() successfully completed......................................
2025-03-15 14:36:04,764:INFO:Initializing predict_model()
2025-03-15 14:36:04,764:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=5687,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002B53DE54220>)
2025-03-15 14:36:04,764:INFO:Checking exceptions
2025-03-15 14:36:04,764:INFO:Preloading libraries
2025-03-15 14:36:04,767:INFO:Set up data.
2025-03-15 14:36:04,771:INFO:Set up index.
2025-03-15 14:48:16,400:INFO:Initializing plot_model()
2025-03-15 14:48:16,401:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=parameter, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:48:16,401:INFO:Checking exceptions
2025-03-15 14:48:16,404:INFO:Preloading libraries
2025-03-15 14:48:16,405:INFO:Copying training dataset
2025-03-15 14:48:16,405:INFO:Plot type: parameter
2025-03-15 14:48:16,412:INFO:Visual Rendered Successfully
2025-03-15 14:48:16,766:INFO:plot_model() successfully completed......................................
2025-03-15 14:48:24,015:INFO:Initializing plot_model()
2025-03-15 14:48:24,017:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=auc, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:48:24,017:INFO:Checking exceptions
2025-03-15 14:48:24,021:INFO:Preloading libraries
2025-03-15 14:48:24,044:INFO:Copying training dataset
2025-03-15 14:48:24,044:INFO:Plot type: auc
2025-03-15 14:48:24,182:INFO:Fitting Model
2025-03-15 14:48:24,215:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2025-03-15 14:48:24,216:INFO:Scoring test/hold-out set
2025-03-15 14:48:24,712:INFO:Visual Rendered Successfully
2025-03-15 14:48:25,078:INFO:plot_model() successfully completed......................................
2025-03-15 14:48:30,089:INFO:Initializing plot_model()
2025-03-15 14:48:30,090:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=confusion_matrix, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:48:30,090:INFO:Checking exceptions
2025-03-15 14:48:30,100:INFO:Preloading libraries
2025-03-15 14:48:30,103:INFO:Copying training dataset
2025-03-15 14:48:30,104:INFO:Plot type: confusion_matrix
2025-03-15 14:48:30,238:INFO:Fitting Model
2025-03-15 14:48:30,238:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2025-03-15 14:48:30,239:INFO:Scoring test/hold-out set
2025-03-15 14:48:30,985:INFO:Visual Rendered Successfully
2025-03-15 14:48:31,323:INFO:plot_model() successfully completed......................................
2025-03-15 14:48:34,521:INFO:Initializing plot_model()
2025-03-15 14:48:34,521:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=threshold, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:48:34,521:INFO:Checking exceptions
2025-03-15 14:48:38,781:INFO:Initializing plot_model()
2025-03-15 14:48:38,783:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=pr, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:48:38,783:INFO:Checking exceptions
2025-03-15 14:48:38,789:INFO:Preloading libraries
2025-03-15 14:48:38,790:INFO:Copying training dataset
2025-03-15 14:48:38,790:INFO:Plot type: pr
2025-03-15 14:48:38,933:INFO:Fitting Model
2025-03-15 14:48:38,984:INFO:Scoring test/hold-out set
2025-03-15 14:48:39,326:INFO:Visual Rendered Successfully
2025-03-15 14:48:39,542:INFO:plot_model() successfully completed......................................
2025-03-15 14:48:45,648:INFO:Initializing plot_model()
2025-03-15 14:48:45,648:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=error, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:48:45,649:INFO:Checking exceptions
2025-03-15 14:48:45,655:INFO:Preloading libraries
2025-03-15 14:48:45,656:INFO:Copying training dataset
2025-03-15 14:48:45,656:INFO:Plot type: error
2025-03-15 14:48:45,818:INFO:Fitting Model
2025-03-15 14:48:45,819:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2025-03-15 14:48:45,819:INFO:Scoring test/hold-out set
2025-03-15 14:48:46,762:INFO:Visual Rendered Successfully
2025-03-15 14:48:47,035:INFO:plot_model() successfully completed......................................
2025-03-15 14:48:52,050:INFO:Initializing plot_model()
2025-03-15 14:48:52,050:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=class_report, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:48:52,051:INFO:Checking exceptions
2025-03-15 14:48:52,056:INFO:Preloading libraries
2025-03-15 14:48:52,056:INFO:Copying training dataset
2025-03-15 14:48:52,057:INFO:Plot type: class_report
2025-03-15 14:48:52,194:INFO:Fitting Model
2025-03-15 14:48:52,195:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2025-03-15 14:48:52,195:INFO:Scoring test/hold-out set
2025-03-15 14:48:52,845:INFO:Visual Rendered Successfully
2025-03-15 14:48:53,120:INFO:plot_model() successfully completed......................................
2025-03-15 14:48:59,257:INFO:Initializing plot_model()
2025-03-15 14:48:59,258:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=rfe, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:48:59,259:INFO:Checking exceptions
2025-03-15 14:49:01,108:INFO:Initializing plot_model()
2025-03-15 14:49:01,108:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=learning, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:49:01,108:INFO:Checking exceptions
2025-03-15 14:49:01,116:INFO:Preloading libraries
2025-03-15 14:49:01,117:INFO:Copying training dataset
2025-03-15 14:49:01,117:INFO:Plot type: learning
2025-03-15 14:49:01,273:INFO:Fitting Model
2025-03-15 14:49:07,550:INFO:Visual Rendered Successfully
2025-03-15 14:49:07,774:INFO:plot_model() successfully completed......................................
2025-03-15 14:49:07,966:INFO:Initializing plot_model()
2025-03-15 14:49:07,966:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=tree, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:49:07,966:INFO:Checking exceptions
2025-03-15 14:49:07,969:INFO:Preloading libraries
2025-03-15 14:49:07,970:INFO:Copying training dataset
2025-03-15 14:49:07,970:INFO:Plot type: tree
2025-03-15 14:49:07,995:INFO:Plotting decision trees
2025-03-15 14:49:08,027:INFO:Plotting tree 0
2025-03-15 14:49:11,527:INFO:Visual Rendered Successfully
2025-03-15 14:49:11,750:INFO:plot_model() successfully completed......................................
2025-03-15 14:49:23,166:INFO:Initializing plot_model()
2025-03-15 14:49:23,168:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=ks, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:49:23,168:INFO:Checking exceptions
2025-03-15 14:49:23,172:INFO:Preloading libraries
2025-03-15 14:49:23,173:INFO:Copying training dataset
2025-03-15 14:49:23,173:INFO:Plot type: ks
2025-03-15 14:49:23,173:INFO:Generating predictions / predict_proba on X_test
2025-03-15 14:49:24,767:INFO:Initializing plot_model()
2025-03-15 14:49:24,768:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=gain, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:49:24,768:INFO:Checking exceptions
2025-03-15 14:49:24,772:INFO:Preloading libraries
2025-03-15 14:49:24,773:INFO:Copying training dataset
2025-03-15 14:49:24,773:INFO:Plot type: gain
2025-03-15 14:49:24,774:INFO:Generating predictions / predict_proba on X_test
2025-03-15 14:49:26,764:INFO:Initializing plot_model()
2025-03-15 14:49:26,765:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=lift, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:49:26,766:INFO:Checking exceptions
2025-03-15 14:49:26,771:INFO:Preloading libraries
2025-03-15 14:49:26,772:INFO:Copying training dataset
2025-03-15 14:49:26,772:INFO:Plot type: lift
2025-03-15 14:49:26,773:INFO:Generating predictions / predict_proba on X_test
2025-03-15 14:49:27,633:INFO:Initializing plot_model()
2025-03-15 14:49:27,635:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=boundary, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:49:27,635:INFO:Checking exceptions
2025-03-15 14:49:27,639:INFO:Preloading libraries
2025-03-15 14:49:27,640:INFO:Copying training dataset
2025-03-15 14:49:27,640:INFO:Plot type: boundary
2025-03-15 14:49:27,717:INFO:Fitting StandardScaler()
2025-03-15 14:49:27,724:INFO:Fitting PCA()
2025-03-15 14:49:27,796:INFO:Fitting Model
2025-03-15 14:49:27,981:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\yellowbrick\contrib\classifier\boundaries.py:467: UserWarning: You passed a edgecolor/edgecolors ('black') for an unfilled marker ('+').  Matplotlib is ignoring the edgecolor in favor of the facecolor.  This behavior may change in the future.
  self.ax.scatter(

2025-03-15 14:49:29,680:INFO:Visual Rendered Successfully
2025-03-15 14:49:30,026:INFO:plot_model() successfully completed......................................
2025-03-15 14:49:30,045:INFO:Initializing plot_model()
2025-03-15 14:49:30,046:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=feature_all, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:49:30,046:INFO:Checking exceptions
2025-03-15 14:49:30,049:INFO:Preloading libraries
2025-03-15 14:49:30,049:INFO:Copying training dataset
2025-03-15 14:49:30,050:INFO:Plot type: feature_all
2025-03-15 14:49:30,087:WARNING:No coef_ found. Trying feature_importances_
2025-03-15 14:49:30,353:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\matplotlib\_tight_bbox.py:67: RuntimeWarning: divide by zero encountered in scalar divide
  fig.patch.set_bounds(x0 / w1, y0 / h1,

2025-03-15 14:49:30,353:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\matplotlib\_tight_bbox.py:68: RuntimeWarning: divide by zero encountered in scalar divide
  fig.bbox.width / w1, fig.bbox.height / h1)

2025-03-15 14:49:30,394:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\matplotlib\patches.py:739: RuntimeWarning: invalid value encountered in scalar add
  y1 = self.convert_yunits(self._y0 + self._height)

2025-03-15 14:49:30,426:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\matplotlib\transforms.py:2050: RuntimeWarning: invalid value encountered in scalar add
  self._mtx[1, 2] += ty

2025-03-15 14:49:30,530:INFO:Visual Rendered Successfully
2025-03-15 14:49:30,781:INFO:plot_model() successfully completed......................................
2025-03-15 14:49:35,100:INFO:Initializing plot_model()
2025-03-15 14:49:35,100:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002B534ABCD10>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5687, splitter='best'), plot=feature, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-15 14:49:35,101:INFO:Checking exceptions
2025-03-15 14:49:35,107:INFO:Preloading libraries
2025-03-15 14:49:35,108:INFO:Copying training dataset
2025-03-15 14:49:35,109:INFO:Plot type: feature
2025-03-15 14:49:35,110:WARNING:No coef_ found. Trying feature_importances_
2025-03-15 14:49:35,422:INFO:Visual Rendered Successfully
2025-03-15 14:49:36,109:INFO:plot_model() successfully completed......................................
2025-03-19 21:48:21,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-19 21:48:21,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-19 21:48:21,155:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-19 21:48:21,155:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-19 21:48:31,093:INFO:PyCaret ClassificationExperiment
2025-03-19 21:48:31,093:INFO:Logging name: clf-default-name
2025-03-19 21:48:31,093:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-19 21:48:31,093:INFO:version 3.3.2
2025-03-19 21:48:31,093:INFO:Initializing setup()
2025-03-19 21:48:31,093:INFO:self.USI: 1f90
2025-03-19 21:48:31,093:INFO:self._variable_keys: {'is_multiclass', 'data', '_ml_usecase', 'X_test', 'y_train', 'html_param', 'target_param', 'log_plots_param', 'memory', 'gpu_n_jobs_param', 'X_train', 'fold_groups_param', '_available_plots', 'pipeline', 'USI', 'fold_generator', 'fix_imbalance', 'exp_id', 'exp_name_log', 'n_jobs_param', 'idx', 'logging_param', 'fold_shuffle_param', 'y', 'seed', 'gpu_param', 'X', 'y_test'}
2025-03-19 21:48:31,094:INFO:Checking environment
2025-03-19 21:48:31,094:INFO:python_version: 3.11.7
2025-03-19 21:48:31,094:INFO:python_build: ('tags/v3.11.7:fa7a6f2', 'Dec  4 2023 19:24:49')
2025-03-19 21:48:31,094:INFO:machine: AMD64
2025-03-19 21:48:31,094:INFO:platform: Windows-10-10.0.22631-SP0
2025-03-19 21:48:31,103:INFO:Memory: svmem(total=7897944064, available=615055360, percent=92.2, used=7282888704, free=615055360)
2025-03-19 21:48:31,103:INFO:Physical Core: 4
2025-03-19 21:48:31,103:INFO:Logical Core: 8
2025-03-19 21:48:31,103:INFO:Checking libraries
2025-03-19 21:48:31,103:INFO:System:
2025-03-19 21:48:31,103:INFO:    python: 3.11.7 (tags/v3.11.7:fa7a6f2, Dec  4 2023, 19:24:49) [MSC v.1937 64 bit (AMD64)]
2025-03-19 21:48:31,103:INFO:executable: c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\python.exe
2025-03-19 21:48:31,103:INFO:   machine: Windows-10-10.0.22631-SP0
2025-03-19 21:48:31,103:INFO:PyCaret required dependencies:
2025-03-19 21:48:37,039:INFO:                 pip: 24.0
2025-03-19 21:48:37,039:INFO:          setuptools: 75.8.0
2025-03-19 21:48:37,039:INFO:             pycaret: 3.3.2
2025-03-19 21:48:37,039:INFO:             IPython: 8.23.0
2025-03-19 21:48:37,040:INFO:          ipywidgets: 8.1.2
2025-03-19 21:48:37,040:INFO:                tqdm: 4.67.1
2025-03-19 21:48:37,040:INFO:               numpy: 1.26.4
2025-03-19 21:48:37,041:INFO:              pandas: 2.1.4
2025-03-19 21:48:37,041:INFO:              jinja2: 3.1.3
2025-03-19 21:48:37,041:INFO:               scipy: 1.11.4
2025-03-19 21:48:37,041:INFO:              joblib: 1.3.2
2025-03-19 21:48:37,041:INFO:             sklearn: 1.4.2
2025-03-19 21:48:37,041:INFO:                pyod: 1.1.3
2025-03-19 21:48:37,041:INFO:            imblearn: 0.12.2
2025-03-19 21:48:37,041:INFO:   category_encoders: 2.6.3
2025-03-19 21:48:37,041:INFO:            lightgbm: 4.3.0
2025-03-19 21:48:37,042:INFO:               numba: 0.59.1
2025-03-19 21:48:37,042:INFO:            requests: 2.32.3
2025-03-19 21:48:37,042:INFO:          matplotlib: 3.7.5
2025-03-19 21:48:37,042:INFO:          scikitplot: 0.3.7
2025-03-19 21:48:37,042:INFO:         yellowbrick: 1.5
2025-03-19 21:48:37,042:INFO:              plotly: 5.20.0
2025-03-19 21:48:37,042:INFO:    plotly-resampler: Not installed
2025-03-19 21:48:37,042:INFO:             kaleido: 0.2.1
2025-03-19 21:48:37,042:INFO:           schemdraw: 0.15
2025-03-19 21:48:37,042:INFO:         statsmodels: 0.14.1
2025-03-19 21:48:37,042:INFO:              sktime: 0.26.0
2025-03-19 21:48:37,043:INFO:               tbats: 1.1.3
2025-03-19 21:48:37,043:INFO:            pmdarima: 2.0.4
2025-03-19 21:48:37,043:INFO:              psutil: 5.9.8
2025-03-19 21:48:37,043:INFO:          markupsafe: 2.1.5
2025-03-19 21:48:37,043:INFO:             pickle5: Not installed
2025-03-19 21:48:37,043:INFO:         cloudpickle: 3.0.0
2025-03-19 21:48:37,043:INFO:         deprecation: 2.1.0
2025-03-19 21:48:37,043:INFO:              xxhash: 3.4.1
2025-03-19 21:48:37,044:INFO:           wurlitzer: Not installed
2025-03-19 21:48:37,044:INFO:PyCaret optional dependencies:
2025-03-19 21:48:49,524:INFO:                shap: 0.44.1
2025-03-19 21:48:49,524:INFO:           interpret: 0.6.7
2025-03-19 21:48:49,524:INFO:                umap: 0.5.7
2025-03-19 21:48:49,524:INFO:     ydata_profiling: 4.7.0
2025-03-19 21:48:49,524:INFO:  explainerdashboard: 0.4.7
2025-03-19 21:48:49,524:INFO:             autoviz: Not installed
2025-03-19 21:48:49,524:INFO:           fairlearn: 0.7.0
2025-03-19 21:48:49,525:INFO:          deepchecks: Not installed
2025-03-19 21:48:49,525:INFO:             xgboost: 2.0.3
2025-03-19 21:48:49,525:INFO:            catboost: 1.2.7
2025-03-19 21:48:49,525:INFO:              kmodes: 0.12.2
2025-03-19 21:48:49,525:INFO:             mlxtend: 0.23.1
2025-03-19 21:48:49,525:INFO:       statsforecast: 1.5.0
2025-03-19 21:48:49,525:INFO:        tune_sklearn: Not installed
2025-03-19 21:48:49,525:INFO:                 ray: Not installed
2025-03-19 21:48:49,526:INFO:            hyperopt: 0.2.7
2025-03-19 21:48:49,526:INFO:              optuna: 3.6.1
2025-03-19 21:48:49,526:INFO:               skopt: 0.10.2
2025-03-19 21:48:49,526:INFO:              mlflow: 2.11.3
2025-03-19 21:48:49,526:INFO:              gradio: 5.7.0
2025-03-19 21:48:49,526:INFO:             fastapi: 0.115.5
2025-03-19 21:48:49,526:INFO:             uvicorn: 0.29.0
2025-03-19 21:48:49,526:INFO:              m2cgen: 0.10.0
2025-03-19 21:48:49,526:INFO:           evidently: 0.4.40
2025-03-19 21:48:49,526:INFO:               fugue: 0.8.7
2025-03-19 21:48:49,526:INFO:           streamlit: 1.33.0
2025-03-19 21:48:49,526:INFO:             prophet: Not installed
2025-03-19 21:48:49,526:INFO:None
2025-03-19 21:48:49,528:INFO:Set up data.
2025-03-19 21:48:49,560:INFO:Set up folding strategy.
2025-03-19 21:48:49,560:INFO:Set up train/test split.
2025-03-19 21:48:49,578:INFO:Set up index.
2025-03-19 21:48:49,580:INFO:Assigning column types.
2025-03-19 21:48:49,586:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-19 21:48:49,686:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-19 21:48:49,695:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-19 21:48:49,780:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-19 21:48:49,787:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-19 21:48:50,054:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-19 21:48:50,056:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-19 21:48:50,107:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-19 21:48:50,112:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-19 21:48:50,113:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-19 21:48:50,194:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-19 21:48:50,248:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-19 21:48:50,252:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-19 21:48:50,336:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-19 21:48:50,394:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-19 21:48:50,398:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-19 21:48:50,399:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-19 21:48:50,538:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-19 21:48:50,545:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-19 21:48:50,729:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-19 21:48:50,735:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-19 21:48:50,740:INFO:Preparing preprocessing pipeline...
2025-03-19 21:48:50,743:INFO:Set up label encoding.
2025-03-19 21:48:50,743:INFO:Set up simple imputation.
2025-03-19 21:48:50,749:INFO:Set up encoding of ordinal features.
2025-03-19 21:48:50,751:INFO:Set up encoding of categorical features.
2025-03-19 21:48:50,753:INFO:Set up column name cleaning.
2025-03-19 21:48:51,023:INFO:Finished creating preprocessing pipeline.
2025-03-19 21:48:51,057:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ARDIAN~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=Non...
                                    transformer=TargetEncoder(cols=['Minat dan '
                                                                    'Bakat',
                                                                    'Rencana '
                                                                    'Karir'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2025-03-19 21:48:51,057:INFO:Creating final display dataframe.
2025-03-19 21:48:51,688:INFO:Setup _display_container:                     Description  \
0                    Session id   
1                        Target   
2                   Target type   
3                Target mapping   
4           Original data shape   
5        Transformed data shape   
6   Transformed train set shape   
7    Transformed test set shape   
8              Numeric features   
9          Categorical features   
10                   Preprocess   
11              Imputation type   
12           Numeric imputation   
13       Categorical imputation   
14     Maximum one-hot encoding   
15              Encoding method   
16               Fold Generator   
17                  Fold Number   
18                     CPU Jobs   
19                      Use GPU   
20               Log Experiment   
21              Experiment Name   
22                          USI   

                                                Value  
0                                                4824  
1                                       Program Studi  
2                                          Multiclass  
3   Sains Data Terapan: 0, Sistem Pembangkitan Ene...  
4                                           (1000, 6)  
5                                          (1000, 10)  
6                                           (700, 10)  
7                                           (300, 10)  
8                                                   1  
9                                                   4  
10                                               True  
11                                             simple  
12                                               mean  
13                                               mode  
14                                                 25  
15                                               None  
16                                    StratifiedKFold  
17                                                 10  
18                                                 -1  
19                                              False  
20                                              False  
21                                   clf-default-name  
22                                               1f90  
2025-03-19 21:48:51,878:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-19 21:48:51,882:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-19 21:48:52,017:INFO:Soft dependency imported: xgboost: 2.0.3
2025-03-19 21:48:52,022:INFO:Soft dependency imported: catboost: 1.2.7
2025-03-19 21:48:52,024:INFO:setup() successfully completed in 20.98s...............
2025-03-19 21:48:52,024:INFO:Initializing compare_models()
2025-03-19 21:48:52,025:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-03-19 21:48:52,025:INFO:Checking exceptions
2025-03-19 21:48:52,056:INFO:Preparing display monitor
2025-03-19 21:48:52,115:INFO:Initializing Logistic Regression
2025-03-19 21:48:52,116:INFO:Total runtime is 1.659393310546875e-05 minutes
2025-03-19 21:48:52,128:INFO:SubProcess create_model() called ==================================
2025-03-19 21:48:52,128:INFO:Initializing create_model()
2025-03-19 21:48:52,129:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:48:52,129:INFO:Checking exceptions
2025-03-19 21:48:52,130:INFO:Importing libraries
2025-03-19 21:48:52,130:INFO:Copying training dataset
2025-03-19 21:48:52,141:INFO:Defining folds
2025-03-19 21:48:52,142:INFO:Declaring metric variables
2025-03-19 21:48:52,151:INFO:Importing untrained model
2025-03-19 21:48:52,162:INFO:Logistic Regression Imported successfully
2025-03-19 21:48:52,180:INFO:Starting cross validation
2025-03-19 21:48:52,187:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:49:13,783:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-19 21:49:14,166:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:14,209:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:14,215:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:14,218:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:14,222:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:15,108:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-19 21:49:15,190:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:15,193:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:15,198:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:15,205:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:15,846:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-19 21:49:15,892:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:15,893:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:15,898:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:15,900:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:15,903:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:16,254:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-19 21:49:16,314:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:16,318:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:16,322:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:16,327:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:16,693:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-19 21:49:16,763:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:16,778:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:16,788:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:16,791:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:16,797:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,483:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-19 21:49:17,536:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:17,542:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,547:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,550:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:17,552:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,566:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-19 21:49:17,603:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-19 21:49:17,626:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:17,630:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,635:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,637:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:17,642:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,653:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:17,658:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,662:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,666:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,683:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-19 21:49:17,699:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-03-19 21:49:17,743:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:17,747:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,752:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,755:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,763:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:17,768:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,774:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,778:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:17,812:INFO:Calculating mean and std
2025-03-19 21:49:17,843:INFO:Creating metrics dataframe
2025-03-19 21:49:17,880:INFO:Uploading results into container
2025-03-19 21:49:17,884:INFO:Uploading model into container now
2025-03-19 21:49:17,888:INFO:_master_model_container: 1
2025-03-19 21:49:17,888:INFO:_display_container: 2
2025-03-19 21:49:17,893:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4824, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-19 21:49:17,894:INFO:create_model() successfully completed......................................
2025-03-19 21:49:18,546:INFO:SubProcess create_model() end ==================================
2025-03-19 21:49:18,546:INFO:Creating metrics dataframe
2025-03-19 21:49:18,556:INFO:Initializing K Neighbors Classifier
2025-03-19 21:49:18,557:INFO:Total runtime is 0.4406981507937114 minutes
2025-03-19 21:49:18,560:INFO:SubProcess create_model() called ==================================
2025-03-19 21:49:18,561:INFO:Initializing create_model()
2025-03-19 21:49:18,561:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:49:18,563:INFO:Checking exceptions
2025-03-19 21:49:18,563:INFO:Importing libraries
2025-03-19 21:49:18,563:INFO:Copying training dataset
2025-03-19 21:49:18,570:INFO:Defining folds
2025-03-19 21:49:18,570:INFO:Declaring metric variables
2025-03-19 21:49:18,573:INFO:Importing untrained model
2025-03-19 21:49:18,581:INFO:K Neighbors Classifier Imported successfully
2025-03-19 21:49:18,592:INFO:Starting cross validation
2025-03-19 21:49:18,599:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:49:19,100:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,109:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,110:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,113:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,119:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,122:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:19,128:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,130:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,139:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,167:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,176:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,177:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,179:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,183:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,184:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,204:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,214:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,221:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,221:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,225:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,226:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,227:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,228:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:19,232:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,232:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,445:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,448:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,448:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,450:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,450:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,454:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:19,464:INFO:Calculating mean and std
2025-03-19 21:49:19,466:INFO:Creating metrics dataframe
2025-03-19 21:49:19,467:INFO:Uploading results into container
2025-03-19 21:49:19,467:INFO:Uploading model into container now
2025-03-19 21:49:19,468:INFO:_master_model_container: 2
2025-03-19 21:49:19,468:INFO:_display_container: 2
2025-03-19 21:49:19,468:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-03-19 21:49:19,468:INFO:create_model() successfully completed......................................
2025-03-19 21:49:19,741:INFO:SubProcess create_model() end ==================================
2025-03-19 21:49:19,741:INFO:Creating metrics dataframe
2025-03-19 21:49:19,754:INFO:Initializing Naive Bayes
2025-03-19 21:49:19,754:INFO:Total runtime is 0.46064176559448244 minutes
2025-03-19 21:49:19,762:INFO:SubProcess create_model() called ==================================
2025-03-19 21:49:19,763:INFO:Initializing create_model()
2025-03-19 21:49:19,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:49:19,763:INFO:Checking exceptions
2025-03-19 21:49:19,764:INFO:Importing libraries
2025-03-19 21:49:19,764:INFO:Copying training dataset
2025-03-19 21:49:19,773:INFO:Defining folds
2025-03-19 21:49:19,773:INFO:Declaring metric variables
2025-03-19 21:49:19,781:INFO:Importing untrained model
2025-03-19 21:49:19,788:INFO:Naive Bayes Imported successfully
2025-03-19 21:49:19,803:INFO:Starting cross validation
2025-03-19 21:49:19,807:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:49:20,067:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,071:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,074:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,079:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,083:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,085:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:20,088:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,116:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,122:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,124:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:20,125:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,127:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,137:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,143:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,145:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,147:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:20,152:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,158:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,160:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,163:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,172:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,178:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,187:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,191:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:20,212:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,244:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,249:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,251:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:20,253:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,281:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,281:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,283:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,283:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,284:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:20,286:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,286:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,302:INFO:Calculating mean and std
2025-03-19 21:49:20,303:INFO:Creating metrics dataframe
2025-03-19 21:49:20,305:INFO:Uploading results into container
2025-03-19 21:49:20,306:INFO:Uploading model into container now
2025-03-19 21:49:20,306:INFO:_master_model_container: 3
2025-03-19 21:49:20,306:INFO:_display_container: 2
2025-03-19 21:49:20,307:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-03-19 21:49:20,307:INFO:create_model() successfully completed......................................
2025-03-19 21:49:20,607:INFO:SubProcess create_model() end ==================================
2025-03-19 21:49:20,607:INFO:Creating metrics dataframe
2025-03-19 21:49:20,620:INFO:Initializing Decision Tree Classifier
2025-03-19 21:49:20,621:INFO:Total runtime is 0.47510200341542563 minutes
2025-03-19 21:49:20,629:INFO:SubProcess create_model() called ==================================
2025-03-19 21:49:20,629:INFO:Initializing create_model()
2025-03-19 21:49:20,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:49:20,629:INFO:Checking exceptions
2025-03-19 21:49:20,629:INFO:Importing libraries
2025-03-19 21:49:20,631:INFO:Copying training dataset
2025-03-19 21:49:20,638:INFO:Defining folds
2025-03-19 21:49:20,639:INFO:Declaring metric variables
2025-03-19 21:49:20,648:INFO:Importing untrained model
2025-03-19 21:49:20,658:INFO:Decision Tree Classifier Imported successfully
2025-03-19 21:49:20,680:INFO:Starting cross validation
2025-03-19 21:49:20,685:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:49:20,954:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,958:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,963:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,981:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,986:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,989:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,991:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,993:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,994:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,996:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,996:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,998:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:20,998:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,000:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,002:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,003:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,003:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,006:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,017:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,023:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,026:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,045:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,049:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,052:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,143:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,145:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,149:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,151:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,155:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,157:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,165:INFO:Calculating mean and std
2025-03-19 21:49:21,166:INFO:Creating metrics dataframe
2025-03-19 21:49:21,169:INFO:Uploading results into container
2025-03-19 21:49:21,169:INFO:Uploading model into container now
2025-03-19 21:49:21,170:INFO:_master_model_container: 4
2025-03-19 21:49:21,170:INFO:_display_container: 2
2025-03-19 21:49:21,170:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best')
2025-03-19 21:49:21,170:INFO:create_model() successfully completed......................................
2025-03-19 21:49:21,376:INFO:SubProcess create_model() end ==================================
2025-03-19 21:49:21,376:INFO:Creating metrics dataframe
2025-03-19 21:49:21,384:INFO:Initializing SVM - Linear Kernel
2025-03-19 21:49:21,384:INFO:Total runtime is 0.4878235340118408 minutes
2025-03-19 21:49:21,388:INFO:SubProcess create_model() called ==================================
2025-03-19 21:49:21,388:INFO:Initializing create_model()
2025-03-19 21:49:21,389:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:49:21,389:INFO:Checking exceptions
2025-03-19 21:49:21,389:INFO:Importing libraries
2025-03-19 21:49:21,389:INFO:Copying training dataset
2025-03-19 21:49:21,392:INFO:Defining folds
2025-03-19 21:49:21,392:INFO:Declaring metric variables
2025-03-19 21:49:21,396:INFO:Importing untrained model
2025-03-19 21:49:21,400:INFO:SVM - Linear Kernel Imported successfully
2025-03-19 21:49:21,407:INFO:Starting cross validation
2025-03-19 21:49:21,410:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:49:21,653:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:21,653:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:21,656:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,656:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:21,657:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,658:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:21,659:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,660:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,661:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,661:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,662:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:21,662:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:21,663:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,663:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:21,664:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,665:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,665:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:21,666:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,667:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,668:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,668:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:21,672:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,676:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:21,678:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,726:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:21,728:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,733:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,736:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:21,738:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,752:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:21,755:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,759:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,760:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:21,763:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,768:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:21,769:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,773:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,775:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:21,776:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,809:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:21,810:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,814:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,815:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:21,816:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,831:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:21,833:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,835:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,836:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:21,836:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:21,852:INFO:Calculating mean and std
2025-03-19 21:49:21,853:INFO:Creating metrics dataframe
2025-03-19 21:49:21,854:INFO:Uploading results into container
2025-03-19 21:49:21,856:INFO:Uploading model into container now
2025-03-19 21:49:21,856:INFO:_master_model_container: 5
2025-03-19 21:49:21,856:INFO:_display_container: 2
2025-03-19 21:49:21,856:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4824, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-03-19 21:49:21,857:INFO:create_model() successfully completed......................................
2025-03-19 21:49:22,112:INFO:SubProcess create_model() end ==================================
2025-03-19 21:49:22,112:INFO:Creating metrics dataframe
2025-03-19 21:49:22,117:INFO:Initializing Ridge Classifier
2025-03-19 21:49:22,118:INFO:Total runtime is 0.5000545899073283 minutes
2025-03-19 21:49:22,120:INFO:SubProcess create_model() called ==================================
2025-03-19 21:49:22,120:INFO:Initializing create_model()
2025-03-19 21:49:22,122:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:49:22,122:INFO:Checking exceptions
2025-03-19 21:49:22,122:INFO:Importing libraries
2025-03-19 21:49:22,122:INFO:Copying training dataset
2025-03-19 21:49:22,127:INFO:Defining folds
2025-03-19 21:49:22,127:INFO:Declaring metric variables
2025-03-19 21:49:22,129:INFO:Importing untrained model
2025-03-19 21:49:22,134:INFO:Ridge Classifier Imported successfully
2025-03-19 21:49:22,139:INFO:Starting cross validation
2025-03-19 21:49:22,141:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:49:22,323:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:22,323:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:22,324:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,327:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:22,329:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,330:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:22,331:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:22,331:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,333:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,333:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,333:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,335:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,336:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,337:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,337:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:22,339:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:22,339:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:22,341:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,341:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,342:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,342:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,343:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:22,344:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,345:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,346:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:22,349:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,350:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,351:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:22,352:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:22,353:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,354:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,357:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,360:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:22,364:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,368:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:22,372:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,378:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,380:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:22,383:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,459:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:22,461:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,461:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,463:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,463:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,464:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:22,464:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:22,465:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,465:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:22,478:INFO:Calculating mean and std
2025-03-19 21:49:22,479:INFO:Creating metrics dataframe
2025-03-19 21:49:22,481:INFO:Uploading results into container
2025-03-19 21:49:22,481:INFO:Uploading model into container now
2025-03-19 21:49:22,482:INFO:_master_model_container: 6
2025-03-19 21:49:22,482:INFO:_display_container: 2
2025-03-19 21:49:22,482:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4824, solver='auto',
                tol=0.0001)
2025-03-19 21:49:22,482:INFO:create_model() successfully completed......................................
2025-03-19 21:49:22,661:INFO:SubProcess create_model() end ==================================
2025-03-19 21:49:22,661:INFO:Creating metrics dataframe
2025-03-19 21:49:22,668:INFO:Initializing Random Forest Classifier
2025-03-19 21:49:22,669:INFO:Total runtime is 0.5092400153477987 minutes
2025-03-19 21:49:22,671:INFO:SubProcess create_model() called ==================================
2025-03-19 21:49:22,671:INFO:Initializing create_model()
2025-03-19 21:49:22,671:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:49:22,671:INFO:Checking exceptions
2025-03-19 21:49:22,672:INFO:Importing libraries
2025-03-19 21:49:22,672:INFO:Copying training dataset
2025-03-19 21:49:22,676:INFO:Defining folds
2025-03-19 21:49:22,676:INFO:Declaring metric variables
2025-03-19 21:49:22,679:INFO:Importing untrained model
2025-03-19 21:49:22,685:INFO:Random Forest Classifier Imported successfully
2025-03-19 21:49:22,692:INFO:Starting cross validation
2025-03-19 21:49:22,695:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:49:23,338:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,342:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,344:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:23,346:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,348:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,351:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,351:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,352:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,354:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,357:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,357:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,359:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,360:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,361:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,364:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,366:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,408:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,411:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,415:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,431:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,434:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,435:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,436:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,437:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,440:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,658:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,662:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,662:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,664:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,664:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,666:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:23,673:INFO:Calculating mean and std
2025-03-19 21:49:23,674:INFO:Creating metrics dataframe
2025-03-19 21:49:23,675:INFO:Uploading results into container
2025-03-19 21:49:23,675:INFO:Uploading model into container now
2025-03-19 21:49:23,677:INFO:_master_model_container: 7
2025-03-19 21:49:23,677:INFO:_display_container: 2
2025-03-19 21:49:23,677:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=4824, verbose=0,
                       warm_start=False)
2025-03-19 21:49:23,678:INFO:create_model() successfully completed......................................
2025-03-19 21:49:23,857:INFO:SubProcess create_model() end ==================================
2025-03-19 21:49:23,857:INFO:Creating metrics dataframe
2025-03-19 21:49:23,865:INFO:Initializing Quadratic Discriminant Analysis
2025-03-19 21:49:23,865:INFO:Total runtime is 0.5291630347569785 minutes
2025-03-19 21:49:23,869:INFO:SubProcess create_model() called ==================================
2025-03-19 21:49:23,869:INFO:Initializing create_model()
2025-03-19 21:49:23,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:49:23,870:INFO:Checking exceptions
2025-03-19 21:49:23,870:INFO:Importing libraries
2025-03-19 21:49:23,870:INFO:Copying training dataset
2025-03-19 21:49:23,872:INFO:Defining folds
2025-03-19 21:49:23,872:INFO:Declaring metric variables
2025-03-19 21:49:23,877:INFO:Importing untrained model
2025-03-19 21:49:23,882:INFO:Quadratic Discriminant Analysis Imported successfully
2025-03-19 21:49:23,889:INFO:Starting cross validation
2025-03-19 21:49:23,891:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:49:24,047:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-19 21:49:24,047:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-19 21:49:24,047:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-19 21:49:24,047:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-19 21:49:24,047:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-19 21:49:24,057:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-19 21:49:24,058:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-19 21:49:24,092:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,093:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,094:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,094:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,096:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,099:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,100:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,101:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,101:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

c, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,102:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,102:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,103:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,103:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,103:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,105:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,105:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,107:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,107:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,107:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,107:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,109:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,110:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,110:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,111:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,112:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,113:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,116:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,116:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,119:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,120:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,121:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,123:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,124:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,125:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,126:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,129:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,168:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-19 21:49:24,169:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-03-19 21:49:24,192:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,195:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,196:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,196:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,198:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,198:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,199:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,199:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,200:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,202:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,212:INFO:Calculating mean and std
2025-03-19 21:49:24,213:INFO:Creating metrics dataframe
2025-03-19 21:49:24,215:INFO:Uploading results into container
2025-03-19 21:49:24,216:INFO:Uploading model into container now
2025-03-19 21:49:24,216:INFO:_master_model_container: 8
2025-03-19 21:49:24,216:INFO:_display_container: 2
2025-03-19 21:49:24,216:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-03-19 21:49:24,217:INFO:create_model() successfully completed......................................
2025-03-19 21:49:24,387:INFO:SubProcess create_model() end ==================================
2025-03-19 21:49:24,387:INFO:Creating metrics dataframe
2025-03-19 21:49:24,395:INFO:Initializing Ada Boost Classifier
2025-03-19 21:49:24,395:INFO:Total runtime is 0.537997051080068 minutes
2025-03-19 21:49:24,399:INFO:SubProcess create_model() called ==================================
2025-03-19 21:49:24,399:INFO:Initializing create_model()
2025-03-19 21:49:24,399:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:49:24,399:INFO:Checking exceptions
2025-03-19 21:49:24,399:INFO:Importing libraries
2025-03-19 21:49:24,399:INFO:Copying training dataset
2025-03-19 21:49:24,403:INFO:Defining folds
2025-03-19 21:49:24,403:INFO:Declaring metric variables
2025-03-19 21:49:24,407:INFO:Importing untrained model
2025-03-19 21:49:24,411:INFO:Ada Boost Classifier Imported successfully
2025-03-19 21:49:24,419:INFO:Starting cross validation
2025-03-19 21:49:24,421:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:49:24,590:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-19 21:49:24,591:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-19 21:49:24,591:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-19 21:49:24,591:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-19 21:49:24,596:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-19 21:49:24,802:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,804:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,808:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,810:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,811:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,814:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,814:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,815:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,816:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,817:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,817:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,819:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,821:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,821:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,822:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,824:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,824:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,825:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,825:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,827:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,827:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,829:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,829:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,825:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,830:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:24,831:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,832:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,835:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,835:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,835:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,837:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,837:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,837:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,839:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,840:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,841:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,843:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,843:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:24,846:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,847:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:24,895:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-03-19 21:49:25,029:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:25,032:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:25,035:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:25,036:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:25,037:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:25,039:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:25,040:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:25,044:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:25,045:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:25,046:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:25,058:INFO:Calculating mean and std
2025-03-19 21:49:25,059:INFO:Creating metrics dataframe
2025-03-19 21:49:25,061:INFO:Uploading results into container
2025-03-19 21:49:25,061:INFO:Uploading model into container now
2025-03-19 21:49:25,062:INFO:_master_model_container: 9
2025-03-19 21:49:25,062:INFO:_display_container: 2
2025-03-19 21:49:25,062:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4824)
2025-03-19 21:49:25,063:INFO:create_model() successfully completed......................................
2025-03-19 21:49:25,248:INFO:SubProcess create_model() end ==================================
2025-03-19 21:49:25,250:INFO:Creating metrics dataframe
2025-03-19 21:49:25,257:INFO:Initializing Gradient Boosting Classifier
2025-03-19 21:49:25,257:INFO:Total runtime is 0.5523629148801168 minutes
2025-03-19 21:49:25,260:INFO:SubProcess create_model() called ==================================
2025-03-19 21:49:25,260:INFO:Initializing create_model()
2025-03-19 21:49:25,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:49:25,260:INFO:Checking exceptions
2025-03-19 21:49:25,260:INFO:Importing libraries
2025-03-19 21:49:25,261:INFO:Copying training dataset
2025-03-19 21:49:25,264:INFO:Defining folds
2025-03-19 21:49:25,264:INFO:Declaring metric variables
2025-03-19 21:49:25,268:INFO:Importing untrained model
2025-03-19 21:49:25,273:INFO:Gradient Boosting Classifier Imported successfully
2025-03-19 21:49:25,280:INFO:Starting cross validation
2025-03-19 21:49:25,282:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:49:27,803:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:27,806:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,807:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:27,810:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,810:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,814:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,824:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,826:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,830:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:27,832:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,835:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,839:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,844:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:27,847:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,851:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,856:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,924:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:27,928:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,930:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:27,932:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,934:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,937:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,937:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:27,940:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,939:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,941:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,944:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,947:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,957:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:27,961:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,964:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:27,967:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,317:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:29,319:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,321:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,323:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,326:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:29,327:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,330:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,331:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,336:INFO:Calculating mean and std
2025-03-19 21:49:29,350:INFO:Creating metrics dataframe
2025-03-19 21:49:29,352:INFO:Uploading results into container
2025-03-19 21:49:29,353:INFO:Uploading model into container now
2025-03-19 21:49:29,353:INFO:_master_model_container: 10
2025-03-19 21:49:29,354:INFO:_display_container: 2
2025-03-19 21:49:29,354:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4824, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-03-19 21:49:29,354:INFO:create_model() successfully completed......................................
2025-03-19 21:49:29,538:INFO:SubProcess create_model() end ==================================
2025-03-19 21:49:29,539:INFO:Creating metrics dataframe
2025-03-19 21:49:29,546:INFO:Initializing Linear Discriminant Analysis
2025-03-19 21:49:29,546:INFO:Total runtime is 0.6238442063331604 minutes
2025-03-19 21:49:29,548:INFO:SubProcess create_model() called ==================================
2025-03-19 21:49:29,548:INFO:Initializing create_model()
2025-03-19 21:49:29,550:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:49:29,550:INFO:Checking exceptions
2025-03-19 21:49:29,550:INFO:Importing libraries
2025-03-19 21:49:29,550:INFO:Copying training dataset
2025-03-19 21:49:29,553:INFO:Defining folds
2025-03-19 21:49:29,553:INFO:Declaring metric variables
2025-03-19 21:49:29,556:INFO:Importing untrained model
2025-03-19 21:49:29,561:INFO:Linear Discriminant Analysis Imported successfully
2025-03-19 21:49:29,567:INFO:Starting cross validation
2025-03-19 21:49:29,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:49:29,736:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:29,738:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,742:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,744:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:29,747:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,749:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:29,751:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,754:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:29,754:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:29,755:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,756:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,758:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,758:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:29,763:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,764:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:29,765:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,766:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,766:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:29,768:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:29,770:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:29,769:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,772:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:29,772:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,773:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:29,773:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,773:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,774:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,776:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,778:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,779:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,779:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,780:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:29,781:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,783:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,784:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,784:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,852:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:29,854:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,856:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,857:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-03-19 21:49:29,857:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:29,858:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,858:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,860:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,862:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:49:29,863:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:29,875:INFO:Calculating mean and std
2025-03-19 21:49:29,876:INFO:Creating metrics dataframe
2025-03-19 21:49:29,877:INFO:Uploading results into container
2025-03-19 21:49:29,878:INFO:Uploading model into container now
2025-03-19 21:49:29,878:INFO:_master_model_container: 11
2025-03-19 21:49:29,879:INFO:_display_container: 2
2025-03-19 21:49:29,879:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-03-19 21:49:29,879:INFO:create_model() successfully completed......................................
2025-03-19 21:49:30,052:INFO:SubProcess create_model() end ==================================
2025-03-19 21:49:30,052:INFO:Creating metrics dataframe
2025-03-19 21:49:30,059:INFO:Initializing Extra Trees Classifier
2025-03-19 21:49:30,062:INFO:Total runtime is 0.632448387145996 minutes
2025-03-19 21:49:30,065:INFO:SubProcess create_model() called ==================================
2025-03-19 21:49:30,065:INFO:Initializing create_model()
2025-03-19 21:49:30,065:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:49:30,065:INFO:Checking exceptions
2025-03-19 21:49:30,066:INFO:Importing libraries
2025-03-19 21:49:30,066:INFO:Copying training dataset
2025-03-19 21:49:30,069:INFO:Defining folds
2025-03-19 21:49:30,070:INFO:Declaring metric variables
2025-03-19 21:49:30,075:INFO:Importing untrained model
2025-03-19 21:49:30,079:INFO:Extra Trees Classifier Imported successfully
2025-03-19 21:49:30,089:INFO:Starting cross validation
2025-03-19 21:49:30,091:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:49:30,541:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,546:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,549:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,558:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,562:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,566:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,594:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,598:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,602:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,621:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,631:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,634:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,638:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,642:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,642:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,655:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,658:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,663:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,696:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,699:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,703:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,714:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,717:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,719:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,895:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,898:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,900:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,901:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,903:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,906:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:30,918:INFO:Calculating mean and std
2025-03-19 21:49:30,919:INFO:Creating metrics dataframe
2025-03-19 21:49:30,922:INFO:Uploading results into container
2025-03-19 21:49:30,922:INFO:Uploading model into container now
2025-03-19 21:49:30,924:INFO:_master_model_container: 12
2025-03-19 21:49:30,924:INFO:_display_container: 2
2025-03-19 21:49:30,925:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4824, verbose=0,
                     warm_start=False)
2025-03-19 21:49:30,925:INFO:create_model() successfully completed......................................
2025-03-19 21:49:31,109:INFO:SubProcess create_model() end ==================================
2025-03-19 21:49:31,109:INFO:Creating metrics dataframe
2025-03-19 21:49:31,119:INFO:Initializing Extreme Gradient Boosting
2025-03-19 21:49:31,119:INFO:Total runtime is 0.6500582814216613 minutes
2025-03-19 21:49:31,124:INFO:SubProcess create_model() called ==================================
2025-03-19 21:49:31,125:INFO:Initializing create_model()
2025-03-19 21:49:31,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:49:31,125:INFO:Checking exceptions
2025-03-19 21:49:31,125:INFO:Importing libraries
2025-03-19 21:49:31,125:INFO:Copying training dataset
2025-03-19 21:49:31,132:INFO:Defining folds
2025-03-19 21:49:31,132:INFO:Declaring metric variables
2025-03-19 21:49:31,135:INFO:Importing untrained model
2025-03-19 21:49:31,143:INFO:Extreme Gradient Boosting Imported successfully
2025-03-19 21:49:31,152:INFO:Starting cross validation
2025-03-19 21:49:31,155:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:49:31,798:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,802:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,803:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,806:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,807:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,811:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,816:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,819:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,822:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,823:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,824:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,825:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,826:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,827:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,829:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,829:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,830:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,830:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,832:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,836:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,836:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,840:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,840:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:31,844:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:32,021:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:32,024:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:32,026:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:32,036:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:32,038:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:32,040:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:32,047:INFO:Calculating mean and std
2025-03-19 21:49:32,048:INFO:Creating metrics dataframe
2025-03-19 21:49:32,050:INFO:Uploading results into container
2025-03-19 21:49:32,050:INFO:Uploading model into container now
2025-03-19 21:49:32,051:INFO:_master_model_container: 13
2025-03-19 21:49:32,051:INFO:_display_container: 2
2025-03-19 21:49:32,051:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-03-19 21:49:32,051:INFO:create_model() successfully completed......................................
2025-03-19 21:49:32,263:INFO:SubProcess create_model() end ==================================
2025-03-19 21:49:32,263:INFO:Creating metrics dataframe
2025-03-19 21:49:32,271:INFO:Initializing Light Gradient Boosting Machine
2025-03-19 21:49:32,271:INFO:Total runtime is 0.669268524646759 minutes
2025-03-19 21:49:32,287:INFO:SubProcess create_model() called ==================================
2025-03-19 21:49:32,287:INFO:Initializing create_model()
2025-03-19 21:49:32,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:49:32,288:INFO:Checking exceptions
2025-03-19 21:49:32,288:INFO:Importing libraries
2025-03-19 21:49:32,288:INFO:Copying training dataset
2025-03-19 21:49:32,291:INFO:Defining folds
2025-03-19 21:49:32,292:INFO:Declaring metric variables
2025-03-19 21:49:32,295:INFO:Importing untrained model
2025-03-19 21:49:32,299:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-19 21:49:32,306:INFO:Starting cross validation
2025-03-19 21:49:32,308:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:49:34,699:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:34,702:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:34,706:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:34,929:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:34,933:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:34,936:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,432:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,435:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,439:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,527:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,530:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,535:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,698:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,702:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,705:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,730:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,734:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,741:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,816:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,819:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,823:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,870:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,874:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:35,878:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:36,426:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:36,432:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:36,435:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:36,509:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:36,513:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:36,515:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:49:36,522:INFO:Calculating mean and std
2025-03-19 21:49:36,523:INFO:Creating metrics dataframe
2025-03-19 21:49:36,525:INFO:Uploading results into container
2025-03-19 21:49:36,527:INFO:Uploading model into container now
2025-03-19 21:49:36,528:INFO:_master_model_container: 14
2025-03-19 21:49:36,528:INFO:_display_container: 2
2025-03-19 21:49:36,529:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4824, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-19 21:49:36,529:INFO:create_model() successfully completed......................................
2025-03-19 21:49:36,724:INFO:SubProcess create_model() end ==================================
2025-03-19 21:49:36,724:INFO:Creating metrics dataframe
2025-03-19 21:49:36,732:INFO:Initializing CatBoost Classifier
2025-03-19 21:49:36,732:INFO:Total runtime is 0.7436091383298238 minutes
2025-03-19 21:49:36,735:INFO:SubProcess create_model() called ==================================
2025-03-19 21:49:36,736:INFO:Initializing create_model()
2025-03-19 21:49:36,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:49:36,736:INFO:Checking exceptions
2025-03-19 21:49:36,736:INFO:Importing libraries
2025-03-19 21:49:36,736:INFO:Copying training dataset
2025-03-19 21:49:36,740:INFO:Defining folds
2025-03-19 21:49:36,740:INFO:Declaring metric variables
2025-03-19 21:49:36,744:INFO:Importing untrained model
2025-03-19 21:49:36,755:INFO:CatBoost Classifier Imported successfully
2025-03-19 21:49:36,763:INFO:Starting cross validation
2025-03-19 21:49:36,765:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:50:06,613:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:06,619:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:06,631:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:06,975:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:06,982:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:06,988:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:07,487:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:07,500:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:07,505:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:07,949:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:07,955:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:07,964:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:08,003:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:08,011:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:08,017:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:08,384:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:08,390:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:08,397:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:08,869:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:08,880:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:08,885:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:08,980:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:08,987:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:08,991:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,027:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,030:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,032:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,093:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,095:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,097:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,102:INFO:Calculating mean and std
2025-03-19 21:50:18,103:INFO:Creating metrics dataframe
2025-03-19 21:50:18,105:INFO:Uploading results into container
2025-03-19 21:50:18,105:INFO:Uploading model into container now
2025-03-19 21:50:18,105:INFO:_master_model_container: 15
2025-03-19 21:50:18,105:INFO:_display_container: 2
2025-03-19 21:50:18,107:INFO:<catboost.core.CatBoostClassifier object at 0x0000020B1109FAD0>
2025-03-19 21:50:18,107:INFO:create_model() successfully completed......................................
2025-03-19 21:50:18,299:INFO:SubProcess create_model() end ==================================
2025-03-19 21:50:18,299:INFO:Creating metrics dataframe
2025-03-19 21:50:18,308:INFO:Initializing Dummy Classifier
2025-03-19 21:50:18,308:INFO:Total runtime is 1.4365576028823852 minutes
2025-03-19 21:50:18,311:INFO:SubProcess create_model() called ==================================
2025-03-19 21:50:18,311:INFO:Initializing create_model()
2025-03-19 21:50:18,311:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B11767310>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:50:18,312:INFO:Checking exceptions
2025-03-19 21:50:18,312:INFO:Importing libraries
2025-03-19 21:50:18,312:INFO:Copying training dataset
2025-03-19 21:50:18,316:INFO:Defining folds
2025-03-19 21:50:18,316:INFO:Declaring metric variables
2025-03-19 21:50:18,320:INFO:Importing untrained model
2025-03-19 21:50:18,325:INFO:Dummy Classifier Imported successfully
2025-03-19 21:50:18,331:INFO:Starting cross validation
2025-03-19 21:50:18,335:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:50:18,528:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,532:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,533:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:50:18,537:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,540:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,546:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,547:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,550:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,551:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,552:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:50:18,553:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,555:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,556:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,556:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:50:18,559:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,565:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,570:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,572:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:50:18,572:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,574:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,576:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,577:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:50:18,581:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,588:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,588:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,593:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,594:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,595:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:50:18,595:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:50:18,598:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,598:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,659:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,663:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,664:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:50:18,666:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,668:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,672:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,673:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-03-19 21:50:18,674:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:18,680:INFO:Calculating mean and std
2025-03-19 21:50:18,681:INFO:Creating metrics dataframe
2025-03-19 21:50:18,683:INFO:Uploading results into container
2025-03-19 21:50:18,683:INFO:Uploading model into container now
2025-03-19 21:50:18,683:INFO:_master_model_container: 16
2025-03-19 21:50:18,684:INFO:_display_container: 2
2025-03-19 21:50:18,684:INFO:DummyClassifier(constant=None, random_state=4824, strategy='prior')
2025-03-19 21:50:18,684:INFO:create_model() successfully completed......................................
2025-03-19 21:50:18,860:INFO:SubProcess create_model() end ==================================
2025-03-19 21:50:18,860:INFO:Creating metrics dataframe
2025-03-19 21:50:18,892:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2025-03-19 21:50:18,901:INFO:Initializing create_model()
2025-03-19 21:50:18,901:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4824, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:50:18,901:INFO:Checking exceptions
2025-03-19 21:50:18,905:INFO:Importing libraries
2025-03-19 21:50:18,905:INFO:Copying training dataset
2025-03-19 21:50:18,909:INFO:Defining folds
2025-03-19 21:50:18,909:INFO:Declaring metric variables
2025-03-19 21:50:18,909:INFO:Importing untrained model
2025-03-19 21:50:18,909:INFO:Declaring custom model
2025-03-19 21:50:18,910:INFO:Light Gradient Boosting Machine Imported successfully
2025-03-19 21:50:18,911:INFO:Cross validation set to False
2025-03-19 21:50:18,911:INFO:Fitting Model
2025-03-19 21:50:19,009:INFO:[LightGBM] [Warning] Found whitespace in feature_names, replace with underlines
2025-03-19 21:50:19,010:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000071 seconds.
2025-03-19 21:50:19,010:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-03-19 21:50:19,011:INFO:[LightGBM] [Info] Total Bins 325
2025-03-19 21:50:19,011:INFO:[LightGBM] [Info] Number of data points in the train set: 700, number of used features: 9
2025-03-19 21:50:19,011:INFO:[LightGBM] [Info] Start training from score -2.679879
2025-03-19 21:50:19,011:INFO:[LightGBM] [Info] Start training from score -2.316974
2025-03-19 21:50:19,011:INFO:[LightGBM] [Info] Start training from score -2.316974
2025-03-19 21:50:19,011:INFO:[LightGBM] [Info] Start training from score -2.599837
2025-03-19 21:50:19,011:INFO:[LightGBM] [Info] Start training from score -2.543747
2025-03-19 21:50:19,011:INFO:[LightGBM] [Info] Start training from score -2.639057
2025-03-19 21:50:19,012:INFO:[LightGBM] [Info] Start training from score -2.619255
2025-03-19 21:50:19,012:INFO:[LightGBM] [Info] Start training from score -2.440206
2025-03-19 21:50:19,012:INFO:[LightGBM] [Info] Start training from score -2.288400
2025-03-19 21:50:19,012:INFO:[LightGBM] [Info] Start training from score -2.562096
2025-03-19 21:50:19,012:INFO:[LightGBM] [Info] Start training from score -2.508029
2025-03-19 21:50:19,012:INFO:[LightGBM] [Info] Start training from score -2.407946
2025-03-19 21:50:19,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,012:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,023:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,027:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,027:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,034:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,039:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,039:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,039:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,039:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,041:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,042:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,042:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,042:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,045:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,045:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,045:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,046:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,046:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,046:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,046:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,049:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,049:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,054:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,054:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,057:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,057:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,057:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,057:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,059:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,059:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,059:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,060:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,060:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,060:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,061:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,061:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,062:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,062:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,064:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,072:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,073:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,073:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,073:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,073:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,074:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,076:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,076:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,077:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,077:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,077:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,078:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,078:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,078:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,079:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,079:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,079:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,079:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,079:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,079:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,080:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,081:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,082:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,083:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,084:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,084:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,084:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,084:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,086:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,087:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,087:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,087:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,087:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,088:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,089:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,090:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,092:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,093:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,094:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,094:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,095:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,096:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,097:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,098:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,099:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,100:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,102:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,103:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,104:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,105:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,106:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,108:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,109:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,110:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,111:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,112:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,113:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,113:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,113:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,114:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,115:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,117:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,118:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,119:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,120:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,122:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,123:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,124:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,125:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,126:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,127:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,128:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,129:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,133:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,133:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,133:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,133:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,134:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,135:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,136:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,138:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,139:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,141:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,142:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,144:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,145:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,146:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,149:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,150:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,151:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,152:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,153:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,154:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,155:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,157:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,158:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,160:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,161:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,162:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,163:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,166:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,167:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,168:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,170:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,185:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,192:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,193:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,194:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,196:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,197:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,201:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,202:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,203:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,212:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,213:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,214:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,215:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,223:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,228:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,229:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,230:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,234:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,239:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,241:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,249:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,251:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,257:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,260:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,263:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,264:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,265:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,266:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,266:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,267:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,268:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,270:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,272:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,273:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,273:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,275:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,280:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,281:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,282:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,283:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,284:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,288:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,295:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,296:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,297:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,298:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,299:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,303:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,304:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,304:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,311:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,311:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,312:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,316:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,321:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,321:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,321:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,328:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,330:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,339:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,342:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,344:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,349:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,352:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,354:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,356:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,360:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,366:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,371:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,373:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,383:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,385:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,387:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,389:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,391:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,393:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,399:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,401:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,405:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,409:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,414:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,415:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-03-19 21:50:19,496:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4824, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-19 21:50:19,497:INFO:create_model() successfully completed......................................
2025-03-19 21:50:19,715:INFO:_master_model_container: 16
2025-03-19 21:50:19,715:INFO:_display_container: 2
2025-03-19 21:50:19,716:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4824, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-03-19 21:50:19,716:INFO:compare_models() successfully completed......................................
2025-03-19 21:50:19,718:INFO:Initializing create_model()
2025-03-19 21:50:19,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:50:19,718:INFO:Checking exceptions
2025-03-19 21:50:19,735:INFO:Importing libraries
2025-03-19 21:50:19,735:INFO:Copying training dataset
2025-03-19 21:50:19,743:INFO:Defining folds
2025-03-19 21:50:19,744:INFO:Declaring metric variables
2025-03-19 21:50:19,747:INFO:Importing untrained model
2025-03-19 21:50:19,754:INFO:Decision Tree Classifier Imported successfully
2025-03-19 21:50:19,761:INFO:Starting cross validation
2025-03-19 21:50:19,765:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:50:20,049:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,054:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,058:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,067:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,071:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,074:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,077:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,079:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,081:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,081:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,086:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,100:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,100:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,107:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,111:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,112:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,115:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,134:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,144:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,149:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,153:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,154:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,157:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,164:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,227:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,231:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,234:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,247:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,250:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,252:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:20,265:INFO:Calculating mean and std
2025-03-19 21:50:20,265:INFO:Creating metrics dataframe
2025-03-19 21:50:20,269:INFO:Finalizing model
2025-03-19 21:50:20,330:INFO:Uploading results into container
2025-03-19 21:50:20,331:INFO:Uploading model into container now
2025-03-19 21:50:20,343:INFO:_master_model_container: 17
2025-03-19 21:50:20,344:INFO:_display_container: 3
2025-03-19 21:50:20,344:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best')
2025-03-19 21:50:20,344:INFO:create_model() successfully completed......................................
2025-03-19 21:50:20,551:INFO:Initializing tune_model()
2025-03-19 21:50:20,551:INFO:tune_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={})
2025-03-19 21:50:20,551:INFO:Checking exceptions
2025-03-19 21:50:20,564:INFO:Copying training dataset
2025-03-19 21:50:20,567:INFO:Checking base model
2025-03-19 21:50:20,568:INFO:Base model : Decision Tree Classifier
2025-03-19 21:50:20,573:INFO:Declaring metric variables
2025-03-19 21:50:20,577:INFO:Defining Hyperparameters
2025-03-19 21:50:20,817:INFO:Tuning with n_jobs=-1
2025-03-19 21:50:20,817:INFO:Initializing RandomizedSearchCV
2025-03-19 21:50:22,977:INFO:best_params: {'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 5, 'actual_estimator__min_impurity_decrease': 0.001, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 10, 'actual_estimator__criterion': 'entropy'}
2025-03-19 21:50:22,978:INFO:Hyperparameter search completed
2025-03-19 21:50:22,978:INFO:SubProcess create_model() called ==================================
2025-03-19 21:50:22,979:INFO:Initializing create_model()
2025-03-19 21:50:22,979:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000020B10E35750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'min_samples_split': 7, 'min_samples_leaf': 5, 'min_impurity_decrease': 0.001, 'max_features': 1.0, 'max_depth': 10, 'criterion': 'entropy'})
2025-03-19 21:50:22,979:INFO:Checking exceptions
2025-03-19 21:50:22,980:INFO:Importing libraries
2025-03-19 21:50:22,980:INFO:Copying training dataset
2025-03-19 21:50:22,984:INFO:Defining folds
2025-03-19 21:50:22,985:INFO:Declaring metric variables
2025-03-19 21:50:22,987:INFO:Importing untrained model
2025-03-19 21:50:22,988:INFO:Declaring custom model
2025-03-19 21:50:22,992:INFO:Decision Tree Classifier Imported successfully
2025-03-19 21:50:22,999:INFO:Starting cross validation
2025-03-19 21:50:23,001:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:50:23,189:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,193:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,196:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,197:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,204:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,204:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,211:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,215:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,219:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,222:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,224:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,225:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,226:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,227:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,229:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,229:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,232:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,232:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,237:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,240:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,255:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,258:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,260:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,308:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,309:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,310:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,311:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,312:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,312:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,324:INFO:Calculating mean and std
2025-03-19 21:50:23,326:INFO:Creating metrics dataframe
2025-03-19 21:50:23,330:INFO:Finalizing model
2025-03-19 21:50:23,384:INFO:Uploading results into container
2025-03-19 21:50:23,385:INFO:Uploading model into container now
2025-03-19 21:50:23,386:INFO:_master_model_container: 18
2025-03-19 21:50:23,386:INFO:_display_container: 4
2025-03-19 21:50:23,386:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best')
2025-03-19 21:50:23,386:INFO:create_model() successfully completed......................................
2025-03-19 21:50:23,574:INFO:SubProcess create_model() end ==================================
2025-03-19 21:50:23,576:INFO:choose_better activated
2025-03-19 21:50:23,579:INFO:SubProcess create_model() called ==================================
2025-03-19 21:50:23,579:INFO:Initializing create_model()
2025-03-19 21:50:23,579:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:50:23,579:INFO:Checking exceptions
2025-03-19 21:50:23,581:INFO:Importing libraries
2025-03-19 21:50:23,581:INFO:Copying training dataset
2025-03-19 21:50:23,584:INFO:Defining folds
2025-03-19 21:50:23,584:INFO:Declaring metric variables
2025-03-19 21:50:23,584:INFO:Importing untrained model
2025-03-19 21:50:23,584:INFO:Declaring custom model
2025-03-19 21:50:23,585:INFO:Decision Tree Classifier Imported successfully
2025-03-19 21:50:23,585:INFO:Starting cross validation
2025-03-19 21:50:23,586:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-19 21:50:23,760:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,764:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,768:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,772:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,777:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,781:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,782:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,785:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,790:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,807:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,809:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,812:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,814:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,815:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,818:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,829:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,833:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,841:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,853:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,858:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,859:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,863:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,863:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,909:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,912:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,913:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,916:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,919:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,923:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Teknologi Rekayasa Multimedia') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-03-19 21:50:23,936:INFO:Calculating mean and std
2025-03-19 21:50:23,936:INFO:Creating metrics dataframe
2025-03-19 21:50:23,938:INFO:Finalizing model
2025-03-19 21:50:23,986:INFO:Uploading results into container
2025-03-19 21:50:23,986:INFO:Uploading model into container now
2025-03-19 21:50:23,986:INFO:_master_model_container: 19
2025-03-19 21:50:23,986:INFO:_display_container: 5
2025-03-19 21:50:23,986:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best')
2025-03-19 21:50:23,987:INFO:create_model() successfully completed......................................
2025-03-19 21:50:24,160:INFO:SubProcess create_model() end ==================================
2025-03-19 21:50:24,161:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best') result for Accuracy is 0.9114
2025-03-19 21:50:24,161:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best') result for Accuracy is 0.9171
2025-03-19 21:50:24,161:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best') is best model
2025-03-19 21:50:24,161:INFO:choose_better completed
2025-03-19 21:50:24,169:INFO:_master_model_container: 19
2025-03-19 21:50:24,170:INFO:_display_container: 4
2025-03-19 21:50:24,170:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best')
2025-03-19 21:50:24,170:INFO:tune_model() successfully completed......................................
2025-03-19 21:50:24,438:INFO:Initializing evaluate_model()
2025-03-19 21:50:24,438:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-03-19 21:50:24,453:INFO:Initializing plot_model()
2025-03-19 21:50:24,453:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-19 21:50:24,453:INFO:Checking exceptions
2025-03-19 21:50:24,455:INFO:Preloading libraries
2025-03-19 21:50:24,455:INFO:Copying training dataset
2025-03-19 21:50:24,455:INFO:Plot type: pipeline
2025-03-19 21:50:24,725:INFO:Visual Rendered Successfully
2025-03-19 21:50:24,923:INFO:plot_model() successfully completed......................................
2025-03-19 21:50:24,926:INFO:Initializing finalize_model()
2025-03-19 21:50:24,926:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-03-19 21:50:24,927:INFO:Finalizing DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best')
2025-03-19 21:50:24,930:INFO:Initializing create_model()
2025-03-19 21:50:24,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-03-19 21:50:24,930:INFO:Checking exceptions
2025-03-19 21:50:24,933:INFO:Importing libraries
2025-03-19 21:50:24,933:INFO:Copying training dataset
2025-03-19 21:50:24,933:INFO:Defining folds
2025-03-19 21:50:24,933:INFO:Declaring metric variables
2025-03-19 21:50:24,933:INFO:Importing untrained model
2025-03-19 21:50:24,933:INFO:Declaring custom model
2025-03-19 21:50:24,934:INFO:Decision Tree Classifier Imported successfully
2025-03-19 21:50:24,935:INFO:Cross validation set to False
2025-03-19 21:50:24,935:INFO:Fitting Model
2025-03-19 21:50:25,010:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='entropy', max_depth=10,
                                        max_features=1.0, max_leaf_nodes=None,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5, min_samples_split=7,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4824,
                                        splitter='best'))],
         verbose=False)
2025-03-19 21:50:25,010:INFO:create_model() successfully completed......................................
2025-03-19 21:50:25,191:INFO:_master_model_container: 19
2025-03-19 21:50:25,191:INFO:_display_container: 4
2025-03-19 21:50:25,206:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='entropy', max_depth=10,
                                        max_features=1.0, max_leaf_nodes=None,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5, min_samples_split=7,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4824,
                                        splitter='best'))],
         verbose=False)
2025-03-19 21:50:25,206:INFO:finalize_model() successfully completed......................................
2025-03-19 21:50:25,433:INFO:Initializing predict_model()
2025-03-19 21:50:25,433:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Rata-rata Nilai Masuk PENS'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=...
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('actual_estimator',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='entropy', max_depth=10,
                                        max_features=1.0, max_leaf_nodes=None,
                                        min_impurity_decrease=0.001,
                                        min_samples_leaf=5, min_samples_split=7,
                                        min_weight_fraction_leaf=0.0,
                                        monotonic_cst=None, random_state=4824,
                                        splitter='best'))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000020B110A5800>)
2025-03-19 21:50:25,433:INFO:Checking exceptions
2025-03-19 21:50:25,433:INFO:Preloading libraries
2025-03-19 21:50:25,435:INFO:Set up data.
2025-03-19 21:50:25,438:INFO:Set up index.
2025-03-19 21:53:31,767:INFO:Initializing plot_model()
2025-03-19 21:53:31,767:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), plot=parameter, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-19 21:53:31,768:INFO:Checking exceptions
2025-03-19 21:53:31,769:INFO:Preloading libraries
2025-03-19 21:53:31,769:INFO:Copying training dataset
2025-03-19 21:53:31,769:INFO:Plot type: parameter
2025-03-19 21:53:31,774:INFO:Visual Rendered Successfully
2025-03-19 21:53:31,958:INFO:plot_model() successfully completed......................................
2025-03-19 21:53:34,149:INFO:Initializing plot_model()
2025-03-19 21:53:34,149:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-19 21:53:34,149:INFO:Checking exceptions
2025-03-19 21:53:34,152:INFO:Preloading libraries
2025-03-19 21:53:34,153:INFO:Copying training dataset
2025-03-19 21:53:34,154:INFO:Plot type: pipeline
2025-03-19 21:53:34,297:INFO:Visual Rendered Successfully
2025-03-19 21:53:34,477:INFO:plot_model() successfully completed......................................
2025-03-19 21:53:50,862:INFO:Initializing plot_model()
2025-03-19 21:53:50,862:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), plot=parameter, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-19 21:53:50,862:INFO:Checking exceptions
2025-03-19 21:53:50,866:INFO:Preloading libraries
2025-03-19 21:53:50,867:INFO:Copying training dataset
2025-03-19 21:53:50,867:INFO:Plot type: parameter
2025-03-19 21:53:50,872:INFO:Visual Rendered Successfully
2025-03-19 21:53:51,039:INFO:plot_model() successfully completed......................................
2025-03-19 21:53:58,591:INFO:Initializing plot_model()
2025-03-19 21:53:58,591:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), plot=confusion_matrix, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-19 21:53:58,591:INFO:Checking exceptions
2025-03-19 21:53:58,594:INFO:Preloading libraries
2025-03-19 21:53:58,595:INFO:Copying training dataset
2025-03-19 21:53:58,595:INFO:Plot type: confusion_matrix
2025-03-19 21:53:58,666:INFO:Fitting Model
2025-03-19 21:53:58,705:WARNING:c:\Users\Ardiansyah\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2025-03-19 21:53:58,706:INFO:Scoring test/hold-out set
2025-03-19 21:53:59,047:INFO:Visual Rendered Successfully
2025-03-19 21:53:59,292:INFO:plot_model() successfully completed......................................
2025-03-19 21:53:59,692:INFO:Initializing plot_model()
2025-03-19 21:53:59,692:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), plot=threshold, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-19 21:53:59,692:INFO:Checking exceptions
2025-03-19 21:54:04,141:INFO:Initializing plot_model()
2025-03-19 21:54:04,141:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), plot=tree, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-19 21:54:04,141:INFO:Checking exceptions
2025-03-19 21:54:04,145:INFO:Preloading libraries
2025-03-19 21:54:04,146:INFO:Copying training dataset
2025-03-19 21:54:04,146:INFO:Plot type: tree
2025-03-19 21:54:04,161:INFO:Plotting decision trees
2025-03-19 21:54:04,196:INFO:Plotting tree 0
2025-03-19 21:54:05,609:INFO:Visual Rendered Successfully
2025-03-19 21:54:05,781:INFO:plot_model() successfully completed......................................
2025-03-19 21:54:10,696:INFO:Initializing plot_model()
2025-03-19 21:54:10,696:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), plot=dimension, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-19 21:54:10,696:INFO:Checking exceptions
2025-03-19 21:54:10,701:INFO:Preloading libraries
2025-03-19 21:54:10,702:INFO:Copying training dataset
2025-03-19 21:54:10,702:INFO:Plot type: dimension
2025-03-19 21:54:10,771:INFO:Fitting StandardScaler()
2025-03-19 21:54:10,788:INFO:Fitting PCA()
2025-03-19 21:54:10,854:INFO:Fitting & Transforming Model
2025-03-19 21:54:11,050:INFO:Visual Rendered Successfully
2025-03-19 21:54:11,307:INFO:plot_model() successfully completed......................................
2025-03-19 21:54:16,580:INFO:Initializing plot_model()
2025-03-19 21:54:16,580:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), plot=rfe, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-19 21:54:16,580:INFO:Checking exceptions
2025-03-19 21:54:19,243:INFO:Initializing plot_model()
2025-03-19 21:54:19,243:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), plot=learning, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-19 21:54:19,243:INFO:Checking exceptions
2025-03-19 21:54:19,245:INFO:Preloading libraries
2025-03-19 21:54:19,246:INFO:Copying training dataset
2025-03-19 21:54:19,246:INFO:Plot type: learning
2025-03-19 21:54:19,308:INFO:Fitting Model
2025-03-19 21:54:19,734:INFO:Visual Rendered Successfully
2025-03-19 21:54:19,903:INFO:plot_model() successfully completed......................................
2025-03-19 21:54:23,336:INFO:Initializing plot_model()
2025-03-19 21:54:23,336:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000020B749BE3D0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='entropy',
                       max_depth=10, max_features=1.0, max_leaf_nodes=None,
                       min_impurity_decrease=0.001, min_samples_leaf=5,
                       min_samples_split=7, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4824, splitter='best'), plot=parameter, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-03-19 21:54:23,338:INFO:Checking exceptions
2025-03-19 21:54:23,340:INFO:Preloading libraries
2025-03-19 21:54:23,341:INFO:Copying training dataset
2025-03-19 21:54:23,341:INFO:Plot type: parameter
2025-03-19 21:54:23,346:INFO:Visual Rendered Successfully
2025-03-19 21:54:23,522:INFO:plot_model() successfully completed......................................
